{
	"folder_history":
	[
		"/Users/anelson/narr/ns_services/ns_platform_core",
		"/Users/anelson/narr/ns_services/ns_platform_core/src",
		"/Users/anelson/narr/ns_services/document_generation/common",
		"/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core",
		"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_core",
		"/Users/anelson/narr/ns_quiver/client/src/ns_quiver_client",
		"/Users/anelson/workspace/languages/llama",
		"/Users/anelson/workspace/languages/llama/src",
		"/Users/anelson/narr/ns_node_packages/ishmael",
		"/Users/anelson/narr/ns_services/workflow",
		"/Users/anelson/narr/ns_services/ns_workflow",
		"/Users/anelson/.snakegit",
		"/Users/anelson/narr/ns_node_packages/narrwhal",
		"/Users/anelson/narr/ns_quiver/cli",
		"/Users/anelson/narr/ns_quiver/client",
		"/Users/anelson/.snakegit/bin",
		"/Users/anelson/narr/ns_lib",
		"/Users/anelson/workspace/languages/llama/thoughts",
		"/Users/anelson/workspace/haskell",
		"/Users/anelson/narr/ns_apps/src/backdrop/static/js",
		"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/SublimeHaskell",
		"/Users/anelson/narr/ns_apps/src/backdrop"
	],
	"last_version": 3059,
	"last_window_id": 47,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 856.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"tempalte",
						"template_info"
					],
					[
						"enc",
						"encoding"
					],
					[
						"content",
						"content_type"
					],
					[
						"template",
						"template_info"
					],
					[
						"resource",
						"resource_type"
					],
					[
						"sera",
						"serialization_mode"
					],
					[
						"serial",
						"serialization_mode"
					],
					[
						"ser",
						"serialization_mode"
					],
					[
						"get",
						"get_template_from_url"
					],
					[
						"modu",
						"module_name"
					],
					[
						"Mod",
						"ModuleNotFoundError"
					],
					[
						"a",
						"attr_name"
					],
					[
						"__g",
						"__getattribute__"
					],
					[
						"mo",
						"modules_dir"
					],
					[
						"modules",
						"modules_dir"
					],
					[
						"__get",
						"__getattribute"
					],
					[
						"modul",
						"modules_dir"
					],
					[
						"data",
						"data_key"
					],
					[
						"au",
						"author_configs_version"
					],
					[
						"ass",
						"assert_docx_equal"
					],
					[
						"some",
						"some_chart"
					],
					[
						"assert",
						"assert_called_with"
					],
					[
						"Ish",
						"IshmaelResponse"
					],
					[
						"m_repl",
						"m_replacements"
					],
					[
						"render",
						"rendering_plugins"
					],
					[
						"polyp",
						"polyp_host"
					],
					[
						"additional",
						"additional_arguments"
					],
					[
						"add",
						"additional_arguments"
					],
					[
						"make",
						"make_charts"
					],
					[
						"poly",
						"polyp_host"
					],
					[
						"ba",
						"base64-encoded"
					],
					[
						"b",
						"base64"
					],
					[
						"build",
						"build_charts"
					],
					[
						"bool",
						"boolQModel"
					],
					[
						"fea",
						"featureNamesToModelNames"
					],
					[
						"feat",
						"featureNameMapBuilt"
					],
					[
						"model",
						"modelQid"
					],
					[
						"J",
						"JObj"
					],
					[
						"Oo",
						"OperationType"
					],
					[
						"Over",
						"OverFlowException"
					],
					[
						"Var",
						"VArg"
					],
					[
						"Val",
						"ValueTable"
					],
					[
						"der",
						"derefArg"
					],
					[
						"def",
						"defaultTypingState"
					],
					[
						"run",
						"runTypingWith"
					],
					[
						"uni",
						"unitV"
					],
					[
						"flow",
						"flowTests"
					],
					[
						"pri",
						"printVal"
					],
					[
						"thro",
						"throwErrorC"
					],
					[
						"th",
						"throwErrorC"
					],
					[
						"defa",
						"defaultFrame"
					],
					[
						"VA",
						"VArg"
					],
					[
						"type",
						"typeAndEval"
					],
					[
						"thr",
						"throwErrorC"
					],
					[
						"Er",
						"ErrorList"
					],
					[
						"inst",
						"instantiated"
					],
					[
						"ns",
						"nameSpaceTable"
					],
					[
						"nam",
						"nameSpaceTable"
					],
					[
						"full",
						"fullName"
					],
					[
						"name",
						"nameSpaceTable"
					],
					[
						"pExpr",
						"pExprOrBlock"
					],
					[
						"rend",
						"renderNamespace"
					],
					[
						"Nam",
						"NameSpace"
					]
				]
			},
			"build_system": "",
			"command_palette":
			{
				"height": 147.0,
				"selected_items":
				[
					[
						"add",
						"Project: Add Folder"
					],
					[
						"ad",
						"Project: Add Folder"
					],
					[
						"a",
						"Project: Add Folder"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 167.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/anelson/narr/ns_services/document_generation/common/src/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/banking/bank_intel/derivations_overdue.yaml",
				"/Users/anelson/narr/ns_services/ns_workflow/dev_guide.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py",
				"/Users/anelson/narr/ns_services/ns_workflow/CHANGELOG.md",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/coverage/htmlfiles/coverage_html.js",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/baleen/aws_processer.py",
				"/Users/anelson/narr/ns_services/ns_workflow/application.log",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/bundle_image",
				"/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core/binary.py",
				"/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core/service.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/flow_engine/config_loader.py",
				"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py",
				"/Users/anelson/narr/ns_services/workflow/src/workflow/engine/common.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/flow_engine/results.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/flow_engine2/retopic.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/entry_points.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/error.log",
				"/Users/anelson/narr/ns_services/workflow/src/workflow/http/v1/views.py",
				"/Users/anelson/narr/ns_services/ns_workflow/Vagrantfile",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/dynamodb/table.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/pytz/zoneinfo/Asia/Tel_Aviv",
				"/Users/anelson/narr/ns_services/ns_workflow/test-requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_publishing_client/encoder.py",
				"/Users/anelson/workspace/languages/llama/thoughts/deep mutable and desugaring for.md",
				"/Users/anelson/narr/ns_services/workflow/src/workflow/batcher/v1/configs.py",
				"/Users/anelson/workspace/languages/llama/thoughts/references oh my.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/resize_ebs_instance.py",
				"/Users/anelson/narr/ns_services/ns_workflow/requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/batcher/v1/configs.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/views/configs.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/quiver/configs.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/coverage",
				"/Users/anelson/workspace/python/silly.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/decorators.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/ishmael_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/v2_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/ns_prop.py.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/factories.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
				"/Users/anelson/narr/ns_lib/src/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/server.py",
				"/Users/anelson/workspace/python/wordcount.py",
				"/Users/anelson/workspace/c++/lambdas/hello_lambda.cpp",
				"/Users/anelson/workspace/languages/llama/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/more on traits.md",
				"/Users/anelson/workspace/languages/llama/thoughts/print module",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
				"/Users/anelson/.ssh/config",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/notification_schedules.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/encodings/string_escape.py",
				"/Users/anelson/narr/ns_services/ns_workflow/setup.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/testsuite/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/raven/transport/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_delivery_plugins/http_delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/celery/task/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/https_connection.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_db/factory/happybase_table_factory.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/test_data/hello.docx",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/v2_sample_request.json",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring_cache.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/author_config_fixture.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/aws_util.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/functional/workflow_outofband_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/wftest",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/delivery_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/charting_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/rendering_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/decorators_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/v2/job_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/monitoring/feed_aggregator.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/uwsgi/ns_workflow.yaml.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/doc_gen_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/dependency_links.txt",
				"/Users/anelson/workspace/languages/llama/thoughts/Enforcing functional purity in Llama.md",
				"/usr/local/Library/Formula/imagemagick.rb",
				"/Users/anelson/workspace/languages/llama/src/EvaluatorLib.hs",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/services/data_engine_client.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/data_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_data_btn/mongoeng/football/ingest_team_names.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/ishmael.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/config/install-sh",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with member variables.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/text.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/esb_config.py",
				"/Users/anelson/workspace/languages/llama/src/TypeChecker.hs",
				"/Users/anelson/narr/misc/interview notes/Frederic Zapata",
				"/Users/anelson/workspace/languages/llama/thoughts/blocks.md",
				"/Users/anelson/workspace/languages/llama/src/Parser.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/src/types/instances.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/instances.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/inline-style-tag.html",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/asia/ho_chi_minh.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/code-block-html-escape.html",
				"/Users/anelson/narr/ns_apps/src/backdrop/static/js/ishmael.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/derivations.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/libyaml/deps/yaml/src/tests/example-deconstructor-alt.c",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/antarctica/davis.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/america/puerto_rico.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/package.json",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/ishmael.js",
				"/Users/anelson/zsh-config/extras.sh",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/jade/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/uglify-js/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/test/test_underscore/utility.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/mocha/lib/utils.js"
			],
			"find":
			{
				"height": 26.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/Users/anelson/narr/ns_services/workflow/src",
					"/Users/anelson/narr/ns_services/workflow",
					"/Users/anelson/narr/ns_services/workflow/src",
					"/Users/anelson/narr/ns_services/ns_workflow/src",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/narrwhal",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/ishmael"
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"\"",
					"file_ids",
					"json",
					"Result",
					"resource_type",
					"valid",
					"get_project_version_url",
					"Quiver",
					"rendering",
					"get_rendering",
					"slip",
					"Envir",
					"Environment",
					"MODULES_DIR",
					"ishmael",
					"write",
					"self.addEventListener",
					"addEventListener",
					"Worker",
					"addEv",
					"setD",
					"setupPequod",
					"setupIshmael",
					"\"",
					"xml_to_",
					"\"",
					"deprecated",
					"get_replacements",
					"xml_to_charts",
					"ClientException",
					"self.client.",
					"self.",
					"polyp_host",
					"self.",
					"self, ",
					"_xml_to",
					"charts",
					"qid_to_content",
					"self, ",
					"build_charts",
					"self.",
					"caches",
					"fullP",
					"getFeature",
					"length",
					"newFeature",
					"handle",
					"resolve",
					"getFeature",
					"name",
					"getFeatures",
					"child",
					"getFea",
					"get",
					"coffee",
					"model",
					"resolve",
					"maxWrittenCount",
					"getFeature",
					"context",
					"handleMiss",
					"handleMissing",
					"handle",
					"Test ",
					"portfo",
					"@recurse",
					"compile",
					"total_return",
					"computeClosure",
					"getSymT",
					"log'",
					"Render Ty",
					"log'",
					"unify",
					"builtI",
					"runTypingWi",
					"defaultState",
					"pParens",
					"pTerm",
					"pLambda",
					"numNumOp",
					"whoo",
					"pushWith",
					"=>",
					"SymbolTable",
					"symTable",
					"VTupl",
					"throwError",
					"throwError'",
					"throwErrorC",
					"TypingError",
					"litTyp",
					"Int",
					"setType",
					"pExprO",
					"ziffyDiffy",
					"pBody",
					"pDefine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"'",
					"is_valid",
					"self.modules_dir",
					"'",
					"ServerException",
					"",
					"Tester ",
					"@rec",
					"defaultTypingState",
					"numBoolOp",
					"TypeTable",
					"ValueTable",
					"vTable",
					"throwError1",
					"throwErrorC",
					"ErrorList",
					"Num",
					"poop"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 26.0
			},
			"input":
			{
				"height": 34.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 373.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.haskell_error_checker":
			{
				"height": 118.0
			},
			"output.haskell_sublime_load":
			{
				"height": 118.0
			},
			"replace":
			{
				"height": 48.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"doc_gen",
						"ns_workflow/src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"",
						"common/src/ns_doc_gen/api.py"
					],
					[
						"api",
						"common/src/ns_doc_gen/api.py"
					],
					[
						"binary",
						"ns_core/binary.py"
					],
					[
						"client",
						"ns_quiver_client/client.py"
					],
					[
						"engine",
						"workflow/src/workflow/engine/v2/engine.py"
					],
					[
						"views",
						"workflow/src/workflow/http/v2/views.py"
					],
					[
						"rendering",
						"ns_workflow/src/ns_workflow/plugins/rendering.py"
					],
					[
						"configs",
						"workflow/src/workflow/batcher/v1/configs.py"
					],
					[
						"docx",
						"ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py"
					],
					[
						"ns_pro",
						"ns_workflow/_gb/gbtemplate/ns_prop.py.mustache"
					],
					[
						"server.py",
						"ns_workflow/src/ns_workflow/server.py"
					],
					[
						"htt",
						"vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py"
					],
					[
						"server",
						"tests/unit/server_test.py"
					],
					[
						"req",
						"requirements.txt"
					],
					[
						"autho",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"v2_test",
						"tests/integ/v2_test.py"
					],
					[
						"authoring",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"authori",
						"src/ns_workflow/plugins/authoring.py"
					],
					[
						"fac",
						"src/ns_workflow/factories.py"
					],
					[
						"doc",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"doc_ge",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"factor",
						"src/ns_workflow/factories.py"
					],
					[
						"deco",
						"src/ns_workflow/decorators.py"
					],
					[
						"decot",
						"tests/unit/decorators_test.py"
					],
					[
						"render",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"deliv",
						"tests/unit/plugins/delivery_test.py"
					],
					[
						"charting_",
						"tests/unit/plugins/charting_test.py"
					],
					[
						"ns_",
						"test_configs/ns_prop.py"
					],
					[
						"charting",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"decore",
						"tests/unit/decorators_test.py"
					],
					[
						"doc_",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"ishm",
						"tests/integ/ishmael_test.py"
					],
					[
						"char",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"instances",
						"ishmael/src/types/instances.coffee"
					],
					[
						"proj",
						"ishmael/lib/project.js"
					],
					[
						"instan",
						"ishmael/lib/types/instances.js"
					],
					[
						"scrimsh",
						"ishmael/src/types/scrimshaw.coffee"
					],
					[
						"ev",
						"Evaluator.hs"
					],
					[
						"parserte",
						"ParserTests.hs"
					],
					[
						"eva",
						"Evaluator.hs"
					],
					[
						"typ",
						"TypeChecker.hs"
					],
					[
						"par",
						"ParserTests.hs"
					],
					[
						"te",
						"Tests.hs"
					],
					[
						"p",
						"ParserTests.hs"
					],
					[
						"t",
						"TypeChecker.hs"
					],
					[
						"com",
						"Common.hs"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 187.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1436.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"Binar",
						"BinaryObject"
					],
					[
						"enc",
						"encoded"
					],
					[
						"tempalte",
						"template_info"
					],
					[
						"content",
						"content_type"
					],
					[
						"template",
						"template_info"
					],
					[
						"resource",
						"resource_type"
					],
					[
						"sera",
						"serialization_mode"
					],
					[
						"serial",
						"serialization_mode"
					],
					[
						"ser",
						"serialization_mode"
					],
					[
						"get",
						"get_template_from_url"
					],
					[
						"modu",
						"module_name"
					],
					[
						"Mod",
						"ModuleNotFoundError"
					],
					[
						"a",
						"attr_name"
					],
					[
						"__g",
						"__getattribute__"
					],
					[
						"mo",
						"modules_dir"
					],
					[
						"modules",
						"modules_dir"
					],
					[
						"__get",
						"__getattribute"
					],
					[
						"modul",
						"modules_dir"
					],
					[
						"data",
						"data_key"
					],
					[
						"au",
						"author_configs_version"
					],
					[
						"ass",
						"assert_docx_equal"
					],
					[
						"some",
						"some_chart"
					],
					[
						"assert",
						"assert_called_with"
					],
					[
						"Ish",
						"IshmaelResponse"
					],
					[
						"m_repl",
						"m_replacements"
					],
					[
						"render",
						"rendering_plugins"
					],
					[
						"polyp",
						"polyp_host"
					],
					[
						"additional",
						"additional_arguments"
					],
					[
						"add",
						"additional_arguments"
					],
					[
						"make",
						"make_charts"
					],
					[
						"poly",
						"polyp_host"
					],
					[
						"ba",
						"base64-encoded"
					],
					[
						"b",
						"base64"
					],
					[
						"build",
						"build_charts"
					],
					[
						"bool",
						"boolQModel"
					],
					[
						"fea",
						"featureNamesToModelNames"
					],
					[
						"feat",
						"featureNameMapBuilt"
					],
					[
						"model",
						"modelQid"
					],
					[
						"J",
						"JObj"
					],
					[
						"Oo",
						"OperationType"
					],
					[
						"Over",
						"OverFlowException"
					],
					[
						"Var",
						"VArg"
					],
					[
						"Val",
						"ValueTable"
					],
					[
						"der",
						"derefArg"
					],
					[
						"def",
						"defaultTypingState"
					],
					[
						"run",
						"runTypingWith"
					],
					[
						"uni",
						"unitV"
					],
					[
						"flow",
						"flowTests"
					],
					[
						"pri",
						"printVal"
					],
					[
						"thro",
						"throwErrorC"
					],
					[
						"th",
						"throwErrorC"
					],
					[
						"defa",
						"defaultFrame"
					],
					[
						"VA",
						"VArg"
					],
					[
						"type",
						"typeAndEval"
					],
					[
						"thr",
						"throwErrorC"
					],
					[
						"Er",
						"ErrorList"
					],
					[
						"inst",
						"instantiated"
					],
					[
						"ns",
						"nameSpaceTable"
					],
					[
						"nam",
						"nameSpaceTable"
					],
					[
						"full",
						"fullName"
					],
					[
						"name",
						"nameSpaceTable"
					],
					[
						"pExpr",
						"pExprOrBlock"
					],
					[
						"rend",
						"renderNamespace"
					],
					[
						"Nam",
						"NameSpace"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
					"settings":
					{
						"buffer_size": 1812,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
					"settings":
					{
						"buffer_size": 451,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
					"settings":
					{
						"buffer_size": 9939,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/config.py",
					"settings":
					{
						"buffer_size": 5379,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_quiver/client/src/ns_quiver_client/client.py",
					"settings":
					{
						"buffer_size": 25666,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/workspace/python/serialize/person.py",
					"settings":
					{
						"buffer_size": 465,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/workflow/src/workflow/http/v2/views.py",
					"settings":
					{
						"buffer_size": 2378,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/rendering.py",
					"settings":
					{
						"buffer_size": 2977,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Searching 8125 files for \"rendering\" (case sensitive)\n\n/Users/anelson/narr/ns_services/ns_workflow/error.log:\n 2040    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py\", line 20, in __call__\n 2041      result = self._plugin(context, config, message)\n 2042:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py\", line 64, in __call__\n 2043      additional_arguments)\n 2044:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py\", line 28, in render_docx\n 2045      charts = xml_to_charts(xml, 'base64', 'png', polyp_host)\n 2046    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py\", line 83, in xml_to_charts\n ....\n 2079    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py\", line 20, in __call__\n 2080      result = self._plugin(context, config, message)\n 2081:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py\", line 64, in __call__\n 2082      additional_arguments)\n 2083:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py\", line 28, in render_docx\n 2084      charts = xml_to_charts(xml, 'base64', 'png', polyp_host)\n 2085    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py\", line 83, in xml_to_charts\n ....\n 2152    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py\", line 20, in __call__\n 2153      result = self._plugin(context, config, message)\n 2154:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py\", line 64, in __call__\n 2155      additional_arguments)\n 2156:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py\", line 31, in render_docx\n 2157      replacements = get_replacements(mapping, xml, charts)\n 2158    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py\", line 161, in get_replacements\n ....\n 2189    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py\", line 20, in __call__\n 2190      result = self._plugin(context, config, message)\n 2191:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py\", line 64, in __call__\n 2192      additional_arguments)\n 2193:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py\", line 31, in render_docx\n 2194      replacements = get_replacements(mapping, xml, charts)\n 2195    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py\", line 161, in get_replacements\n ....\n 2217  2014-03-03 09:48:33,774 [DEBUG] ci:workflow; 3ef7ef46-a19e-4030-b447-72d050f5c60d; \"POST /v1/authoring/write/ HTTP/1.1\" 200 565\n 2218  2014-03-03 09:48:33,775 [INFO] ci:workflow; 3ef7ef46-a19e-4030-b447-72d050f5c60d; 127.0.0.1 - - [03/Mar/2014 09:48:33] \"POST /v2/jobs/ HTTP/1.1\" 200 -\n 2219: 2014-03-03 09:49:56,981 [INFO] ci:workflow; 3ef7ef46-a19e-4030-b447-72d050f5c60d;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2220  2014-03-03 09:49:57,043 [INFO] ci:workflow; None;  * Restarting with reloader\n 2221  2014-03-03 09:50:00,261 [DEBUG] ci:workflow; None; Using access key found in config file.\n ....\n 2251  2014-03-03 09:50:00,470 [INFO] ci:workflow; None; Starting new HTTP connection (1): localhost\n 2252  2014-03-03 09:50:00,475 [DEBUG] ci:workflow; None; \"GET /resource_types/ HTTP/1.1\" 200 2051\n 2253: 2014-03-03 09:50:10,822 [INFO] ci:workflow; None;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2254  2014-03-03 09:50:10,873 [INFO] ci:workflow; None;  * Restarting with reloader\n 2255  2014-03-03 09:50:13,549 [DEBUG] ci:workflow; None; Using access key found in config file.\n ....\n 2285  2014-03-03 09:50:13,732 [INFO] ci:workflow; None; Starting new HTTP connection (1): localhost\n 2286  2014-03-03 09:50:13,737 [DEBUG] ci:workflow; None; \"GET /resource_types/ HTTP/1.1\" 200 2051\n 2287: 2014-03-03 09:51:20,519 [INFO] ci:workflow; None;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2288  2014-03-03 09:51:20,564 [INFO] ci:workflow; None;  * Restarting with reloader\n 2289  2014-03-03 09:51:23,839 [DEBUG] ci:workflow; None; Using access key found in config file.\n ....\n 2328    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py\", line 20, in __call__\n 2329      result = self._plugin(context, config, message)\n 2330:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py\", line 64, in __call__\n 2331      additional_arguments)\n 2332:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py\", line 31, in render_docx\n 2333      replacements = get_replacements(mapping, xml, charts)\n 2334    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py\", line 161, in get_replacements\n ....\n 2413  2014-03-03 11:45:28,798 [DEBUG] ci:workflow; b4bfbca6-b257-4d44-9c2c-98c4474b4941; \"POST /v1/authoring/write/ HTTP/1.1\" 200 565\n 2414  2014-03-03 11:45:28,799 [INFO] ci:workflow; b4bfbca6-b257-4d44-9c2c-98c4474b4941; 127.0.0.1 - - [03/Mar/2014 11:45:28] \"POST /v2/jobs/ HTTP/1.1\" 200 -\n 2415: 2014-03-03 11:46:42,678 [INFO] ci:workflow; b4bfbca6-b257-4d44-9c2c-98c4474b4941;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2416  2014-03-03 11:46:42,812 [INFO] ci:workflow; None;  * Restarting with reloader\n 2417  2014-03-03 11:46:46,743 [DEBUG] ci:workflow; None; Using access key found in config file.\n ....\n 2447  2014-03-03 11:46:46,965 [INFO] ci:workflow; None; Starting new HTTP connection (1): localhost\n 2448  2014-03-03 11:46:46,971 [DEBUG] ci:workflow; None; \"GET /resource_types/ HTTP/1.1\" 200 2051\n 2449: 2014-03-03 11:47:08,612 [INFO] ci:workflow; None;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2450  2014-03-03 11:47:08,689 [INFO] ci:workflow; None;  * Restarting with reloader\n 2451  2014-03-03 11:47:12,023 [DEBUG] ci:workflow; None; Using access key found in config file.\n ....\n 2538  2014-03-03 11:47:17,141 [DEBUG] ci:workflow; a53746de-b97e-4075-8684-74caf27b3ca6; \"POST /v1/authoring/write/ HTTP/1.1\" 200 565\n 2539  2014-03-03 11:47:17,142 [INFO] ci:workflow; a53746de-b97e-4075-8684-74caf27b3ca6; 127.0.0.1 - - [03/Mar/2014 11:47:17] \"POST /v2/jobs/ HTTP/1.1\" 200 -\n 2540: 2014-03-03 11:48:57,898 [INFO] ci:workflow; a53746de-b97e-4075-8684-74caf27b3ca6;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2541  2014-03-03 11:48:57,950 [INFO] ci:workflow; None;  * Restarting with reloader\n 2542  2014-03-03 11:49:01,335 [DEBUG] ci:workflow; None; Using access key found in config file.\n ....\n 2601    File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py\", line 20, in __call__\n 2602      result = self._plugin(context, config, message)\n 2603:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py\", line 64, in __call__\n 2604      additional_arguments)\n 2605:   File \"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py\", line 44, in render_docx\n 2606      assert doc['options']['encoding'] == 'base64', \"doc keys: %s, docopts keys, %s\" % (doc.keys(), doc.get('options').keys())\n 2607  KeyError: 'options'\n ....\n 2627  2014-03-03 11:49:10,911 [DEBUG] ci:workflow; 0e34192f-82eb-45f3-99bd-94d623f4bfda; \"POST /v1/authoring/write/ HTTP/1.1\" 200 565\n 2628  2014-03-03 11:49:10,912 [INFO] ci:workflow; 0e34192f-82eb-45f3-99bd-94d623f4bfda; 127.0.0.1 - - [03/Mar/2014 11:49:10] \"POST /v2/jobs/ HTTP/1.1\" 200 -\n 2629: 2014-03-03 11:49:39,532 [INFO] ci:workflow; 0e34192f-82eb-45f3-99bd-94d623f4bfda;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2630  2014-03-03 11:49:39,595 [INFO] ci:workflow; None;  * Restarting with reloader\n 2631  2014-03-03 11:49:42,914 [DEBUG] ci:workflow; None; Using access key found in config file.\n ....\n 2682  2014-03-03 11:49:45,330 [DEBUG] ci:workflow; 8fa65637-fdfa-43e7-a22b-1f6d53d0bf11; Saving image: docProps/thumbnail.jpeg\n 2683  2014-03-03 11:49:45,331 [DEBUG] ci:workflow; 8fa65637-fdfa-43e7-a22b-1f6d53d0bf11; Saved to: <StringIO.StringIO instance at 0x108293ab8>\n 2684: 2014-03-03 11:51:05,341 [INFO] ci:workflow; 8fa65637-fdfa-43e7-a22b-1f6d53d0bf11;  * Detected change in '/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py', reloading\n 2685  2014-03-03 11:51:05,391 [INFO] ci:workflow; None;  * Restarting with reloader\n 2686  2014-03-03 11:51:08,713 [DEBUG] ci:workflow; None; Using access key found in config file.\n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/PKG-INFO:\n   15  Provides: ns_workflow.plugins\n   16  Provides: ns_workflow.v2\n   17: Provides: ns_workflow.plugins.rendering_plugins\n   18  Provides: ns_workflow.v2.plugins\n   19  \n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/SOURCES.txt:\n   42  src/ns_workflow/plugins/multi.py\n   43  src/ns_workflow/plugins/publishing.py\n   44: src/ns_workflow/plugins/rendering.py\n   45  src/ns_workflow/plugins/statsmonkey.py\n   46  src/ns_workflow/plugins/test.py\n   47  src/ns_workflow/plugins/transforms.py\n   48: src/ns_workflow/plugins/rendering_plugins/__init__.py\n   49: src/ns_workflow/plugins/rendering_plugins/doc_gen.py\n   50: src/ns_workflow/plugins/rendering_plugins/text.py\n   51  src/ns_workflow/v2/__init__.py\n   52  src/ns_workflow/v2/plugins/__init__.py\n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/decorators.py:\n   64              else:\n   65                  # This deals with the fact the we have attached a copy of\n   66:                 # a publishing story to the rendering message that doesn't\n   67                  # serialize well.  At some point I'll extract this to a\n   68                  # more logical place\n   ..\n  104              if not isinstance(message, dict):\n  105                  # This deals with the fact the we have attached a copy of\n  106:                 # a publishing story to the rendering message that doesn't\n  107                  # serialize well.  At some point I'll extract this to a\n  108                  # more logical place\n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/factories.py:\n   24  from ns_workflow.plugins import charting\n   25  from ns_workflow.plugins import doc_gen\n   26: from ns_workflow.plugins import rendering\n   27  \n   28  \n   ..\n   74          engine.register_plugins(authoring_v2.PLUGINS)\n   75  \n   76:     engine.register_plugins(rendering.PLUGINS)\n   77      engine.register_plugins(test_v2.plugins)\n   78  \n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/interfaces/sync.py:\n   23  from ns.services.parcelling.parceller import ParcelFactory\n   24  from ns.services.parcelling.chart_parceller import ChartParceller\n   25: from ns.services.rendering.rendering_subscriber import RenderingSubscriber\n   26  from ns_story_record import StoryRecord, persist_story_record\n   27  from ns_ahab.data import DataServiceHTTPError\n   ..\n  355      rendered = renderer.render_story_from_StoryWrittenEvent(\n  356          message,\n  357:         rendering_config=config.get(\"rendering_config\", {})\n  358      )[0]\n  359      # Note that this does not in fact save a story to a database.\n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring.py:\n    9  from ns_publishing_service.publishing_document import PublishingQuery\n   10  from ns.services.author.author_service import AuthoringSubscriber\n   11: from ns.services.rendering.rendering_subscriber import RenderingSubscriber\n   12  from ns_core.logging.app_log import get_current_app_log as app_log\n   13  from ns_workflow.interfaces import async as async_module\n   ..\n   66  \n   67      def __call__(self, context, config, message):\n   68:         msg = (\"About to call rendering. Context: %s\\nConfig:\"\n   69                 \"%s\\nMessage: %s\\n\" % (context, config, message))\n   70          app_log().debug(msg)\n   ..\n   73          rendered = renderer.render_story_from_StoryWrittenEvent(\n   74              raw_story,\n   75:             rendering_config=config.get(\"rendering_config\", {})\n   76          )[0]\n   77          msg = \"Rendering completed. Result: %s\\n\" % rendered.get()\n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py:\n    3  \n    4  Internally, the actual plugin function `render` dispatches to a specific\n    5: renderer based on the renderer_key specified in a rendering configuration.\n    6  \n    7  Each `renderer` is just a function that takes the styled xml, the template,\n    .\n   12  '''\n   13  from workflow.engine import ServerException\n   14: from ns_workflow.plugins.rendering_plugins import text\n   15: from ns_workflow.plugins.rendering_plugins import doc_gen\n   16  from ns_core.logging.app_log import get_current_app_log as app_log\n   17  \n   ..\n   33      def _get_renderer(self, renderer_key):\n   34          '''\n   35:         Takes a `renderer_key` and returns the appropriate rendering function.\n   36          Raises an `exceptions.ServerException` if the renderer_key isn't\n   37          recognized.\n   ..\n   46      def __call__(self, context, config, message):\n   47          '''\n   48:         The top-level rendering function.\n   49          '''\n   50          styled_xml = message['styled_xml']\n   51:         configs = message['rendering_configs']\n   52  \n   53          rendered_documents = []\n   ..\n   70  \n   71  PLUGINS = [\n   72:     {'name': 'ns_workflow.plugins.rendering.render', 'plugin': Renderer}\n   73  ]\n   74  \n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py:\n    1  '''\n    2: Provides an interface to the ns_doc_gen api for the `rendering` plugin module.\n    3  Very similar to the `doc_gen` plugin and uses some of the functions in that module.\n    4  Here, however, we:\n    .\n   20      '''\n   21      Exposes the doc_gen functionality in a manner to be called as a `renderer`\n   22:     by the `rendering` plugin.\n   23      '''\n   24      # Get polyp host; make sure it's present.\n\n/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/text.py:\n    6  def render(styled_xml, template, mapping, additional_arguments):\n    7      '''\n    8:     The simplest rendering function.  Returns a flat string of all the text in\n    9      `styled_xml`.\n   10      '''\n\n/Users/anelson/narr/ns_services/ns_workflow/tests/integ/v2_test.py:\n   52          self.assertIn('Congrats on your new Quill Pipeline!', styled_xml)\n   53  \n   54:     def test_text_rendering(self):\n   55          job = {\n   56              'version': '2.0',\n   ..\n   64                  },\n   65                  {\n   66:                     'name': 'ns_workflow.plugins.rendering.render',\n   67                  }\n   68              ],\n   69              'message': {\n   70                  'data': {},\n   71:                 'rendering_configs': [\n   72                      {\n   73                          'renderer_key': 'plain_text_v1',\n   ..\n   91          self.assertEqual(package['content-type'], 'text/plain')\n   92  \n   93:     def test_docx_rendering(self):\n   94          template = base64.b64encode(get_file('hello.docx'))\n   95          mapping = [ {'type': 'text',\n   ..\n  102              'version': '2.0',\n  103              'context': {},\n  104:             'routing_slip': [{'name': 'ns_workflow.plugins.rendering.render'}],\n  105              'message': {\n  106                  'data': {},\n  107                  'styled_xml': '<IshmaelResponse><ns_phrase qid=\"123heeheehee\">Henry Higgins</ns_phrase><ns_phrase qid=\"hahahahohoho\">43</ns_phrase></IshmaelResponse>',\n  108:                 'rendering_configs': [\n  109                      {\n  110                          'renderer_key': 'docx_v1',\n\n/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/rendering_test.py:\n    3  from mock import Mock, patch\n    4  from ns_core.logging.app_log import set_current_app_log, get_current_app_log\n    5: from ns_workflow.plugins import rendering\n    6  from workflow.engine import ServerException\n    7: from ns_workflow.plugins.rendering_plugins.doc_gen import render_docx\n    8  \n    9  \n   ..\n   21          message = {\n   22              'styled_xml': '<IshmaelResponse>Hello, world!</IshmaelResponse>',\n   23:             'rendering_configs': [\n   24                  {\n   25                      'renderer_key':'plain_text_v1',\n   ..\n   29          }\n   30  \n   31:         renderer = rendering.Renderer({}, None)\n   32          result = renderer(context, config, message)\n   33          documents = result['rendered_documents']\n   ..\n   42          message = {\n   43              'styled_xml': '<IshmaelResponse>Hello, world!</IshmaelResponse>',\n   44:             'rendering_configs': [\n   45                  {\n   46                      'renderer_key':'not_a_real_key',\n   ..\n   50          }\n   51  \n   52:         renderer = rendering.Renderer({}, None)\n   53          with self.assertRaises(ServerException):\n   54              renderer(context, config, message)\n   55  \n   56  \n   57:     @patch('ns_workflow.plugins.rendering_plugins.doc_gen.render_docx')\n   58      def test_use_render_docx_plugin(self, m_render_docx):\n   59:         '''Tests that the Renderer can call the doc_gen rendering plugin.'''\n   60          context = {}\n   61          config = {}\n   ..\n   66          message = {\n   67              'styled_xml': xml,\n   68:             'rendering_configs': [\n   69                  {\n   70                      'renderer_key':'docx_v1',\n   ..\n   77          m_render_docx.return_value = {'document': \"lol I'm base64\",\n   78                                        'content-type': 'docx-type'}\n   79:         renderer = rendering.Renderer(resources, None)\n   80          result = renderer(context, config, message)\n   81  \n   ..\n   88          self.assertEqual(documents[0]['content-type'], 'docx-type')\n   89  \n   90:     @patch('ns_workflow.plugins.rendering_plugins.doc_gen.replace')\n   91:     @patch('ns_workflow.plugins.rendering_plugins.doc_gen.get_replacements')\n   92:     @patch('ns_workflow.plugins.rendering_plugins.doc_gen.xml_to_charts')\n   93      def test_render_docx(self, m_xml2charts, m_get_reps, m_replace):\n   94          '''\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/gs/acl.py:\n  185              # statement above, Python invokes the __getiter__() method with\n  186              # index 0, which raises an exception. More recent versions of \n  187:             # xml.sax include the __contains__() method, rendering the in \n  188              # operator functional. The work-around here is to formulate the\n  189              # if statement as below, which is the legal way to query \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/chardet/hebrewprober.py:\n   55  # The dominant difference between these charsets is their directionality.\n   56  # \"Visual\" directionality means that the text is ordered as if the renderer is\n   57: # not aware of a BIDI rendering algorithm. The renderer sees the text and \n   58  # draws it from left to right. The text itself when ordered naturally is read \n   59  # backwards. A buffer of Visual Hebrew generally looks like so:\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/coverage/templite.py:\n   31          \"\"\"Construct a Templite with the given `text`.\n   32  \n   33:         `contexts` are dictionaries of values to use for future renderings.\n   34          These are good for filters and global values.\n   35  \n   ..\n   91          \"\"\"Render this template by applying it to `context`.\n   92  \n   93:         `context` is a dictionary of values to use in this rendering.\n   94  \n   95          \"\"\"\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/flask/helpers.py:\n  377  \n  378      Filter the flashed messages to one or more categories by providing those\n  379:     categories in `category_filter`.  This allows rendering categories in\n  380      separate html blocks.  The `with_categories` and `category_filter`\n  381      arguments are distinct:\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/flask/testsuite/templating.py:\n   36          self.assert_equal(rv.data, b'42')\n   37  \n   38:     def test_request_less_rendering(self):\n   39          app = flask.Flask(__name__)\n   40          app.config['WORLD_NAME'] = 'Special World'\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/jinja2/environment.py:\n  156  \n  157          `keep_trailing_newline`\n  158:             Preserve the trailing newline when rendering templates.\n  159              The default is ``False``, which causes a single newline,\n  160              if present, to be stripped from the end of the template.\n  ...\n  730          # the debugging module is imported when it's used for the first time.\n  731          # we're doing a lot of stuff there and for applications that do not\n  732:         # get any exceptions in template rendering there is no need to load\n  733          # all of that.\n  734          if _make_traceback is None:\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/jinja2/sandbox.py:\n  185  \n  186      If the template tries to access insecure code a :exc:`SecurityError` is\n  187:     raised.  However also other exceptions may occour during the rendering so\n  188      the caller has to ensure that all exceptions are catched.\n  189      \"\"\"\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/logilab/common/table.py:\n  758  \n  759      def _render_cell_content(self, content, table_style, col_index):\n  760:         \"\"\"Makes the appropriate rendering for this cell content.\n  761          Rendering properties will be searched using the\n  762          *table_style.get_xxx_by_index(col_index)' methods\n  ...\n  811  \n  812      def _render_cell_content(self, cell_content, table_style, col_index):\n  813:         \"\"\"Makes the appropriate rendering for this cell content.\n  814          Rendering properties will be searched using the\n  815          table_style.get_xxx_by_index(col_index)' methods.\n  ...\n  851  \n  852      def update_properties(self, **properties):\n  853:         \"\"\"Updates writer's properties (for cell rendering)\n  854          \"\"\"\n  855          self.properties.update(properties)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/logilab/common/test/unittest_table.py:\n  403          self.assertEqual(entry_xml, \"<entry align='left'>data</entry>\\n\")\n  404  \n  405:     def test_default_content_rendering(self):\n  406:         \"\"\"tests that default rendering just prints the cell's content\"\"\"\n  407          rendered_cell = self.base_renderer._render_cell_content('data', self.style, 1)\n  408          self.assertEqual(rendered_cell, \"data\")\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/lxml/html/builder.py:\n   93  MENU = E.menu # menu list (DEPRECATED)\n   94  META = E.meta # generic metainformation\n   95: NOFRAMES = E.noframes # alternate content container for non frame-based rendering\n   96: NOSCRIPT = E.noscript # alternate content container for non script-based rendering\n   97  OBJECT = E.object # generic embedded object\n   98  OL = E.ol # ordered list\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/lxml/html/clean.py:\n  661      Breaks words by inserting &#8203;, which is a unicode character\n  662      for Zero Width Space character.  This generally takes up no space\n  663:     in rendering, but does copy as a space, and in monospace contexts\n  664      usually takes up space.\n  665  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/mandrill.py:\n  469  \n  470          Returns:\n  471:            struct.  the result of rendering the given template with the content and merge field values injected::\n  472                 html (string): the rendered HTML as a string\n  473  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/apps/Publisher3/views.py:\n   37      config = {}\n   38      redis_conn = BaseRedis(\"publishing_configs\")\n   39:     for config_name in ['rendering', 'autopub', 'parcelling', 'deliveryV2']:\n   40          config_part = redis_conn.get_value(config_name)\n   41          if story_type in config_part:\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/events/routing_tables.py:\n   21          ],\n   22          \"narrwhal.authoring.story.Written\": [\n   23:             [\"ns.services.rendering.rendering_subscriber\", \"RenderingSubscriber\"],\n   24              [\"ns.services.sla_service.event_subscriber\", \"SlaSubscriber\"],\n   25              [\"ns.services.perf_monitor.event_subscriber\", \"PerformanceSubscriber\"],\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/narrlog/hlogger.py:\n   20  \n   21  class Hlogger(object):\n   22:     \"\"\"Contains all components for HTML rendering.\n   23      Used as a singleton in global scope to persist state.\"\"\"\n   24      def __init__(self, filename, title=None):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/baseball/maxpreps/lexicon.yaml:\n  248    content:\n  249      -\n  250:       - \"$league.team_fewest_hits_allowed continues to give up the least hits to opposing lineups this season, after surrendering only $league.team_fewest_hits_allowed.pitching_weekly_stats.hits_against in the past week. For the entire year, $league.team_fewest_hits_allowed_season has given up only $league.team_fewest_hits_allowed_season.pitching_season_stats base hits.\"\n  251        - \"$league.team_fewest_hits_allowed{'s} pitching staff was best in the league in terms of hits allowed, with just $league.team_fewest_hits_allowed.pitching_weekly_stats.hits_against over the past week. On the year, $league.team_fewest_hits_allowed_season has allowed only $league.team_fewest_hits_allowed_season.pitching_season_stats hits\"\n  252  -\n  ...\n  263      -\n  264        - \"$league.team_fewest_walks_allowed{'s} pitchers have displayed incredible control over the past week and for this entire season, giving up just $league.team_fewest_walks_allowed.pitching_weekly_stats.walks walks over the past seven days and $league.team_fewest_walks_allowed_season.pitching_season_stats.walks on the year. Both are No. 1 in the league.\"\n  265:       - \"After surrendering only $league.team_fewest_walks_allowed.pitching_weekly_stats.walks walks in the past week, $league.team_fewest_walks_allowed remains No. 1 in that category for the season, with just $league.team_fewest_walks_allowed_season.pitching_season_stats.walks\"\n  266  -\n  267    name: FewestPitcherWalksAllowedThisWeekNotSeason(league:League) < Paragraph\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/baseball/maxpreps/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/baseball/recaps/pointstreak/renderer.py:\n    9  \n   10  class BaseballRenderer(renderer.BaseRenderer):\n   11:     # Add vertical-specific rendering here\n   12      pass\n   13      def do_postrender_string_hacks(self, output_d):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/defaults/finance/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/defaults/sports/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/board_citi/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/box_office/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/bracket/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/citi/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/cps/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/market_stories/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/moody/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/open_table/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/politics_twitter/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/sector_draft/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/stocks/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/stocks_2/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/demos/street_mock/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/finance/earnings/citybizlist/previews/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/finance/earnings/forbes/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/finance/earnings_old/citybizlist/previews/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/finance/earnings_old/forbes/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/finance/market_recaps/data_explorers/renderer.py:\n    3  \n    4  # class DataExplorersRenderer(FinanceRenderer):\n    5: #     # Add vertical-specific rendering here\n    6  #     pass\n    7  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/finance/sec_formd/renderer.py:\n    2  \n    3  class Renderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5  \n    6      def render_BigPriceTitle(self, content):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/hockey/recaps/renderer.py:\n    2  \n    3  class HockeyRenderer(renderer.BaseRenderer):\n    4:     # Add vertical-specific rendering here\n    5      pass\n    6      def do_postrender_string_hacks(self, output_d):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/renderer.py:\n   53  \n   54  def _remove_consecutive_periods(texts):\n   55:     '''Remove consecutive periods during post-rendering. The motivation\n   56      for this is an abbreviation at the end of a sentence.  It will also\n   57      remove non-special character elipses.'''\n   ..\n  257      '''BaseRenderer is the superclass of all the renderers.  Its main method is\n  258      Render, which takes a ContentPiece.  It loops through the content's\n  259:     .contents, rendering each one. In true Pythonic form, you can declare\n  260      certain methods in a BaseRenderer subclass to change how  different types\n  261      of Scalars are rendered.  For instance, naming a method renderCount will\n  ...\n  268      Phrases, Sentences,  Paragraphs, or any other content_types.'''\n  269  \n  270:     RENDERER_ERR_MSG = \"Error rendering blueprint at %s\"\n  271      COMMA_TOKEN = u'$$COMMA_%s$$'\n  272  \n  ...\n  329           the self.curr_output_key to key so that future calls to self.p() get\n  330           routed properly.  The piece is also stored in the stack so that when\n  331:          the piece is done rendering, the stack knows it and can pop\n  332           appropriately.'''\n  333          if key is None:\n  ...\n  436  \n  437      def _render_scalar_stream(self, scalar_stream):\n  438:         '''This is the main rendering function for a plain ScalarStream, like\n  439           a Phrase.'''\n  440          self.depth += 1\n  ...\n  510  \n  511      def postrender_Sentence(self, main_content):\n  512:         #Rendering a sentence means rendering a phrase, and rendering a phrase\n  513          #puts a space at the end.  So we clear that before adding punctuation\n  514          punc_str = '.!?:'\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/dacq/finance/xignite/report.py:\n   47  \n   48  class Report(object):\n   49:     \"\"\"Class for fetching and rendering Xignite API reports.\"\"\"\n   50  \n   51      def __init__(self, template, api, operation):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/harpoon/migrate_publishing_from_s3.py:\n   26  # Migrate methods\n   27  \n   28: def migrate_rendering_configs(env='stg', harpoon_url=HARPOON_URL):\n   29:     raw_data = get_key_contents('s3_%s_parcelling' % env, 'rendering.yaml')\n   30:     rendering = yaml.load(raw_data)\n   31      envs = ['dev', 'stg'] if env == 'stg' else ['prod']\n   32      for env in envs:\n   33:         for project, rdata in rendering.items():\n   34              if env == 'prod' and project not in PROD_WHITELIST[-1]:\n   35                  continue\n   36:             rendering_url = harpoon_url + project + ('/%s/assets/rendering/' % env)\n   37:             req = requests.get(rendering_url)\n   38              if req.status_code != 404:\n   39                  print \"Found project: %s\" % project\n   40                  rconfigs = json.loads(req.content)\n   41:                 rendering_data = {\n   42                    'model': json.dumps({\n   43                      'name': 'Rendering Configuration',\n   ..\n   46                  }\n   47                  if not rconfigs:\n   48:                     print \"Inserting rendering configs...\"\n   49:                     req = requests.post(rendering_url, data=rendering_data)\n   50                  else:\n   51:                     print \"Updating rendering configs....\"\n   52:                     rendering_url = harpoon_url + project + ('/%s/config/' % env) + rconfigs[0]['_id'] + '/'\n   53:                     print rendering_url\n   54:                     req = requests.put(rendering_url, data=rendering_data)\n   55                  print req.status_code, req.content\n   56  \n   ..\n  162  \n  163  def run(env='stg', harpoon_url=HARPOON_URL):\n  164:     migrate_rendering_configs(env, harpoon_url)\n  165      migrate_parcelling_configs(env, harpoon_url)\n  166      migrate_approval_configs(env, harpoon_url)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/harpoon/migrate_publishing_to_quiver.py:\n   31      # Rendering\n   32      harpoon_url = HARPOON_SERVICE_HOST + harpoon_project +\\\n   33:       '/dev/assets/rendering/'\n   34      quiver_url = quiver_project +\\\n   35:       '/p/versions/latest/publishing/rendering/'\n   36:     rendering = json.loads(requests.get(harpoon_url).content)\n   37:     if rendering:\n   38:         for content_type, config in rendering[0]['design'].items():\n   39              d = {\n   40                'content_type': content_type,\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/engine.py:\n  363      def write_content(self, creq_type):\n  364          '''Uses the creq_type and bound_arg_list to actually write and render\n  365:          the story.  The output from the last rendering is returned.'''\n  366          nvm.meta('creq_type', creq_type)\n  367          creq = contentblocks.ContentRequest(creq_type,\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/magnus.py:\n    1  '''\"magnus\" is really just a collection of functions that provide useful views\n    2:  into narrwhal.  For instance, rendering a content block, seeing which angles\n    3   are related, etc.  All of these functions need to be called in an env\n    4   context.'''\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/apps/narrcli.py:\n  447          msg = \"\\nUsage: 'show_all <keypath_to_scalar>'\\n.  E.g., 'show_all\" \\\n  448            \" $game.margin'\\n\\nRenders that scalar in all of its compatible\" \\\n  449:           \" forms.\\n\\nThis is useful to see how the rendering would change\" \\\n  450            \" if the model were of a different type.\"\n  451          print msg\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/configs/contentblocks.py:\n  647          self._bind_local_vars()\n  648  \n  649:     @nvm.func('contentblocks.rendering_checklist')\n  650      def get_rendered_checklist_items(self):\n  651          '''Returns a dictionary with all of the checklist items for this cnoc\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/configs/models.py:\n  351          super(Scalar, self).__init__(type_)\n  352          self.value = None\n  353:          # This gets set right before rendering by drafts\n  354          self.leading_spaces = None\n  355          self.derv_cache = {}\n  ...\n  472           means getting the actual Python value out of them.  For dervs and\n  473           such, you care about the actual value, not the Scalar object so\n  474:          dereference defaults to True.  When rendering and some other times,\n  475           though, you want the Scalar object so you can turn off the\n  476           dereferencing.'''\n  ...\n  710           means getting the actual Python value out of them.  For dervs and\n  711           such, you care about the actual value, not the Scalar object so\n  712:          dereference defaults to True.  When rendering and some other times,\n  713           though, you want the Scalar object so you can turn off the\n  714           dereferencing.'''\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/nvm/enter_function_messages.yaml:\n   50    - \"Testing keypath\"\n   51  \n   52: contentblocks_rendering_checklist:\n   53    -\n   54      - [main_item]\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/old_ahab/includes/models.py:\n  160      def narr_curr_nref(self):\n  161          '''Theoretically, this should always be set to non-None, because\n  162:          mark_as_written steps it.  But with rendering blueprints in Pilot,\n  163           etc., that can get complicated, so we're chunking this in here as a\n  164           backup.'''\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/old_ahab/templates.py:\n   34  \n   35  def _render_template(template, args):\n   36:     '''Does the actual (super-simple) rendering.'''\n   37      ret = template\n   38      if isinstance(template, basestring):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/author/author_service.py:\n   77              # pilot for feedback on which angles were used during\n   78              # authoring, but we need to keep the design dictionary,\n   79:             # which is used in rendering for calls to the charting\n   80              # service.\n   81              design = node[\"meta\"].get(\"design\")\n   ..\n  274              self._compile_config()\n  275  \n  276:     # Not styled here any more. Styling is done in the rendering service.\n  277  \n  278      def _build_message(self, styled_output, tusk_uri, warnings):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/author/quiver_client.py:\n   19  import json\n   20  \n   21: # Classes supporting quiver-based authoring, stylebooking, rendering and\n   22  # parcelling services.\n   23  #\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/data_service/main/response.py:\n   28  \n   29  class Renderer(object):\n   30:     \"\"\"A class for rendering response data.\"\"\"\n   31      json = 'application/json'\n   32  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/harpoon_service/final_gasp/configs_list.yaml:\n    1: - GET /api/AhabPipeline/50f851ef30845940d4004c34/assets/rendering/\n    2  - GET //api/assets/InvestorPlaceTripleAStocksReport_delivery/\n    3: - GET //api/InvestorPlaceTopAStocksReport/50ed5716ab75e9647e0273d4/assets/rendering/\n    4  - GET //api/InvestorPlaceBestSectorReport/50eb41a61959f2439500ae1b/assets/stylebooks/\n    5  - GET /api/AhabPipeline/50f851ef30845940d4004c34/assets/stylebooks/\n    6  - GET //api/assets/InvestorPlaceBestSectorReport_delivery/\n    7  - GET //api/assets/InvestorPlaceTripleAStocksReport_approval/\n    8: - GET //api/AhabPipeline/50f851ef30845940d4004c34/assets/rendering/\n    9  - GET //api/assets/AhabPipeline_approval/\n   10  - GET //api/assets/InvestorPlaceTopAStocksReport_delivery/\n   ..\n   13  - GET //api/assets/InvestorPlaceBestFundamentalCategoryReport_delivery/\n   14  - GET //api/AhabPipeline/50f851ef30845940d4004c34/assets/parcelling/\n   15: - GET //api/InvestorPlaceBestFundamentalCategoryReport/50effa8aab75e9647e04c90e/assets/rendering/\n   16  - GET //api/InvestorPlaceBestFundamentalCategoryReport/50effa8aab75e9647e04c90e/assets/parcelling/\n   17  - GET //api/InvestorPlaceTripleAStocksReport/50eb53b91959f2439500eabf/assets/stylebooks/\n   ..\n   23  - GET //api/ApiPipeline/dev/assets/parcelling/\n   24  - GET //api/assets/TheStreetWireAlerts_delivery/\n   25: - GET //api/InvestorPlaceBestSectorReport/50eb41a61959f2439500ae1b/assets/rendering/\n   26  - GET //api/InvestorPlaceBestFundamentalCategoryReport/50effa8aab75e9647e04c90e/assets/stylebooks/\n   27  - GET //api/AhabPipeline/50f851ef30845940d4004c34/assets/stylebooks/\n   28  - GET //api/assets/GamechangerBaseballRecap_delivery/\n   29: - GET /api/AhabPipeline/51bb6b3c3084596a710027bf/assets/rendering/\n   30  - GET //api/assets/TheStreetWireAlertsSysTest_delivery/\n   31  - GET //api/assets/InvestorPlaceBestFundamentalCategoryReport_approval/\n   ..\n   33  - GET //api/GamechangerBaseballRecap/dev/assets/parcelling/\n   34  - GET //api/assets/InvestorPlaceTopAStocksReport_approval/\n   35: - GET //api/InvestorPlaceTripleAStocksReport/50eb53b91959f2439500eabf/assets/rendering/\n   36  - GET //api/TheStreetWireAlertsSysTest/dev/assets/parcelling/\n   37  - GET //api/assets/InvestorPlaceBestSectorReport_approval/\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/harpoon_service/harpoon_service.py:\n   25  from ns.old_ahab.wrappers.ds_author_service import AuthoringService\n   26  \n   27: from ns.services.rendering.renderer import Renderer\n   28  from ns.services.parcelling.doc_parceller import DocParceller\n   29  from ns.services.parcelling.parceller import ParcelFactory\n   ..\n  209          if not self.is_harpoon_story(story_spec):\n  210              return\n  211:         assets = self.story_config_service.get_assets(story_spec, \"rendering\")\n  212          if assets and len(assets) == 1 and len(assets[0][\"design\"]) > 0:\n  213              xml_renderer = MarkupWriter()\n  ...\n  235          else:\n  236              bname = \"s3_%s_parcelling\" % story_spec.env\n  237:         configs = self.storage.fetch(bname, \"rendering.yaml\")\n  238          xml_renderer = MarkupWriter()\n  239          tag_map = yaml.load(configs).get(story_spec.story_type, None)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/parcelling/parceller.py:\n    9  from ns.services.parcelling.doc_parceller import DocParceller\n   10  from ns.services.parcelling.ppt_parceller import PptParceller\n   11: from ns.services.rendering.renderer import RenderedStory\n   12  from ns.util import import_class, retry\n   13  from ns_utils.config import cache\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/rendering/renderer.py:\n    5  \n    6  from ns.services.stylebook.stylebook import get_stylebook\n    7: from ns.services.rendering.markup import MarkupWriter\n    8  from ns_utils.config import cache\n    9  \n   ..\n  216  \n  217  \n  218: def get_renderer(story_name, env, config_id, rendering_config=None, stylebook_config=None):\n  219      '''Return S3-configured story renderer, with fallback to default html\n  220      renderer'''\n  221:     xml_renderer = _load(story_name, config_id, rendering_config)\n  222      if not xml_renderer:\n  223          xml_renderer = _get_default_html_writer()\n  ...\n  257  \n  258  \n  259: def _load(story_name, config_id, rendering_config=None):\n  260      '''Construct renderer based on definitions fetched from S3 bucket'''\n  261:     if rendering_config:\n  262:         config, store = (rendering_config, \"runtime\")\n  263      elif cache.configs_in_ux(story_name, config_id):\n  264:         config, store = cache.get_config(CONFIGS, \"rendering\", story_name, config_id)\n  265      else:\n  266          config = _get_renderer_config_s3(story_name)\n  ...\n  287      conn = boto.connect_s3()\n  288      bucket = conn.get_bucket(bname)\n  289:     configs = bucket.get_key(\"rendering.yaml\")\n  290      return yaml.load(configs).get(assignment_type, None)\n  291  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/rendering/rendering_subscriber.py:\n    1  from ns_prop import env\n    2  from ns_esb.components import Component\n    3: from ns.services.rendering.renderer import get_renderer\n    4  from ns_esb.events.narrwhal.publishing.story import Rendered\n    5  from ns.old_ahab.story_adaptor import StoryFactory as StoryFactoryv1\n    .\n   10  # RenderingSubscriber\n   11  #\n   12: # Listens to 'written' events, and triggers rendering.  Renderer is\n   13  # responsible for:\n   14  #\n   ..\n   27  \n   28      @Component.register(\"narrwhal.authoring.story.Written\", \"1.0\")\n   29:     def render_story_from_StoryWrittenEvent(self, message, rendering_config=None, stylebook_config=None):\n   30          config_id = message.get(\"config_version_id\", None)\n   31          story_type = message.get(\"story_key\")[\"story_type\"]\n   32          events = []\n   33          if message.get_header(\"created_by\") == \"ahab\":\n   34:             renderer = get_renderer(story_type, env, config_id, rendering_config, stylebook_config)\n   35              story_json = message.get('styled_content')\n   36              story = None\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/skipper_service/views/config.py:\n   29  from ns.old_ahab import interfaces as ahab_interfaces\n   30  \n   31: from ns.services.rendering.renderer import get_html_renderer\n   32  from ns.narrwhal import exceptions\n   33  from ns_type.story_key import StorySpec\n   ..\n 1299  @env_context\n 1300  def get_eval_target_kep(project_name, clone_name, config_id):\n 1301:     '''Gets the model that the system is rendering blueprints, test derivations,\n 1302      etc. against (if other than root).'''\n 1303      target_kep = magnus.get_eval_target_kep_by_id(to_id(config_id))\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/stylebook/classes.py:\n  336              if remaining == prev_remaining:\n  337                  all_pendings = list(set(all_pendings))\n  338:                 msg = \"Stuck rendering with %s remaining:\\n\" % (remaining,)\n  339                  for o in output:\n  340                      if not o.styled:\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/util/db/redis_dbs.py:\n   25      fact_checking = 17\n   26      esb = 18\n   27:     rendering = 19\n   28      cache = 20  # Used for ns.dao.redis.RedisCache\n   29      publishing_configs = 21\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/util/io.py:\n   78  \n   79  ##\n   80: # Messaging architecture for simple message rendering\n   81  ##\n   82  class _MessageHandler(object):\n   83      \"\"\"Base class of the messaging architecture. Handlers are callables\n   84:     which take a message that is passed to a template for rendering. The\n   85      template is a simple python string template, and as such the msg\n   86      may be either a dictionary or an iterable appropriate to the format\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/exceptions.py:\n   40  \n   41  class StylebookingError(AhabError):\n   42:     '''Raised when something goes wrong in styling/rendering.  This will only\n   43       be raised when running in Pilot, not the author serve.'''\n   44      error_type = 'stylebooking'\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/includes/models.py:\n  142      def narr_curr_nref(self):\n  143          '''Theoretically, this should always be set to non-None, because\n  144:          mark_as_written steps it.  But with rendering blueprints in Pilot,\n  145           etc., that can get complicated, so we're chunking this in here as a\n  146           backup.'''\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/templates.py:\n   30  \n   31  def _render_template(template, args):\n   32:     '''Does the actual (super-simple) rendering.'''\n   33      ret = template\n   34      if isinstance(template, basestring):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/nsprop.py:\n  204          conf.set('S3.parcelling.%s' % env, 's3_%s_parcelling' % env)\n  205          conf.set('S3.delivery.%s' % env, 's3_%s_delivery' % env)\n  206:         conf.set('S3.rendering.%s' % env, 's3_%s_parcelling' % env)\n  207  \n  208          conf.set('replica_set_path',\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_db/ns_redis/redis_db_table.py:\n   25      fact_checking = 17\n   26      esb = 18\n   27:     rendering = 19\n   28      cache = 20  # Used for ns.dao.redis.RedisCache\n   29      publishing_configs = 21\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_esb/components/event_broker.py:\n   41  \n   42  FAST_API_RENDERING = {\n   43:   'module': 'ns.services.rendering.rendering_subscriber',\n   44    'old': 'RenderingSubscriber',\n   45    'new': 'FastApiRenderingSubscriber',\n   ..\n   47  \n   48  AUTOSCALE_RENDERING = {\n   49:   'module': 'ns.services.rendering.rendering_subscriber',\n   50    'old': 'RenderingSubscriber',\n   51    'new': 'AutoScaleRenderingSubscriber',\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_esb/components/redis_dao.py:\n   25      fact_checking = 17\n   26      esb = 18\n   27:     rendering = 19\n   28      cache = 20  # Used for ns.dao.redis.RedisCache\n   29      publishing_configs = 21\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_text_tools-1.1.96-py2.7.egg-info/installed-files.txt:\n 1067  ../ns/services/release/views.py\n 1068  ../ns/services/release/worker.py\n 1069: ../ns/services/rendering/__init__.py\n 1070: ../ns/services/rendering/markup.py\n 1071: ../ns/services/rendering/renderer.py\n 1072: ../ns/services/rendering/rendering_subscriber.py\n 1073  ../ns/services/scheduler/__init__.py\n 1074  ../ns/services/scheduler/scheduler.py\n ....\n 1317  ../nstests/services/publishing/__init__.py\n 1318  ../nstests/services/publishing/publishing_test.py\n 1319: ../nstests/services/rendering/__init__.py\n 1320: ../nstests/services/rendering/markup_test.py\n 1321: ../nstests/services/rendering/renderer_test.py\n 1322  ../nstests/services/skipper_service/__init__.py\n 1323  ../nstests/services/skipper_service/melville_test.py\n ....\n 1981  ../ns/services/monitoring_service/alarms/urls.py\n 1982  ../ns/services/monitoring_service/alarms/views.py\n 1983: ../ns/services/rendering/charting/__init__.py\n 1984: ../ns/services/rendering/charting/client.py\n 1985  ../ns/services/skipper_service/views/__init__.py\n 1986  ../ns/services/skipper_service/views/config.py\n ....\n 2085  ../nstests/mongoeng/sports/basketball/game_test.py\n 2086  ../nstests/mongoeng/sports/basketball/team_test.py\n 2087: ../nstests/services/rendering/charting/__init__.py\n 2088  ../nstests/util/db/mongo/__init__.py\n 2089  ../nstests/util/db/mongo/collection_test.py\n ....\n 4694  ../ns/services/release/views.pyc\n 4695  ../ns/services/release/worker.pyc\n 4696: ../ns/services/rendering/__init__.pyc\n 4697: ../ns/services/rendering/markup.pyc\n 4698: ../ns/services/rendering/renderer.pyc\n 4699: ../ns/services/rendering/rendering_subscriber.pyc\n 4700  ../ns/services/scheduler/__init__.pyc\n 4701  ../ns/services/scheduler/scheduler.pyc\n ....\n 4944  ../nstests/services/publishing/__init__.pyc\n 4945  ../nstests/services/publishing/publishing_test.pyc\n 4946: ../nstests/services/rendering/__init__.pyc\n 4947: ../nstests/services/rendering/markup_test.pyc\n 4948: ../nstests/services/rendering/renderer_test.pyc\n 4949  ../nstests/services/skipper_service/__init__.pyc\n 4950  ../nstests/services/skipper_service/melville_test.pyc\n ....\n 5608  ../ns/services/monitoring_service/alarms/urls.pyc\n 5609  ../ns/services/monitoring_service/alarms/views.pyc\n 5610: ../ns/services/rendering/charting/__init__.pyc\n 5611: ../ns/services/rendering/charting/client.pyc\n 5612  ../ns/services/skipper_service/views/__init__.pyc\n 5613  ../ns/services/skipper_service/views/config.pyc\n ....\n 5712  ../nstests/mongoeng/sports/basketball/game_test.pyc\n 5713  ../nstests/mongoeng/sports/basketball/team_test.pyc\n 5714: ../nstests/services/rendering/charting/__init__.pyc\n 5715  ../nstests/util/db/mongo/__init__.pyc\n 5716  ../nstests/util/db/mongo/collection_test.pyc\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_text_tools-1.1.96-py2.7.egg-info/SOURCES.txt:\n 2016  ./ns/services/release/views.py\n 2017  ./ns/services/release/worker.py\n 2018: ./ns/services/rendering/__init__.py\n 2019: ./ns/services/rendering/markup.py\n 2020: ./ns/services/rendering/renderer.py\n 2021: ./ns/services/rendering/rendering_subscriber.py\n 2022: ./ns/services/rendering/charting/__init__.py\n 2023: ./ns/services/rendering/charting/client.py\n 2024  ./ns/services/scheduler/__init__.py\n 2025  ./ns/services/scheduler/scheduler.py\n ....\n 2505  ./nstests/services/publishing/__init__.py\n 2506  ./nstests/services/publishing/publishing_test.py\n 2507: ./nstests/services/rendering/__init__.py\n 2508: ./nstests/services/rendering/markup_test.py\n 2509: ./nstests/services/rendering/renderer_test.py\n 2510: ./nstests/services/rendering/charting/__init__.py\n 2511  ./nstests/services/skipper_service/__init__.py\n 2512  ./nstests/services/skipper_service/melville_test.py\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/config/cache.py:\n   52      \"approval\": \"approval/\",\n   53      \"delivery\": \"delivery/\",\n   54:     \"rendering\": \"publishing/rendering/\",\n   55      \"parcelling\": \"publishing/parcelling/\",\n   56      \"stylebooks\": \"publishing/stylebooks/\",\n   ..\n  462              config = None\n  463  \n  464:     elif service_name == 'rendering':\n  465          # Turn list of configs into dictionary of content_types\n  466          config = {}\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/config/harpoon_configs.py:\n  121                    u'version_id': {u'$oid': u'50c7882c308459117e0135a9'}}]\n  122          },\n  123:         \"rendering\": {\n  124              \"50f851ef30845940d4004c34\":\n  125                  [{u'_id': u'50f851efd7ed5c9c90fccf4e',\n  126                    u'active': True,\n  127                    u'app_data_id': {u'$oid': u'50f851ef30845940d4004c34'},\n  128:                   u'asset_type': u'rendering',\n  129                    u'config_type': u'asset',\n  130                    u'deleted': False,\n  ...\n  145                    u'active': True,\n  146                    u'app_data_id': {u'$oid': u'51bb6b3c3084596a710027bf'},\n  147:                   u'asset_type': u'rendering',\n  148                    u'config_type': u'asset',\n  149                    u'deleted': False,\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/nstests/configs/renderer_test.py:\n  601      def test_render_BigNumber(self):\n  602          # A list of tuples of a mock BigNumber and expected calls to p\n  603:         # made while rendering it\n  604          test_pairs = []\n  605          def add_test_pair(value, expected_p_calls):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/nstests/services/rendering/markup_test.py:\n    4  \n    5  from ns.old_ahab.story_adaptor import StoryFactory\n    6: from ns.services.rendering.markup import MarkupWriter\n    7  \n    8  \n    .\n   14          self.story = StoryFactory().load(filename)\n   15  \n   16:     @patch(\"ns.services.rendering.markup.writeid\")\n   17      def test_markup_default(self, mock_writeid):\n   18          writer = MarkupWriter()\n   ..\n   21          self.assertEquals(story_text, \"\"\"<Story name=\"None\" id=\"None\" writeid=\"200\" approvalState=\"None\"><Headline name=\"None\" id=\"None\" writeid=\"200\" approvalState=\"None\">A simple 5 word headline</Headline><Sentence name=\"None\" id=\"None\" writeid=\"200\" approvalState=\"None\">Story text</Sentence></Story>\"\"\")\n   22  \n   23:     @patch(\"ns.services.rendering.markup.writeid\")\n   24      def test_markup_indent(self, mock_writeid):\n   25          writer = MarkupWriter(indent=True)\n   ..\n   28          self.assertEquals(story_text, \"\"\"<Story name=\"None\" id=\"None\" writeid=\"100\" approvalState=\"None\">\\n  <Headline name=\"None\" id=\"None\" writeid=\"100\" approvalState=\"None\">\\n    A simple 5 word headline\\n  </Headline>\\n  <Sentence name=\"None\" id=\"None\" writeid=\"100\" approvalState=\"None\">\\n    Story text\\n  </Sentence>\\n</Story>\"\"\")\n   29  \n   30:     @patch(\"ns.services.rendering.markup.writeid\")\n   31      def test_markup_debug(self, mock_writeid):\n   32          writer = MarkupWriter(debug=True, wrap=None)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/nstests/services/rendering/renderer_test.py:\n    6  from ns.old_ahab.story_adaptor import StoryFactory\n    7  \n    8: from ns.services.rendering.renderer import Renderer, TraceWriter\n    9: from ns.services.rendering.markup import MarkupWriter\n   10  from ns_stylebooks.stylebook import Stylebook\n   11  \n   ..\n   13  class RenderingTest(unittest.TestCase):\n   14  \n   15:     @patch(\"ns.services.rendering.markup.writeid\")\n   16      def setUp(self, mock_writeid):\n   17          mock_writeid.return_value = 100\n   ..\n   24          self.story_xml = MarkupWriter().markup(self.story.current_version)\n   25  \n   26:     @patch(\"ns.services.rendering.markup.writeid\")\n   27      def test_render_story__sentence_level_tag(self, mock_writeid):\n   28          # Setup\n   ..\n   50          })\n   51  \n   52:     @patch(\"ns.services.rendering.markup.writeid\")\n   53      def test_render_story__no_sentence_level_tag(self, mock_writeid):\n   54          # Setup\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/nstests/services/stylebook_service/stylebook_test.py:\n   11  from ns.services.stylebook.transforms import APDate, CommaNumber\n   12  \n   13: from ns.services.rendering.markup import MarkupWriter\n   14  from ns.old_ahab.story_adaptor import StoryFactory\n   15  from ns.old_ahab.storytypes import delete_ids\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/config/resources.yaml:\n   52    -\n   53      name: Rendering Configs\n   54:     url: /publishing/rendering/\n   55      singleton: false\n   56      binary: false\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/requests/packages/charade/hebrewprober.py:\n   56  # The dominant difference between these charsets is their directionality.\n   57  # \"Visual\" directionality means that the text is ordered as if the renderer is\n   58: # not aware of a BIDI rendering algorithm. The renderer sees the text and\n   59  # draws it from left to right. The text itself when ordered naturally is read\n   60  # backwards. A buffer of Visual Hebrew generally looks like so:\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/xlrd/__init__.py:\n  249  #       that currency symbols, date order, thousands separator, decimals separator, etc\n  250  #       are inappropriate. Note that this does not affect users who are copying XLS\n  251: #       files, only those who are visually rendering cells.</li>\n  252  # </ul>\n  253  #\n  ...\n  697      # If you are creating an output file using (for example) pyExcelerator,\n  698      # use this list.\n  699:     # The collection to be used for all visual rendering purposes is format_map.\n  700      # <br /> -- New in version 0.6.1\n  701      format_list = []\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/xlrd/doc/xlrd.html:\n  246        that currency symbols, date order, thousands separator, decimals separator, etc\n  247        are inappropriate. Note that this does not affect users who are copying XLS\n  248:       files, only those who are visually rendering cells.</li>\n  249  </ul>\n  250  \n  ...\n  702  If you are creating an output file using (for example) pyExcelerator,\n  703  use this list.\n  704: The collection to be used for all visual rendering purposes is format_map.\n  705  <br /> -- New in version 0.6.1\n  706  </p></dd>\n\n254 matches across 95 files\n\n\nSearching 8125 files for \"Quiver\" (case sensitive)\n\n/Users/anelson/narr/ns_services/ns_workflow/docs/run_workflow_locally.md:\n    4  \n    5  * Install mongo and start the daemon with `mongod` or `mongod &`\n    6: * Clone ns_quiver, then fixturize Quiver2 locally by\n    7  \n    8          $ cd ns_quiver/cli\n    9          $ git snake build\n   10          $ quiver fixturize /story/52f019140c3883709ff5a6c8/0.0.4/ --environment=editorial_stg --local-db-name=dev_quiver --config=src/ns_quiver_cli/config.yaml\n   11: * Start Quiver2 by\n   12          \n   13          $ cd ns_quiver/service \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/apps/backdrop/__init__.py:\n   71              return render_template(\"backdrop_index.html\")\n   72  \n   73:         # Quiver proxy\n   74  \n   75          @self.route(\"/q/\", methods=[\"GET\",\"POST\",\"PUT\",\"DELETE\"])\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/dao/quiver/__init__.py:\n    5  class ImmutableProperty(Exception): pass\n    6  \n    7: class _QuiverObject(object):\n    8:     '''Abstract DAO layer for Quiver object persistence.\n    9  \n   10      Clients use static methods to create/retrieve/delete objects:\n   ..\n   50      @classmethod\n   51      def get_connection(cls):\n   52:         return QuiverConnection(*cls.DATABASE)\n   53  \n   54      # Create\n   ..\n  138  \n  139  \n  140: class QuiverConnection(object):\n  141      '''Wraps pymongo Connection'''\n  142      def __init__(self, host, port, db_name):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/dao/quiver/beat.py:\n    1  from pymongo.objectid import ObjectId\n    2: from ns.dao.quiver import _QuiverObject\n    3  \n    4: class Beat(_QuiverObject):\n    5      COLLECTION_NAME = 'beats'\n    6      VERSION_CLASSES = []\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/dao/quiver/config.py:\n    4  from jsonschema import validate, ValidationError\n    5  from pymongo.objectid import ObjectId\n    6: from ns.dao.quiver import _QuiverObject\n    7  \n    8  class InvalidConfiguration(Exception): pass\n    .\n   10  class VersionBeatsDoNotMatch(Exception): pass\n   11  \n   12: class _Config(_QuiverObject):\n   13:     '''Abstract Quiver configuration object.\n   14      Subclasses are produced by a factory using schemas from YAML config.\n   15      Each object contains beat & version references, and validates data against\n   ..\n   17      SORT = ('created',-1)\n   18      COLLECTION_NAME = 'configs'\n   19:     IMMUTABLE = _QuiverObject.IMMUTABLE.union(('beat_id','type'))\n   20      INDEXES = [\n   21        [\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/dao/quiver/project.py:\n    1  from pymongo.objectid import ObjectId\n    2: from ns.dao.quiver import _QuiverObject\n    3  \n    4: class Project(_QuiverObject):\n    5      COLLECTION_NAME = 'projects'\n    6      VERSION_CLASSES = []\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/dao/quiver/version.py:\n    1  from datetime import datetime\n    2  from pymongo.objectid import ObjectId\n    3: from ns.dao.quiver import _QuiverObject\n    4  from ns.dao.quiver.config import _Config\n    5  \n    6: class _Version(_QuiverObject):\n    7      '''Version stores references to all objects that were manipulated\n    8      (created/updated/deleted) while it was active. All configuration\n    .\n   10      SORT = ('id', -1)\n   11      COLLECTION_NAME = 'versions'\n   12:     IMMUTABLE = _QuiverObject.IMMUTABLE.union(('beat_id',))\n   13      CONFIG_TYPES = []\n   14      CONFIG_CLASS = _Config\n   ..\n  149          target_configs = target_db.db[_Config.COLLECTION_NAME]\n  150  \n  151:         # Ensure version parents exist on target Quiver\n  152          if self.beat:\n  153              target_beat = target_quiver.objects.Beat\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/harpoon/migrate_publishing_to_quiver.py:\n    1: '''Migrate publishing configuration from Harpoon to Quiver, including:\n    2  \n    3  - Stylebooks\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/apps/narrcli.py:\n  647          #   headers={'content-type': 'application/json'})\n  648          # projects = json.loads(projects.content)\n  649:         print \"Migrating publishing configs to Quiver...\"\n  650          migrate_publishing(self.app_config_name, project_url)\n  651          print 'Updating configs and re-saving them...'\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/quiver/quiver.py:\n   17  VERSION_CONF_PATH = os.path.join(BASE_PATH, 'config/versions.yaml')\n   18  \n   19: class Quiver(object):\n   20:     '''Quiver is a general-purpose RESTful service for Beat configuration.\n   21      It stores validated configuration items under specific changesets, and\n   22      supports atomic promotion and rollback of changests. All configuration\n   ..\n   65              def read_only():\n   66                  if request.method != 'GET':\n   67:                     return _error(\"Quiver is in read-only mode\", 405)\n   68  \n   69          return app\n   ..\n  117  \n  118          # Build quiver.objects\n  119:         class QuiverObjects(object):\n  120              Versions = version_classes\n  121              _Version = QVersion\n  ...\n  130                  cls._Config.ensure_indexes()\n  131  \n  132:         return QuiverObjects\n  133  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/quiver/server.py:\n    2  import os\n    3  import yaml\n    4: from ns.quiver.quiver import Quiver\n    5  from ns.util.db.conn_common import get_conn_info\n    6  \n    .\n   11  def create_app(dbname=DATABASE[2]):\n   12      db = (DATABASE[0], DATABASE[1], dbname)\n   13:     quiver = Quiver(db=db)\n   14      app = quiver.create_app()\n   15      return app\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/quiver/testserver.py:\n    1  from ns_lib.util.io import mkdirs\n    2: from ns.services.author.quiver_client import PlaybackQuiverConfigService\n    3  from werkzeug.wrappers import Request, Response\n    4  from werkzeug.serving import run_simple\n    .\n   16      args = p.parse_args()\n   17      mkdirs(args.playback)\n   18:     client = PlaybackQuiverConfigService(None, args.playback)\n   19  \n   20      @Request.application\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/assignment_service/assign.py:\n  149      \"\"\"\n  150      #TODO(devans) : This is presently dropped off on the data engine\n  151:     # machines, it should eventually come from somewhere like Quiver\n  152      # or narrwhal conf so that the execution context for a config can\n  153      # be configured by beat/story type. This is still TBD\n  ...\n  889      def __init__(self, beat_name):\n  890          if not find_assign_spec_by_beat_name(QUIVER2, beat_name):\n  891:             raise InvalidBeat(\"Assignment Spec for beat %s doesn't exist in Quiver2. %s\" % (beat_name, QUIVER2))\n  892          self.beat_name = beat_name\n  893          self.ass_store = ass_store.AssStore()\n  ...\n  995      job_spec = find_job_spec_by_story_type(QUIVER2, base_story_type)\n  996      if job_spec is None:\n  997:         raise Exception('Could not find job spec for %s. Check Quiver2.' % base_story_type)\n  998      author_config = job_spec.project_version\n  999      pipeline_type = job_spec.pipeline_type\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/author/author_parameters.py:\n   36  \n   37      STORY_VERSION = Parameter(type_=basestring, required=False,\n   38:                               help_=\"Harpoon or Quiver story version\")\n   39      STORY_TIME = Parameter(type_=datetime.datetime, required=False,\n   40                             help_=\"Parameterized story generation time\")\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/author/author_service.py:\n   24  from ns.services.author.author_parameters import AuthorParameters, STORY_TIME,\\\n   25      STORY_VERSION, ASSIGNMENT_ID, STORY_SUBTYPE, ROLE, LOCK_VARIABILITY\n   26: from ns_ahab.server.quiver_client import QuiverClient, Quiver2Client\n   27  from ns_quiver_client.util import get_version, uri_alias\n   28: from ns.services.author.quiver_client import QuiverStoryService\n   29  \n   30  # Set QUIVER_SERVICE_HOST env variable before ns_ahab.fossil is imported\n   ..\n  220              narrwhal.remove_env(env.env_id)\n  221          elif conf_service == \"QUIVER\":\n  222:             # Parse base Quiver URL, version\n  223              url = self._config_version_id\n  224              project_url, _, version = url.partition('p/versions/')\n  ...\n  232              module_name = 'fossils.%s.%s' % (self._story_type, version_id)\n  233              module = import_module(module_name)\n  234:             # Get data interface name from Quiver\n  235              settings_url = \"%s/authoring/settings/\" % url.strip(\"/\")\n  236:             quiver_client = QuiverClient()\n  237              settings = quiver_client.get_resource(settings_url)\n  238              db_interface_name = settings['data']['data_interface_name']\n  ...\n  252              module_name = 'fossils.%s.%s' % (self._story_type, version_id)\n  253              module = import_module(module_name)\n  254:             # Get data interface name from Quiver\n  255:             qc = Quiver2Client()\n  256              story = qc.fetch_resource(uri=self._config_version_id)\n  257              db_interface_name = story.data_interface_name\n  ...\n  498              harpoon = DiskFossilCache(service=harpoon_s3, datadir=fossildir)\n  499  \n  500:             quiver_client = QuiverClient(base_url=get_service_url(QUIVER))\n  501:             quiver = QuiverStoryService(quiver_client=quiver_client)\n  502  \n  503              multi = MultiStoryService(services=[harpoon, quiver])\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/author/quiver_client.py:\n   35  #   def write_story(version, story_key, quiver_url, data_url):\n   36  #       # Build clients\n   37: #       client = QuiverClient(quiver_url)\n   38: #       story_svc = QuiverStoryService(client)\n   39  #       data_svc = DataServiceClient(data_url)\n   40  #       # Write and render\n   ..\n   47  #       return renderer.render_story(story)\n   48  #\n   49: # QuiverStoryService as implemented here is intended to be plug compatible\n   50  # with a Harpoon based version (in ns/services/harpoon_service/harpoon_service.py)\n   51  #\n   ..\n   53  # client, and supports variability locking.\n   54  \n   55: class QuiverConfigService(object):\n   56      pass\n   57  \n   58  \n   59: class WrappedQuiverConfigService(QuiverConfigService):\n   60  \n   61      def __init__(self, wrapped_svc=None):\n   ..\n   63  \n   64  \n   65: class RecordingQuiverConfigService(WrappedQuiverConfigService):\n   66  \n   67      def __init__(self, wrapped_svc=None, datadir=None):\n   68:         super(RecordingQuiverConfigService, self).__init__(wrapped_svc)\n   69          self.datadir = datadir\n   70  \n   ..\n   84  \n   85  \n   86: class PlaybackQuiverConfigService(WrappedQuiverConfigService):\n   87  \n   88      def __init__(self, wrapped_svc=None, datadir=None):\n   89:         super(PlaybackQuiverConfigService, self).__init__(wrapped_svc=wrapped_svc)\n   90          self.datadir = datadir\n   91  \n   ..\n  156  # that downstream caches could, for instance, stash the module locally, or in S3.\n  157  #\n  158: # QuiverAuthoringService instances are returned by calls to\n  159: # QuiverStoryService.get_author(story_spec)\n  160  \n  161: class QuiverAuthoringService(object):\n  162  \n  163      def __init__(self, story_spec, fossil, datasrv, module=None):\n  ...\n  202  # based on data retrieved from a particular quiver client, or mock thereof.\n  203  \n  204: class QuiverStoryService(object):\n  205  \n  206      def __init__(self, quiver_client=None, datasrv=None):\n  ...\n  222          # Return an 'authoring service,' which is capable of writing stories\n  223          # directly. The module object provides access to fossil source.\n  224:         return QuiverAuthoringService(story_spec, pequod.fossil, self.datasrv, pequod.module)\n  225  \n  226  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/release/dao.py:\n   13  class _ReleaseDAO(object):\n   14      # Loaded from configuration at runtime:\n   15:     ENV = {} # Quiver environments\n   16:     VTRACK = {} # Quiver version types\n   17:     _ENV_ = {} # Quiver environment linked list\n   18      _DEV = None # Development environment (first)\n   19  \n   ..\n  149        before, after, rollback):\n  150          return {\n  151:           # Quiver identity\n  152            'account_id': release['account_id'],\n  153            'beat_id': release['beat_id'],\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/release/views.py:\n  102      return _response(deployment)\n  103  \n  104: # Quiver passthrough\n  105  \n  106  @releases.route(\"/quiver/<env>/\", methods=[\"GET\",\"POST\"])\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/release/worker.py:\n    5  import json\n    6  import requests\n    7: from ns.quiver.quiver import Quiver\n    8  \n    9  API_HOST = 'http://localhost:32555'\n   ..\n   23              self.config = yaml.load(f.read())\n   24          self.quivers = {\n   25:           e['slug']: Quiver(db=(\n   26              e['quiver_db']['host'],\n   27              e['quiver_db']['port'],\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/fossil.py:\n    4  import requests\n    5  from ns_ahab.server.pequods import Pequod\n    6: from ns_ahab.server.quiver_client import QuiverClient, Quiver2Client\n    7  \n    8  from ns_quiver_client.util import RESOURCE_VERSION_PTRN\n    9  \n   10  def compile_fossil(project_url, version='latest'):\n   11:     '''Takes a base Quiver URL and builds a fossil string.\n   12  \n   13:     Sample Quiver URL:\n   14:     For Quiver1: /accounts/1/beats/2/projects/3/\n   15:     For Quiver2: /story/1/0.0.0/\n   16  \n   17      '''\n   18:     quiver1_client = QuiverClient()\n   19:     quiver2_client = Quiver2Client()\n   20:     # Hit Quiver, get project_info\n   21      if RESOURCE_VERSION_PTRN.search(project_url):\n   22          project_info = quiver2_client.fetch_resource(uri=project_url).to_dict()\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/main.py:\n    4  #\n    5  # python main.py compile [--out=FILE] PROJECT_URL\n    6: #   PROJECT_URL: Quiver url\n    7  #   Compile an Ahab story to a fossil (python code) and emit to FILE or stdout\n    8  #\n    .\n   14  #\n   15  # python main.py stylebook [--out=FILE] PROJECT_URL\n   16: #   PROJECT_URL: Quiver url (if not supplied, use latest version)\n   17  #   Fetch stylebook and save to FILE or stdout\n   18  #\n   ..\n   78  def compile_usage(fp):\n   79      fp.write(\"  compile [--out=FILE] PROJECT_URL\\n\\n\")\n   80:     fp.write(\"    PROJECT_URL: Quiver url (if not supplied, use latest version)\\n\\n\")\n   81      fp.write(\"    Compile an Ahab story to a fossil (python code) and emit to FILE or stdout\\n\\n\")\n   82  \n   ..\n  101  def stylebook_usage(fp):\n  102      fp.write(\"  stylebook [--out=FILE] PROJECT_URL\\n\\n\")\n  103:     fp.write(\"    PROJECT_URL: Quiver url (if not supplied, use latest version)\\n\\n\")\n  104      fp.write(\"    Fetch stylebook and save to FILE or stdout\\n\\n\")\n  105  \n  ...\n  111      quiver_url = decode_quiver_url(parsed_args.url)\n  112      os.environ['QUIVER_SERVICE_HOST'] = quiver_url['base_url']\n  113:     from ns_ahab.server.quiver_client import QuiverClient\n  114:     config_service = QuiverClient()\n  115      resource_url = \"%sp/versions/%s/publishing/stylebooks/\" % (quiver_url['project_url'], quiver_url['version'])\n  116      qconfig = config_service.get_resource(resource_url)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/qcollections.py:\n    7  from ns_ahab.qtypes.factory import get_qtype_class\n    8  \n    9: from ns_quiver_client.client import QuiverResource\n   10  \n   11  class QCollection(object):\n   ..\n   77  \n   78      def setup(self, project_info, version='latest'):\n   79:         '''Hits Quiver or Quiver2 and pulls down all the configs.'''\n   80          if project_info.get('resource_history'):\n   81              self.setup_quiver2_project(project_info, version)\n   ..\n   84  \n   85      def setup_quiver2_project(self, project_info, version):\n   86:         '''Hits Quiver2 and pulls down all the configs for a story and its\n   87          story dependencies.'''\n   88          self.is_quiver2_project = True\n   ..\n   91          self.project_version = version\n   92  \n   93:         # Quiver2 stories (projects) have settings baked-in, not in a separate\n   94          # entity.\n   95          self.project_settings = project_info\n   ..\n  106  \n  107      def collect_quiver2_configs(self, story):\n  108:         '''Add configItem resources from a Quiver2 story resource.'''\n  109          configs = story.fetch_resources()\n  110          for config in configs:\n  111              if config.get('configType'):\n  112                  data = config.data\n  113:                 if isinstance(config.parent, QuiverResource):\n  114                      data['parent'] = None\n  115                  else:\n  ...\n  120  \n  121      def setup_quiver1_project(self, project_info, version):\n  122:         '''Hits Quiver1 and pulls down all the configs.'''\n  123          self.project_info = project_info\n  124          self.project_version = version\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/server/pequods.py:\n   19  \n   20  from ns_stylebooks.renderer import get_xml_renderer, get_html_renderer\n   21: from ns_ahab.server.quiver_client import QuiverClient, Quiver2Client\n   22  from ns_stylebooks.rule_parser import StylebookParserFactory\n   23  from ns_stylebooks.stylebook import Stylebook\n   ..\n  114      def __init__(self, config_service=None, quiver2_client=None):\n  115          if config_service is None:\n  116:             config_service = QuiverClient()\n  117          if quiver2_client is None:\n  118:             quiver2_client = Quiver2Client()\n  119          self.config_service = config_service\n  120          self.quiver2_client = quiver2_client\n  ...\n  271  \n  272      def get_stylebook_from_quiver2(self, story_uri):\n  273:         '''Fetch and build list of stylebook rule configs given a Quiver2\n  274          story URI.'''\n  275          story = self.quiver2_client.fetch_resource(uri=story_uri)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/server/quiver_client.py:\n    4  import os\n    5  \n    6: from ns_quiver_client.client import QuiverClient as _Quiver2Client\n    7  \n    8  # Check for QUIVER_SERVICE_HOST in environ.  If not provided, fall back to\n    .\n   36          assert False, msg\n   37  \n   38: class Quiver2Client(_Quiver2Client):\n   39:     '''Thin extension of the QuiverClient class in Quiver2 purely to partially\n   40      apply init params.'''\n   41  \n   42      def __init__(self):\n   43:         super(Quiver2Client, self).__init__(QUIVER2_SERVICE_HOST)\n   44  \n   45: class QuiverResponseError(Exception):\n   46      pass\n   47  \n   48: class QuiverClient():\n   49      def __init__(self, base_url=DEFAULT_QUIVER_URL):\n   50          self.base_url = base_url\n   ..\n   53          \"\"\"\n   54          Retrieves contents associated with a quiver url.  Returns\n   55:         a dict; raises QuiverResponseError if there are problems.\n   56          \"\"\"\n   57          headers = {\"Content-Type\": \"application/json\"}\n   ..\n   62              # unable to get a response from quiver\n   63              logging.info(str(e))\n   64:             raise QuiverResponseError(\"%s (url = %s)\" % (e.message, url))\n   65          # got a response from quiver, look for problems\n   66          if resp.status_code != 200:\n   ..\n   73              else:\n   74                  error_msg = \"(url = %s) %s\" % (url, resp_dict['error'])\n   75:             logging.info(\"QuiverResponseError: %s\" % error_msg)\n   76:             raise QuiverResponseError(error_msg)\n   77          # quiver gave a good response...\n   78          resource_content = json.loads(resp.content)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ahab/server/server.py:\n   15  from ns_ahab import util\n   16  from ns_ahab.server import pequods\n   17: from ns_ahab.server.quiver_client import QuiverClient\n   18  \n   19  from ns_core.logging.flask_decorator import view_logger\n   ..\n   21  server = Flask(__name__)\n   22  \n   23: pequod = pequods.Pequod(config_service=QuiverClient())\n   24  \n   25  # Keep redirecting normal logs to stdout\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/nsprop.py:\n  157  \n  158          conf.set(\"local_services.quiver_config.class\",\n  159:                  \"ns.quiver.client.QuiverStoryConfigService\")\n  160          conf.set(\"local_services.quiver_story.class\",\n  161:                  \"ns.quiver.client.QuiverStoryService\")\n  162          conf.set(\"local_services.quiver_story.inject.service\",\n  163                   \"quiver_config\")\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/quiver_fixture.py:\n    1  '''\n    2: Quiver fixturizer.  Dumps all MongoDB state for a provided story type.\n    3: Stores the resultant state into s3_ns_ci/fixtures/QuiverConfigFixture\n    4  \n    5  Usage:\n    .\n   19    \"versions.bson\")\n   20  \n   21: class QuiverConfigFixture(object):\n   22      def __init__(self, story_type):\n   23          self.story_type = story_type\n   ..\n   88          bucket = Bucket(\"s3_ns_ci\")\n   89          for collection in COLLECTIONS:\n   90:             key = \"/fixtures/QuiverConfigFixture/%s/%s\" %\\\n   91                (self.story_type, collection)\n   92              print 'PUTTING', key\n   ..\n   99              os.makedirs(self.TMP_DIR)\n  100          for collection in COLLECTIONS:\n  101:             key = \"/fixtures/QuiverConfigFixture/%s/%s\" %\\\n  102                (self.story_type, collection)\n  103              print 'GETTING', key\n  ...\n  120  you cannot restore into editorial, qa, press quiver.\")\n  121      args = p.parse_args()\n  122:     fixture = QuiverConfigFixture(args.story_type)\n  123      if args.dump:\n  124          fixture.dump(args.db)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_quiver_client/client.py:\n   36  ]\n   37  \n   38: class _QuiverObject(object):\n   39:     '''Core class inherited by all Quiver object classes. Abstracts attribute\n   40      setting, HTTP request sending, and child object linking.'''\n   41      child_class = None\n   ..\n   92  \n   93      def get_client(self):\n   94:         '''Walk up the tree to find the QuiverClient instance.'''\n   95:         if isinstance(self, QuiverClient):\n   96              return self\n   97:         elif isinstance(self._q_parent, QuiverClient):\n   98              return self._q_parent\n   99          elif self._q_parent:\n  ...\n  165  \n  166      def get_full_uri(self):\n  167:         '''URI to this object in Quiver. If it was instantiated with a uri or\n  168          was fetched, it doesn't need to build one from its attributes.'''\n  169          base_uri = self.get_base_uri().strip('/')\n  ...\n  300  \n  301  \n  302: class QuiverResource(_QuiverObject):\n  303      uri_attribute = 'version'\n  304      children_uri_batch_name = 'resources'\n  ...\n  323          attrs.setdefault('file_ids', [])\n  324          self.dependencies = []\n  325:         super(QuiverResource, self).__init__(**attrs)\n  326  \n  327      def __eq__(self, other):\n  ...\n  382              copy_resource.update(copy_resource.get('data', {}))\n  383              del copy_resource['data']\n  384:         return QuiverResource(_q_parent=self, **copy_resource)\n  385  \n  386      def get_base_uri(self):\n  387:         if isinstance(self._q_parent, QuiverResource):\n  388              host = util.get_host(self._q_parent.get_full_uri())\n  389              try:\n  ...\n  396                      raise exceptions.ChildMissingURIException(self)\n  397          else:\n  398:           return super(QuiverResource, self).get_base_uri()\n  399  \n  400      def is_child_linked(self, child):\n  ...\n  524          return (response.content, response.headers['content-type'])\n  525  \n  526: QuiverResource.child_class = QuiverResource\n  527  \n  528  \n  529: class QuiverResourceHistory(_QuiverObject):\n  530      uri_attribute = 'id'\n  531:     child_class = QuiverResource\n  532      children_uri_batch_name = 'resources'\n  533      core_attributes = (\n  ...\n  553  \n  554  \n  555: class QuiverResourceType(_QuiverObject):\n  556      uri_attribute = 'type'\n  557:     child_class = QuiverResourceHistory\n  558      children_uri_batch_name = 'histories'\n  559      core_attributes = (\n  ...\n  566      def __init__(self, **attrs):\n  567          attrs.setdefault('is_package', False)\n  568:         super(QuiverResourceType, self).__init__(**attrs)\n  569  \n  570      @property\n  ...\n  589          ResourceType.'''\n  590          data = self._get('%shistories/latest/' % (self.get_full_uri()))\n  591:         children = [self._new_child(_class=QuiverResource, **child_data)\n  592            for child_data in data]\n  593          return children\n  ...\n  605                else:\n  606                    raise\n  607:         return self._new_child(_class=QuiverResource, **data)\n  608  \n  609      def find_resources_by_name(self, name):\n  610          '''Query this ResourceType's latest resources by name. Returns a list\n  611:         of QuiverResources.'''\n  612          data = self._get('%shistories/latest/' % (self.get_full_uri()),\n  613            query={'name': name})\n  614:         children = [self._new_child(_class=QuiverResource, **child_data)\n  615            for child_data in data]\n  616          return children\n  617  \n  618  \n  619: class QuiverClient(_QuiverObject):\n  620:     child_class = QuiverResourceType\n  621      children_uri_batch_name = 'resource_types'\n  622      core_attributes = (\n  ...\n  625  \n  626      def __init__(self, host, hostname=None, **attrs):\n  627:         '''Initialize QuiverClient.\n  628  \n  629          Options:\n  630:         host -- str, full url to a Quiver service of the format:\n  631            <protocol>://<hostname>:<port>\n  632          hostname -- str, hostname (without protocol or port) to sent in the\n  ...\n  635  \n  636          '''\n  637:         super(QuiverClient, self).__init__()\n  638          self.uri = '/'\n  639          self.host = host.strip('/')\n  ...\n  650  \n  651      def fetch(self):\n  652:         super(QuiverClient, self).fetch()\n  653          self.fetch_resource_types()\n  654          return self\n  ...\n  658  \n  659      def new_resource(self, **attrs):\n  660:         '''Instantiate new QuiverResource directly off the client. Use this if\n  661          you know the resource's URI and don't need to access resource history\n  662          or other data \"up\" the tree.'''\n  663:         return QuiverResource(_q_parent=self, **attrs)\n  664  \n  665      def fetch_resource_types(self):\n  ...\n  705      def find_resources_by_name(self, type, name):\n  706          '''Query a ResourceType's latest resources by name. Returns a list of\n  707:         QuiverResources.'''\n  708          rt = self.get_or_create_resource_type(type=type)\n  709          return rt.find_resources_by_name(name)\n  ...\n  721  \n  722      Args:\n  723:     (see QuiverClient.__init__)\n  724      resource_types -- list, Either ResourceType \"type\"s or full dictionaries.\n  725  \n  726      Returns:\n  727:     QuiverClient instance\n  728  \n  729      '''\n  ...\n  731      if rt_specs is not None:\n  732          del kwargs['resource_types']\n  733:     qc = QuiverClient(*args, **kwargs)\n  734      qc.fetch()\n  735      if rt_specs is not None:\n  ...\n  758  \n  759      Returns:\n  760:     instance of QuiverResource\n  761  \n  762      '''\n  ...\n  771      else:\n  772          raise Exception('Invalid key format: %s' % key)\n  773:     qc = QuiverClient(**config)\n  774      r = qc.new_resource(uri=resource_uri)\n  775      r.save(**attrs)\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_quiver_client/exceptions.py:\n    1: '''QuiverClient exceptions.'''\n    2  \n    3  class MissingChildException(Exception):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_quiver_client/legacy.py:\n    1: '''Sugared functions for interacting with Quiver by legacy services.'''\n    2  from ns_quiver_client.client import bootstrap\n    3  \n    .\n   30              ass_spec = find_assign_spec_by_beat_name(config, beat_name)\n   31          except IndexError:\n   32:             raise MissingResourceError('Could not find assignment spec for beat name \"%s\" in Quiver2 (%s)' % (beat_name, config))\n   33          if ass_spec is None:\n   34              return None\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_quiver_client/util.py:\n    1: '''Utility functions and common Quiver-related patterns.'''\n    2  import datetime\n    3  import json\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/config/__init__.py:\n    3  MONGO_ID = re.compile('^[0-9a-f]{24}$')\n    4  \n    5: # Full Quiver2 resource URI format\n    6  # TODO: this exists in ns_quiver_client.util but we can't import it because of\n    7  #   a circular package dependency on ns_utils. Remove the circular dependency\n    8: #   so we can keep Quiver2 functionality centralized.\n    9  RESOURCE_VERSION_PTRN = re.compile(\n   10    '^/\\w+/\\w+/(latest|([0-9]+(?:\\.[0-9]+(?:\\.[0-9]+)?)?)?)/')\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/config/cache.py:\n   15  \n   16  \n   17: class QuiverResponseError(Exception):\n   18      pass\n   19  \n   ..\n   22      \"\"\"\n   23      Retrieves contents associated with a quiver url.  Returns\n   24:     a dict; raises QuiverResponseError if there are problems.\n   25      \"\"\"\n   26      headers = {\"Content-Type\": \"application/json\"}\n   ..\n  249          # and manually add delivery configuration for all existing projects\n  250          # Then once this is done, make the above case the only case.\n  251:         # or just wait until Quiver2 becomes a reality for all authoring\n  252          # configuration.\n  253          env = ENV_MAP.get(ns_prop.env, DEFAULT_ED_ENV)\n  ...\n  442          qconfig = get_quiver_resource(config_id, store)\n  443  \n  444:     # Munge Quiver responses to conform to YAML structures\n  445  \n  446      if service_name == 'delivery':\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/__init__.py:\n    8  objects for standard resources such as databases, services or remote\n    9  data files in a standard way and provide APIs to persist those\n   10: configs into files or Quiver for the production pipelines. \n   11  \n   12  \"\"\"\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/resource_context.py:\n   87      request\n   88  \n   89:     TODO:(devans) Impl/Test/Finalise this with Quiver\n   90      \"\"\"\n   91      msg = \"quiver_loader({0}) called but not implemented\".format(url)\n   ..\n   99      POST a new config to the given quiver URL\n  100  \n  101:     TODO:(devans) Impl/Test/Finalise this with Quiver\n  102  \n  103      \"\"\"\n  ...\n  130      there are some attributes related to where this ResourceMap\n  131      is used:\n  132:     (These map to entities in Quiver)\n  133  \n  134      - account - The name of the client account\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/resource_set.py:\n    5  Mapping of named resource definitions,\n    6  persistable to various backends including\n    7: files (for local development) and Quiver\n    8  for production like pipeline configurations.\n    9  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/nstests/services/assignment_service/assign_test.py:\n  597      def test_create(self, mock_AssignmentCreated, mock_find_assign_spec):\n  598          '''Checks to make sure ass id is created and AssignmentCreated event\n  599:         is triggered. Checks to make sure Stubby.create can use Quiver2 to\n  600          check for existence of assignment spec by beat name.'''\n  601          self.obj_ut = assign.Stubby('NeverendingStory')\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver-0.1.4-py2.7.egg-info/PKG-INFO:\n    2  Name: quiver\n    3  Version: 0.1.4\n    4: Summary: NS Quiver Package\n    5  Home-page: http://www.narrativescience.com\n    6  Author: Mike Smathers\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/__init__.py:\n    1: from quiver import Quiver\n    2  __version__ = '0.1.4'\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/dao/__init__.py:\n    1: '''Generic DAO object for all Quiver persistence.'''\n    2  \n    3  import copy\n    .\n    7  class ImmutableProperty(Exception): pass\n    8  \n    9: class _QuiverObject(object):\n   10:     '''Abstract DAO layer for Quiver object persistence.\n   11  \n   12      Clients use static methods to create/retrieve/delete objects:\n   ..\n   51      @classmethod\n   52      def get_connection(cls):\n   53:         return QuiverConnection(*cls.DATABASE)\n   54  \n   55      # Create\n   ..\n  137  \n  138  \n  139: class QuiverConnection(object):\n  140      '''Wraps pymongo Connection'''\n  141      def __init__(self, host, port, db_name):\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/dao/beat.py:\n    2  \n    3  from pymongo.objectid import ObjectId\n    4: from quiver.dao import _QuiverObject\n    5  \n    6: class Beat(_QuiverObject):\n    7      COLLECTION_NAME = 'beats'\n    8      VERSION_CLASSES = []\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/dao/config.py:\n    6  from jsonschema import validate, ValidationError\n    7  from pymongo.objectid import ObjectId\n    8: from quiver.dao import _QuiverObject\n    9  \n   10  class InvalidConfiguration(Exception): pass\n   ..\n   12  class VersionBeatsDoNotMatch(Exception): pass\n   13  \n   14: class _Config(_QuiverObject):\n   15:     '''Abstract Quiver configuration object.\n   16      Subclasses are produced by a factory using schemas from YAML config.\n   17      Each object contains beat & version references, and validates data against\n   ..\n   19      SORT = ('created',-1)\n   20      COLLECTION_NAME = 'configs'\n   21:     IMMUTABLE = _QuiverObject.IMMUTABLE.union(('beat_id','type'))\n   22      INDEXES = [\n   23        [\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/dao/project.py:\n    2  \n    3  from pymongo.objectid import ObjectId\n    4: from quiver.dao import _QuiverObject\n    5  \n    6: class Project(_QuiverObject):\n    7      COLLECTION_NAME = 'projects'\n    8      VERSION_CLASSES = []\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/dao/version.py:\n    1  '''Generic Version DAO object.\n    2: Subclasses are built from configuration when Quiver is instantiated.'''\n    3  \n    4  from datetime import datetime\n    5  from pymongo.objectid import ObjectId\n    6: from quiver.dao import _QuiverObject\n    7  from quiver.dao.config import _Config\n    8  \n    9: class _Version(_QuiverObject):\n   10      '''Version stores references to all objects that were manipulated\n   11      (created/updated/deleted) while it was active. All configuration\n   ..\n   13      SORT = ('id', -1)\n   14      COLLECTION_NAME = 'versions'\n   15:     IMMUTABLE = _QuiverObject.IMMUTABLE.union(('beat_id',))\n   16      CONFIG_TYPES = []\n   17      CONFIG_CLASS = _Config\n   ..\n  155          target_configs = target_db.db[_Config.COLLECTION_NAME]\n  156  \n  157:         # Ensure version parents exist on target Quiver\n  158          if self.beat:\n  159              target_beat = target_quiver.objects.Beat\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/quiver.py:\n    1: '''Quiver is a general-purpose RESTful service for Quill configuration.'''\n    2  \n    3  import os\n    .\n   23    os.path.join(BASE_PATH, 'config/db.yaml'))\n   24  \n   25: class Quiver(object):\n   26      '''Encapsulates core Flask app and DAO objects.  Upon instantiation,\n   27      resource & version configuration is used to build appropriate Flask\n   ..\n   78              def read_only():\n   79                  if request.method != 'GET':\n   80:                     return _error(\"Quiver is in read-only mode\", 405)\n   81  \n   82          return app\n   ..\n  130  \n  131          # Build quiver.objects\n  132:         class QuiverObjects(object):\n  133              Versions = version_classes\n  134              _Version = QVersion\n  ...\n  143                  cls._Config.ensure_indexes()\n  144  \n  145:         return QuiverObjects\n  146  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/wsgi/app.py:\n    1: from quiver import Quiver\n    2: app = Quiver().create_app()\n    3  \n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/wsgi/run_quiver.py:\n   16      args = parser.parse_args()\n   17      print \"QUIVER IS READY\"\n   18:     from quiver import Quiver\n   19:     app = Quiver().create_app()\n   20      app.run(host=args.host, port=args.port, debug=True,\n   21              use_reloader=(not args.disable_reloader))\n\n/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/batcher/v1/configs.py:\n   10          project_url = project_urls[str(story_type)]\n   11      except KeyError:\n   12:         msg = 'Could not find Quill/Quiver1 project url for %s' % story_type\n   13          raise RuntimeError(msg)\n   14      version = get_project_version(config, env_slug, story_type, project_url)\n\n205 matches across 48 files\n\n\nSearching 54 files for \"Quiver\" (case sensitive)\n\n0 matches across 0 files\n\n\nSearching 27 files for \"Quiver\" (case sensitive)\n\n/Users/anelson/narr/ns_services/workflow/src/workflow/batcher/v1/configs.py:\n   10          project_url = project_urls[str(story_type)]\n   11      except KeyError:\n   12:         msg = 'Could not find Quill/Quiver1 project url for %s' % story_type\n   13          raise RuntimeError(msg)\n   14      version = get_project_version(config, env_slug, story_type, project_url)\n\n1 match in 1 file\n\n\nSearching 2506 files for \"Quiver\" (case sensitive)\n\n/Users/anelson/narr/ns_services/workflow/src/workflow/batcher/v1/configs.py:\n   10          project_url = project_urls[str(story_type)]\n   11      except KeyError:\n   12:         msg = 'Could not find Quill/Quiver1 project url for %s' % story_type\n   13          raise RuntimeError(msg)\n   14      version = get_project_version(config, env_slug, story_type, project_url)\n\n/Users/anelson/narr/ns_services/workflow/vendor/python/lib/python2.7/site-packages/ns_utils/config/__init__.py:\n    3  MONGO_ID = re.compile('^[0-9a-f]{24}$')\n    4  \n    5: # Full Quiver2 resource URI format\n    6  # TODO: this exists in ns_quiver_client.util but we can't import it because of\n    7  #   a circular package dependency on ns_utils. Remove the circular dependency\n    8: #   so we can keep Quiver2 functionality centralized.\n    9  RESOURCE_VERSION_PTRN = re.compile(\n   10    '^/\\w+/\\w+/(latest|([0-9]+(?:\\.[0-9]+(?:\\.[0-9]+)?)?)?)/')\n\n/Users/anelson/narr/ns_services/workflow/vendor/python/lib/python2.7/site-packages/ns_utils/config/cache.py:\n   15  \n   16  \n   17: class QuiverResponseError(Exception):\n   18      pass\n   19  \n   ..\n   22      \"\"\"\n   23      Retrieves contents associated with a quiver url.  Returns\n   24:     a dict; raises QuiverResponseError if there are problems.\n   25      \"\"\"\n   26      headers = {\"Content-Type\": \"application/json\"}\n   ..\n  249          # and manually add delivery configuration for all existing projects\n  250          # Then once this is done, make the above case the only case.\n  251:         # or just wait until Quiver2 becomes a reality for all authoring\n  252          # configuration.\n  253          env = ENV_MAP.get(ns_prop.env, DEFAULT_ED_ENV)\n  ...\n  442          qconfig = get_quiver_resource(config_id, store)\n  443  \n  444:     # Munge Quiver responses to conform to YAML structures\n  445  \n  446      if service_name == 'delivery':\n\n/Users/anelson/narr/ns_services/workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/__init__.py:\n    8  objects for standard resources such as databases, services or remote\n    9  data files in a standard way and provide APIs to persist those\n   10: configs into files or Quiver for the production pipelines. \n   11  \n   12  \"\"\"\n\n/Users/anelson/narr/ns_services/workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/resource_context.py:\n   87      request\n   88  \n   89:     TODO:(devans) Impl/Test/Finalise this with Quiver\n   90      \"\"\"\n   91      msg = \"quiver_loader({0}) called but not implemented\".format(url)\n   ..\n   99      POST a new config to the given quiver URL\n  100  \n  101:     TODO:(devans) Impl/Test/Finalise this with Quiver\n  102  \n  103      \"\"\"\n  ...\n  130      there are some attributes related to where this ResourceMap\n  131      is used:\n  132:     (These map to entities in Quiver)\n  133  \n  134      - account - The name of the client account\n\n/Users/anelson/narr/ns_services/workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/resource_set.py:\n    5  Mapping of named resource definitions,\n    6  persistable to various backends including\n    7: files (for local development) and Quiver\n    8  for production like pipeline configurations.\n    9  \n\n12 matches across 6 files\n\n\nSearching 27 files for \"Quiver\" (case sensitive)\n\n/Users/anelson/narr/ns_services/workflow/src/workflow/batcher/v1/configs.py:\n   10          project_url = project_urls[str(story_type)]\n   11      except KeyError:\n   12:         msg = 'Could not find Quill/Quiver1 project url for %s' % story_type\n   13          raise RuntimeError(msg)\n   14      version = get_project_version(config, env_slug, story_type, project_url)\n\n1 match in 1 file\n",
					"settings":
					{
						"buffer_size": 108232,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/document_generation/common/src/ns_doc_gen/api.py",
					"settings":
					{
						"buffer_size": 2756,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/workflow/src/workflow/engine/v2/engine.py",
					"settings":
					{
						"buffer_size": 4207,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core/binary.py",
					"settings":
					{
						"buffer_size": 2224,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "'''Tests of the `binary` module, esp. the `BinaryObject` class.'''\n\nimport unittest\n\nfrom mock import Mock, patch\n\nfrom ns_core.binary import BinaryObject\n\nclass BinaryTests(unittest.TestCase):\n    @patch('base64.b64encode')\n    def test_with_unencoded(self, m_encode):\n        bo = BinaryObject('hey there', 'cool mimetype')\n        self.assertEqual(bo.unencoded, 'hey there')\n        self.assertEqual(bo.encoded, '')\n        self.assertEqual(bo.mimetype, 'cool mimetype')\n\n        # Running `get` with no arguments should give us the unencoded version\n        self.assertEqual(bo.get(), 'hey there')\n\n        m_encode.return_value = 'dis is encoded'\n\n        # Now we'll run `get` with base64 encoding\n        self.assertEqual(bo.get(encoding='base64'), 'dis is encoded')\n        m_encode.assert_called_with('hey there')\n\n        # after getting the encoded version, we should have both available\n        self.assertEqual(bo.encoded, 'dis is encoded')\n        self.assertEqual(bo.unencoded, 'hey there')\n\n    @patch('base64.b64decode')\n    def test_with_encoded(self, m_decode):\n        bo = BinaryObject('dis is encoded', 'cool mimetype', encoding='base64')\n        self.assertEqual(bo.unencoded, '')\n        self.assertEqual(bo.encoded, 'dis is encoded')\n        self.assertEqual(bo.mimetype, 'cool mimetype')\n\n        # Run `get` with base64 encoding\n        self.assertEqual(bo.get(encoding='base64'), 'dis is encoded')\n        self.assertFalse(m_decode.called)\n\n        # Running `get` with no arguments should give us the unencoded version\n        m_decode.return_value = 'hey there'\n        self.assertEqual(bo.get(), 'hey there')\n        m_decode.assert_called_with('dis is encoded')\n\n        # after getting the unencoded version, we should have both available\n        self.assertEqual(bo.encoded, 'dis is encoded')\n        self.assertEqual(bo.unencoded, 'hey there')\n\n    def test_json(self):\n        bo = BinaryObject('hey there', 'cool mimetype')\n        bo.encoded = 'dis be encoded'\n        # Convert to JSON. By default it should just be a small string.\n        self.assertEqual(bo.__json__(), \n                         '(binary data, type cool mimetype, 9 bytes)')\n\n        # Turn write_encoded on, now it should show the encoded version\n        bo.write_encoded = True\n        self.assertEqual(bo.__json__(), {\n                'content-type': 'cool mimetype',\n                'content': 'dis be encoded',\n                'encoding': 'base64'\n            })\n\n\n\nif __name__ == '__main__':\n    unittest.main()\n",
					"file": "/Users/anelson/narr/ns_services/ns_platform_core/tests/unit/binary_test.py",
					"file_size": 2481,
					"file_write_time": 130391127060000000,
					"settings":
					{
						"buffer_size": 2526,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/ns_platform_core/tests/unit/service_test.py",
					"settings":
					{
						"buffer_size": 4203,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Package Control Messages\n========================\n\nPython Improved:\n---------------\n\n  Python Improved\n  ===============\n  \n  Thank you for installing Python Improved, the better Python language definition\n  for Sublime Text! To make this your default Python, open a `.py` Python file.\n  Select `View -> Syntax -> Open all with current extension as... -> PythonImproved`\n  and you should be all set.\n  \n  To take full advantage of the extra scopes included in Python Improved, check\n  out the Neon Color Scheme at https://sublime.wbond.net/packages/Neon%20Color%20Scheme\n  If you'd rather modify your own color scheme, a list of scopes is included in\n  the README.md in the `Packages/Python Improved` directory. You can also find\n  them on GitHub at https://github.com/MattDMo/PythonImproved\n  \n  If you have any questions, comments, concerns, bugs, or patches, please open an\n  issue or pull request on GitHub and I'll do what I can to help out. You can also\n  email me directly at <mattdmo@pigimal.com> or find me on Twitter @MattDMo. This\n  is definitely a work in progress, so if you'd like to contribute I'd love to\n  hear from you!\n  \n",
					"settings":
					{
						"buffer_size": 1141,
						"line_ending": "Unix",
						"name": "Package Control Messages",
						"scratch": true
					}
				},
				{
					"file": "/Users/anelson/narr/ns_services/workflow/src/workflow/engine/v1/engine.py",
					"settings":
					{
						"buffer_size": 12652,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"command_palette":
			{
				"height": 307.0,
				"selected_items":
				[
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"insta",
						"SublimeHaskell: Install"
					],
					[
						"ad",
						"Project: Add Folder"
					],
					[
						"add",
						"Project: Add Folder"
					],
					[
						"a",
						"Project: Add Folder"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"in",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 167.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/anelson/narr/ns_services/document_generation/common/src/ns_doc_gen/api.py",
				"/Users/anelson/narr/ns_services/document_generation/common/tests/unit/api_test.py",
				"/Users/anelson/narr/ns_services/document_generation/common/src/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/banking/bank_intel/derivations_overdue.yaml",
				"/Users/anelson/narr/ns_services/ns_workflow/dev_guide.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py",
				"/Users/anelson/narr/ns_services/ns_workflow/CHANGELOG.md",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/coverage/htmlfiles/coverage_html.js",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/baleen/aws_processer.py",
				"/Users/anelson/narr/ns_services/ns_workflow/application.log",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/bundle_image",
				"/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core/binary.py",
				"/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core/service.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/flow_engine/config_loader.py",
				"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py",
				"/Users/anelson/narr/ns_services/workflow/src/workflow/engine/common.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/services/flow_engine/results.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/flow_engine2/retopic.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/entry_points.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/error.log",
				"/Users/anelson/narr/ns_services/workflow/src/workflow/http/v1/views.py",
				"/Users/anelson/narr/ns_services/ns_workflow/Vagrantfile",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/dynamodb/table.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/pytz/zoneinfo/Asia/Tel_Aviv",
				"/Users/anelson/narr/ns_services/ns_workflow/test-requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_publishing_client/encoder.py",
				"/Users/anelson/workspace/languages/llama/thoughts/deep mutable and desugaring for.md",
				"/Users/anelson/narr/ns_services/workflow/src/workflow/batcher/v1/configs.py",
				"/Users/anelson/workspace/languages/llama/thoughts/references oh my.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/resize_ebs_instance.py",
				"/Users/anelson/narr/ns_services/ns_workflow/requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/batcher/v1/configs.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/quiver/views/configs.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/quiver/configs.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/coverage",
				"/Users/anelson/workspace/python/silly.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/decorators.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/ishmael_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/v2_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/ns_prop.py.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/factories.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
				"/Users/anelson/narr/ns_lib/src/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/server.py",
				"/Users/anelson/workspace/python/wordcount.py",
				"/Users/anelson/workspace/c++/lambdas/hello_lambda.cpp",
				"/Users/anelson/workspace/languages/llama/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/more on traits.md",
				"/Users/anelson/workspace/languages/llama/thoughts/print module",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
				"/Users/anelson/.ssh/config",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/notification_schedules.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/encodings/string_escape.py",
				"/Users/anelson/narr/ns_services/ns_workflow/setup.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/testsuite/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/raven/transport/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_delivery_plugins/http_delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/celery/task/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/https_connection.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_db/factory/happybase_table_factory.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/test_data/hello.docx",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/v2_sample_request.json",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring_cache.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/author_config_fixture.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/aws_util.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/functional/workflow_outofband_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/wftest",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/delivery_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/charting_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/rendering_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/decorators_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/v2/job_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/monitoring/feed_aggregator.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/uwsgi/ns_workflow.yaml.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/doc_gen_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/dependency_links.txt",
				"/Users/anelson/workspace/languages/llama/thoughts/Enforcing functional purity in Llama.md",
				"/usr/local/Library/Formula/imagemagick.rb",
				"/Users/anelson/workspace/languages/llama/src/EvaluatorLib.hs",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/services/data_engine_client.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/data_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_data_btn/mongoeng/football/ingest_team_names.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/ishmael.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/config/install-sh",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with member variables.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/text.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/esb_config.py",
				"/Users/anelson/workspace/languages/llama/src/TypeChecker.hs",
				"/Users/anelson/narr/misc/interview notes/Frederic Zapata",
				"/Users/anelson/workspace/languages/llama/thoughts/blocks.md",
				"/Users/anelson/workspace/languages/llama/src/Parser.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/src/types/instances.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/instances.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/inline-style-tag.html",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/asia/ho_chi_minh.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/code-block-html-escape.html",
				"/Users/anelson/narr/ns_apps/src/backdrop/static/js/ishmael.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/derivations.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/libyaml/deps/yaml/src/tests/example-deconstructor-alt.c",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/antarctica/davis.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/america/puerto_rico.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/package.json",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/ishmael.js",
				"/Users/anelson/zsh-config/extras.sh",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/jade/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/uglify-js/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/test/test_underscore/utility.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/mocha/lib/utils.js"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/Users/anelson/narr/ns_services/workflow/src",
					"/Users/anelson/narr/ns_services/workflow",
					"/Users/anelson/narr/ns_services/workflow/src",
					"/Users/anelson/narr/ns_services/ns_workflow/src",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/narrwhal",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/ishmael"
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"\"",
					"file_ids",
					"json",
					"Result",
					"resource_type",
					"valid",
					"get_project_version_url",
					"Quiver",
					"rendering",
					"get_rendering",
					"slip",
					"Envir",
					"Environment",
					"MODULES_DIR",
					"ishmael",
					"write",
					"self.addEventListener",
					"addEventListener",
					"Worker",
					"addEv",
					"setD",
					"setupPequod",
					"setupIshmael",
					"\"",
					"xml_to_",
					"\"",
					"deprecated",
					"get_replacements",
					"xml_to_charts",
					"ClientException",
					"self.client.",
					"self.",
					"polyp_host",
					"self.",
					"self, ",
					"_xml_to",
					"charts",
					"qid_to_content",
					"self, ",
					"build_charts",
					"self.",
					"caches",
					"fullP",
					"getFeature",
					"length",
					"newFeature",
					"handle",
					"resolve",
					"getFeature",
					"name",
					"getFeatures",
					"child",
					"getFea",
					"get",
					"coffee",
					"model",
					"resolve",
					"maxWrittenCount",
					"getFeature",
					"context",
					"handleMiss",
					"handleMissing",
					"handle",
					"Test ",
					"portfo",
					"@recurse",
					"compile",
					"total_return",
					"computeClosure",
					"getSymT",
					"log'",
					"Render Ty",
					"log'",
					"unify",
					"builtI",
					"runTypingWi",
					"defaultState",
					"pParens",
					"pTerm",
					"pLambda",
					"numNumOp",
					"whoo",
					"pushWith",
					"=>",
					"SymbolTable",
					"symTable",
					"VTupl",
					"throwError",
					"throwError'",
					"throwErrorC",
					"TypingError",
					"litTyp",
					"Int",
					"setType",
					"pExprO",
					"ziffyDiffy",
					"pBody",
					"pDefine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"'",
					"is_valid",
					"self.modules_dir",
					"'",
					"ServerException",
					"",
					"Tester ",
					"@rec",
					"defaultTypingState",
					"numBoolOp",
					"TypeTable",
					"ValueTable",
					"vTable",
					"throwError1",
					"throwErrorC",
					"ErrorList",
					"Num",
					"poop"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_services/ns_workflow"
				},
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_services/workflow"
				},
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_quiver/client/src/ns_quiver_client"
				},
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core"
				},
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_services/document_generation/common"
				},
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_services/ns_platform_core"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1812,
								"regions":
								{
								},
								"selection":
								[
									[
										1020,
										1020
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 253.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 451,
								"regions":
								{
								},
								"selection":
								[
									[
										448,
										448
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JSON.tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 9939,
								"regions":
								{
								},
								"selection":
								[
									[
										384,
										384
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/config.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5379,
								"regions":
								{
								},
								"selection":
								[
									[
										254,
										254
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1642.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/Users/anelson/narr/ns_quiver/client/src/ns_quiver_client/client.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 25666,
								"regions":
								{
								},
								"selection":
								[
									[
										17371,
										17371
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 14880.0,
								"zoom_level": 1.0
							},
							"stack_index": 10,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/Users/anelson/workspace/python/serialize/person.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 465,
								"regions":
								{
								},
								"selection":
								[
									[
										465,
										465
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 14,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/Users/anelson/narr/ns_services/workflow/src/workflow/http/v2/views.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2378,
								"regions":
								{
								},
								"selection":
								[
									[
										686,
										686
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 516.0,
								"zoom_level": 1.0
							},
							"stack_index": 12,
							"type": "text"
						},
						{
							"buffer": 7,
							"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/rendering.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2977,
								"regions":
								{
								},
								"selection":
								[
									[
										1956,
										1956
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 913.0,
								"zoom_level": 1.0
							},
							"stack_index": 15,
							"type": "text"
						},
						{
							"buffer": 8,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 108232,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												363,
												372
											],
											[
												515,
												524
											],
											[
												1020,
												1029
											],
											[
												1172,
												1181
											],
											[
												1677,
												1686
											],
											[
												1829,
												1838
											],
											[
												2334,
												2343
											],
											[
												2486,
												2495
											],
											[
												3211,
												3220
											],
											[
												3788,
												3797
											],
											[
												4365,
												4374
											],
											[
												4847,
												4856
											],
											[
												4999,
												5008
											],
											[
												5724,
												5733
											],
											[
												6301,
												6310
											],
											[
												7003,
												7012
											],
											[
												7485,
												7494
											],
											[
												7637,
												7646
											],
											[
												8331,
												8340
											],
											[
												9012,
												9021
											],
											[
												9421,
												9430
											],
											[
												9686,
												9695
											],
											[
												9860,
												9869
											],
											[
												9921,
												9930
											],
											[
												9981,
												9990
											],
											[
												10324,
												10333
											],
											[
												10669,
												10678
											],
											[
												11032,
												11041
											],
											[
												11168,
												11177
											],
											[
												11491,
												11500
											],
											[
												11501,
												11510
											],
											[
												11784,
												11793
											],
											[
												11813,
												11822
											],
											[
												12182,
												12191
											],
											[
												12192,
												12201
											],
											[
												12486,
												12495
											],
											[
												12754,
												12763
											],
											[
												12783,
												12792
											],
											[
												13128,
												13137
											],
											[
												13344,
												13353
											],
											[
												13406,
												13415
											],
											[
												13662,
												13671
											],
											[
												13900,
												13909
											],
											[
												14023,
												14032
											],
											[
												14164,
												14173
											],
											[
												14390,
												14399
											],
											[
												14659,
												14668
											],
											[
												14953,
												14962
											],
											[
												15238,
												15247
											],
											[
												15428,
												15437
											],
											[
												15585,
												15594
											],
											[
												15810,
												15819
											],
											[
												16081,
												16090
											],
											[
												16368,
												16377
											],
											[
												16719,
												16728
											],
											[
												16812,
												16821
											],
											[
												17011,
												17020
											],
											[
												17174,
												17183
											],
											[
												17456,
												17465
											],
											[
												17620,
												17629
											],
											[
												17814,
												17823
											],
											[
												17982,
												17991
											],
											[
												18149,
												18158
											],
											[
												18430,
												18439
											],
											[
												18661,
												18670
											],
											[
												18736,
												18745
											],
											[
												18820,
												18829
											],
											[
												19289,
												19298
											],
											[
												19775,
												19784
											],
											[
												20235,
												20244
											],
											[
												20464,
												20473
											],
											[
												20756,
												20765
											],
											[
												21101,
												21110
											],
											[
												21430,
												21439
											],
											[
												21825,
												21834
											],
											[
												22202,
												22211
											],
											[
												22535,
												22544
											],
											[
												22831,
												22840
											],
											[
												23116,
												23125
											],
											[
												23447,
												23456
											],
											[
												23501,
												23510
											],
											[
												23975,
												23984
											],
											[
												24065,
												24074
											],
											[
												24431,
												24440
											],
											[
												24710,
												24719
											],
											[
												25092,
												25101
											],
											[
												25479,
												25488
											],
											[
												25489,
												25498
											],
											[
												25911,
												25920
											],
											[
												26331,
												26340
											],
											[
												27360,
												27369
											],
											[
												27934,
												27943
											],
											[
												28209,
												28218
											],
											[
												28516,
												28525
											],
											[
												28771,
												28780
											],
											[
												29027,
												29036
											],
											[
												29283,
												29292
											],
											[
												29536,
												29545
											],
											[
												29786,
												29795
											],
											[
												30035,
												30044
											],
											[
												30295,
												30304
											],
											[
												30546,
												30555
											],
											[
												30802,
												30811
											],
											[
												31064,
												31073
											],
											[
												31322,
												31331
											],
											[
												31574,
												31583
											],
											[
												31828,
												31837
											],
											[
												32085,
												32094
											],
											[
												32362,
												32371
											],
											[
												32625,
												32634
											],
											[
												32906,
												32915
											],
											[
												33173,
												33182
											],
											[
												33460,
												33469
											],
											[
												33719,
												33728
											],
											[
												34014,
												34023
											],
											[
												34323,
												34332
											],
											[
												34674,
												34683
											],
											[
												35028,
												35037
											],
											[
												35314,
												35323
											],
											[
												35529,
												35538
											],
											[
												35752,
												35761
											],
											[
												35776,
												35785
											],
											[
												36109,
												36118
											],
											[
												36389,
												36398
											],
											[
												36510,
												36519
											],
											[
												36538,
												36547
											],
											[
												36698,
												36707
											],
											[
												36843,
												36852
											],
											[
												36896,
												36905
											],
											[
												36953,
												36962
											],
											[
												37154,
												37163
											],
											[
												37397,
												37406
											],
											[
												37466,
												37475
											],
											[
												37486,
												37495
											],
											[
												37574,
												37583
											],
											[
												37624,
												37633
											],
											[
												37746,
												37755
											],
											[
												37806,
												37815
											],
											[
												37826,
												37835
											],
											[
												37993,
												38002
											],
											[
												38386,
												38395
											],
											[
												38484,
												38493
											],
											[
												38507,
												38516
											],
											[
												38579,
												38588
											],
											[
												38633,
												38642
											],
											[
												39040,
												39049
											],
											[
												39414,
												39423
											],
											[
												39903,
												39912
											],
											[
												40221,
												40230
											],
											[
												40626,
												40635
											],
											[
												40944,
												40953
											],
											[
												41305,
												41314
											],
											[
												41637,
												41646
											],
											[
												41982,
												41991
											],
											[
												42335,
												42344
											],
											[
												42734,
												42743
											],
											[
												42973,
												42982
											],
											[
												43289,
												43298
											],
											[
												43537,
												43546
											],
											[
												43818,
												43827
											],
											[
												43979,
												43988
											],
											[
												44357,
												44366
											],
											[
												44738,
												44747
											],
											[
												45148,
												45157
											],
											[
												45465,
												45474
											],
											[
												45841,
												45850
											],
											[
												46229,
												46238
											],
											[
												46562,
												46571
											],
											[
												46845,
												46854
											],
											[
												47270,
												47279
											],
											[
												47617,
												47626
											],
											[
												47777,
												47786
											],
											[
												47983,
												47992
											],
											[
												48152,
												48161
											],
											[
												48270,
												48279
											],
											[
												48320,
												48329
											],
											[
												48467,
												48476
											],
											[
												48701,
												48710
											],
											[
												49026,
												49035
											],
											[
												49304,
												49313
											],
											[
												49517,
												49526
											],
											[
												49857,
												49866
											],
											[
												50212,
												50221
											],
											[
												50488,
												50497
											],
											[
												50922,
												50931
											],
											[
												51226,
												51235
											],
											[
												51505,
												51514
											],
											[
												51707,
												51716
											],
											[
												52096,
												52105
											],
											[
												52516,
												52525
											],
											[
												52865,
												52874
											],
											[
												53242,
												53251
											],
											[
												53523,
												53532
											],
											[
												53823,
												53832
											],
											[
												53833,
												53842
											],
											[
												54018,
												54027
											],
											[
												54028,
												54037
											],
											[
												54318,
												54327
											],
											[
												54671,
												54680
											],
											[
												54715,
												54724
											],
											[
												54757,
												54766
											],
											[
												54801,
												54810
											],
											[
												54811,
												54820
											],
											[
												55064,
												55073
											],
											[
												55113,
												55122
											],
											[
												55165,
												55174
											],
											[
												55448,
												55457
											],
											[
												55501,
												55510
											],
											[
												55789,
												55798
											],
											[
												56024,
												56033
											],
											[
												56069,
												56078
											],
											[
												56112,
												56121
											],
											[
												56157,
												56166
											],
											[
												56167,
												56176
											],
											[
												56425,
												56434
											],
											[
												56475,
												56484
											],
											[
												56528,
												56537
											],
											[
												56816,
												56825
											],
											[
												56870,
												56879
											],
											[
												57163,
												57172
											],
											[
												57526,
												57535
											],
											[
												57569,
												57578
											],
											[
												57610,
												57619
											],
											[
												57653,
												57662
											],
											[
												57663,
												57672
											],
											[
												57708,
												57717
											],
											[
												57760,
												57769
											],
											[
												58013,
												58022
											],
											[
												58061,
												58070
											],
											[
												58112,
												58121
											],
											[
												58165,
												58174
											],
											[
												58506,
												58515
											],
											[
												58530,
												58539
											],
											[
												58725,
												58734
											],
											[
												59073,
												59082
											],
											[
												59361,
												59370
											],
											[
												59639,
												59648
											],
											[
												60017,
												60026
											],
											[
												60340,
												60349
											],
											[
												60496,
												60505
											],
											[
												60978,
												60987
											],
											[
												61500,
												61509
											],
											[
												61863,
												61872
											],
											[
												61935,
												61944
											],
											[
												62125,
												62134
											],
											[
												62368,
												62377
											],
											[
												62555,
												62564
											],
											[
												62927,
												62936
											],
											[
												63266,
												63275
											],
											[
												63656,
												63665
											],
											[
												64205,
												64214
											],
											[
												64422,
												64431
											],
											[
												64865,
												64874
											],
											[
												65061,
												65070
											],
											[
												65428,
												65434
											],
											[
												65704,
												65710
											],
											[
												65977,
												65983
											],
											[
												66255,
												66261
											],
											[
												66314,
												66320
											],
											[
												66510,
												66516
											],
											[
												66605,
												66611
											],
											[
												66914,
												66920
											],
											[
												66954,
												66960
											],
											[
												67285,
												67291
											],
											[
												67446,
												67452
											],
											[
												67484,
												67490
											],
											[
												67781,
												67787
											],
											[
												68060,
												68066
											],
											[
												68103,
												68109
											],
											[
												68419,
												68425
											],
											[
												68511,
												68517
											],
											[
												68778,
												68784
											],
											[
												69024,
												69030
											],
											[
												69310,
												69316
											],
											[
												69649,
												69655
											],
											[
												69995,
												70001
											],
											[
												70025,
												70031
											],
											[
												70392,
												70398
											],
											[
												70534,
												70540
											],
											[
												70730,
												70736
											],
											[
												70932,
												70938
											],
											[
												71123,
												71129
											],
											[
												71409,
												71415
											],
											[
												71631,
												71637
											],
											[
												72001,
												72007
											],
											[
												72354,
												72360
											],
											[
												72670,
												72676
											],
											[
												73063,
												73069
											],
											[
												73579,
												73585
											],
											[
												73593,
												73599
											],
											[
												73723,
												73729
											],
											[
												73965,
												73971
											],
											[
												74301,
												74307
											],
											[
												74419,
												74425
											],
											[
												74777,
												74783
											],
											[
												74808,
												74814
											],
											[
												75096,
												75102
											],
											[
												75171,
												75177
											],
											[
												75549,
												75555
											],
											[
												75601,
												75607
											],
											[
												75791,
												75797
											],
											[
												76041,
												76047
											],
											[
												76122,
												76128
											],
											[
												76142,
												76148
											],
											[
												76265,
												76271
											],
											[
												76292,
												76298
											],
											[
												76415,
												76421
											],
											[
												76553,
												76559
											],
											[
												76580,
												76586
											],
											[
												76702,
												76708
											],
											[
												76922,
												76928
											],
											[
												76989,
												76995
											],
											[
												77052,
												77058
											],
											[
												77275,
												77281
											],
											[
												77567,
												77573
											],
											[
												77884,
												77890
											],
											[
												77929,
												77935
											],
											[
												77974,
												77980
											],
											[
												78158,
												78164
											],
											[
												78450,
												78456
											],
											[
												78738,
												78744
											],
											[
												78915,
												78921
											],
											[
												79239,
												79245
											],
											[
												79253,
												79259
											],
											[
												79431,
												79437
											],
											[
												79496,
												79502
											],
											[
												79523,
												79529
											],
											[
												79579,
												79585
											],
											[
												79655,
												79661
											],
											[
												79698,
												79704
											],
											[
												79731,
												79737
											],
											[
												80094,
												80100
											],
											[
												80298,
												80304
											],
											[
												80546,
												80552
											],
											[
												80855,
												80861
											],
											[
												81179,
												81185
											],
											[
												81220,
												81226
											],
											[
												81639,
												81645
											],
											[
												81793,
												81799
											],
											[
												81803,
												81809
											],
											[
												82075,
												82081
											],
											[
												82295,
												82301
											],
											[
												82558,
												82564
											],
											[
												82814,
												82820
											],
											[
												83013,
												83019
											],
											[
												83398,
												83404
											],
											[
												83412,
												83418
											],
											[
												83704,
												83710
											],
											[
												83797,
												83803
											],
											[
												84064,
												84070
											],
											[
												84362,
												84368
											],
											[
												84379,
												84385
											],
											[
												84543,
												84549
											],
											[
												84558,
												84564
											],
											[
												84610,
												84616
											],
											[
												84632,
												84638
											],
											[
												84753,
												84759
											],
											[
												84826,
												84832
											],
											[
												84895,
												84901
											],
											[
												85139,
												85145
											],
											[
												85392,
												85398
											],
											[
												85697,
												85703
											],
											[
												85760,
												85766
											],
											[
												86133,
												86139
											],
											[
												86309,
												86315
											],
											[
												86606,
												86612
											],
											[
												86736,
												86742
											],
											[
												87007,
												87013
											],
											[
												87135,
												87141
											],
											[
												87230,
												87236
											],
											[
												87477,
												87483
											],
											[
												87731,
												87737
											],
											[
												87974,
												87980
											],
											[
												88219,
												88225
											],
											[
												88283,
												88289
											],
											[
												88521,
												88527
											],
											[
												88582,
												88588
											],
											[
												88675,
												88681
											],
											[
												88856,
												88862
											],
											[
												89074,
												89080
											],
											[
												89090,
												89096
											],
											[
												89304,
												89310
											],
											[
												89532,
												89538
											],
											[
												89668,
												89674
											],
											[
												89912,
												89918
											],
											[
												90098,
												90104
											],
											[
												90127,
												90133
											],
											[
												90171,
												90177
											],
											[
												90194,
												90200
											],
											[
												90266,
												90272
											],
											[
												90396,
												90402
											],
											[
												90416,
												90422
											],
											[
												90490,
												90496
											],
											[
												90712,
												90718
											],
											[
												90952,
												90958
											],
											[
												91163,
												91169
											],
											[
												91349,
												91355
											],
											[
												91537,
												91543
											],
											[
												91668,
												91674
											],
											[
												91682,
												91688
											],
											[
												91722,
												91728
											],
											[
												91930,
												91936
											],
											[
												92018,
												92024
											],
											[
												92233,
												92239
											],
											[
												92400,
												92406
											],
											[
												92590,
												92596
											],
											[
												92796,
												92802
											],
											[
												93050,
												93056
											],
											[
												93235,
												93241
											],
											[
												93382,
												93388
											],
											[
												93529,
												93535
											],
											[
												93674,
												93680
											],
											[
												93814,
												93820
											],
											[
												94042,
												94048
											],
											[
												94289,
												94295
											],
											[
												94599,
												94605
											],
											[
												94855,
												94861
											],
											[
												95110,
												95116
											],
											[
												95335,
												95341
											],
											[
												95623,
												95629
											],
											[
												95795,
												95801
											],
											[
												96112,
												96118
											],
											[
												96346,
												96352
											],
											[
												96737,
												96743
											],
											[
												97002,
												97008
											],
											[
												97222,
												97228
											],
											[
												97386,
												97392
											],
											[
												97715,
												97721
											],
											[
												98157,
												98163
											],
											[
												98488,
												98494
											],
											[
												98715,
												98721
											],
											[
												98899,
												98905
											],
											[
												99025,
												99031
											],
											[
												99084,
												99090
											],
											[
												99280,
												99286
											],
											[
												99375,
												99381
											],
											[
												99686,
												99692
											],
											[
												99726,
												99732
											],
											[
												100051,
												100057
											],
											[
												100212,
												100218
											],
											[
												100250,
												100256
											],
											[
												100547,
												100553
											],
											[
												100828,
												100834
											],
											[
												100871,
												100877
											],
											[
												101158,
												101164
											],
											[
												101306,
												101312
											],
											[
												101395,
												101401
											],
											[
												101662,
												101668
											],
											[
												101908,
												101914
											],
											[
												102119,
												102125
											],
											[
												102295,
												102301
											],
											[
												102605,
												102611
											],
											[
												102747,
												102753
											],
											[
												102943,
												102949
											],
											[
												103098,
												103104
											],
											[
												103118,
												103124
											],
											[
												103365,
												103371
											],
											[
												103389,
												103395
											],
											[
												103784,
												103790
											],
											[
												104313,
												104319
											],
											[
												104757,
												104763
											],
											[
												105103,
												105109
											],
											[
												105328,
												105334
											],
											[
												105613,
												105619
											],
											[
												105785,
												105791
											],
											[
												106102,
												106108
											],
											[
												106336,
												106342
											],
											[
												106724,
												106730
											],
											[
												106986,
												106992
											],
											[
												107206,
												107212
											],
											[
												107370,
												107376
											],
											[
												107696,
												107702
											],
											[
												108049,
												108055
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										108010,
										108010
									]
								],
								"settings":
								{
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 6,
									"result_base_dir": "",
									"result_file_regex": "^([A-Za-z\\\\/<].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 94590.0,
								"zoom_level": 1.0
							},
							"stack_index": 16,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 9939,
								"regions":
								{
								},
								"selection":
								[
									[
										6897,
										6897
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 541.0,
								"zoom_level": 1.0
							},
							"stack_index": 9,
							"type": "text"
						},
						{
							"buffer": 9,
							"file": "/Users/anelson/narr/ns_services/document_generation/common/src/ns_doc_gen/api.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2756,
								"regions":
								{
								},
								"selection":
								[
									[
										1294,
										1294
									]
								],
								"settings":
								{
									"history_list_is_closing": true,
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 277.0,
								"zoom_level": 1.0
							},
							"stack_index": 8,
							"type": "text"
						},
						{
							"buffer": 10,
							"file": "/Users/anelson/narr/ns_services/workflow/src/workflow/engine/v2/engine.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 4207,
								"regions":
								{
								},
								"selection":
								[
									[
										562,
										562
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 11,
							"type": "text"
						},
						{
							"buffer": 11,
							"file": "/Users/anelson/narr/ns_services/ns_platform_core/src/ns_core/binary.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2224,
								"regions":
								{
								},
								"selection":
								[
									[
										63,
										63
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 295.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 12,
							"file": "/Users/anelson/narr/ns_services/ns_platform_core/tests/unit/binary_test.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2526,
								"regions":
								{
								},
								"selection":
								[
									[
										1694,
										1694
									]
								],
								"settings":
								{
									"syntax": "Packages/Python Improved/PythonImproved.tmLanguage",
									"tab_size": 4
								},
								"translation.x": 0.0,
								"translation.y": 513.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 13,
							"file": "/Users/anelson/narr/ns_services/ns_platform_core/tests/unit/service_test.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 4203,
								"regions":
								{
								},
								"selection":
								[
									[
										1282,
										1282
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 531.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 14,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1141,
								"regions":
								{
								},
								"selection":
								[
									[
										1141,
										1141
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"word_wrap": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						},
						{
							"buffer": 15,
							"file": "/Users/anelson/narr/ns_services/workflow/src/workflow/engine/v1/engine.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 12652,
								"regions":
								{
								},
								"selection":
								[
									[
										584,
										584
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 13,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 26.0
			},
			"input":
			{
				"height": 34.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 373.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.haskell_error_checker":
			{
				"height": 118.0
			},
			"output.haskell_sublime_load":
			{
				"height": 118.0
			},
			"position": "240 101 1436 878 0 0 1920 1058 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"api_",
						"common/tests/unit/api_test.py"
					],
					[
						"doc_gen",
						"ns_workflow/src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"",
						"common/src/ns_doc_gen/api.py"
					],
					[
						"api",
						"common/src/ns_doc_gen/api.py"
					],
					[
						"binary",
						"ns_core/binary.py"
					],
					[
						"client",
						"ns_quiver_client/client.py"
					],
					[
						"engine",
						"workflow/src/workflow/engine/v2/engine.py"
					],
					[
						"views",
						"workflow/src/workflow/http/v2/views.py"
					],
					[
						"rendering",
						"ns_workflow/src/ns_workflow/plugins/rendering.py"
					],
					[
						"configs",
						"workflow/src/workflow/batcher/v1/configs.py"
					],
					[
						"docx",
						"ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py"
					],
					[
						"ns_pro",
						"ns_workflow/_gb/gbtemplate/ns_prop.py.mustache"
					],
					[
						"server.py",
						"ns_workflow/src/ns_workflow/server.py"
					],
					[
						"htt",
						"vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py"
					],
					[
						"server",
						"tests/unit/server_test.py"
					],
					[
						"req",
						"requirements.txt"
					],
					[
						"autho",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"v2_test",
						"tests/integ/v2_test.py"
					],
					[
						"authoring",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"authori",
						"src/ns_workflow/plugins/authoring.py"
					],
					[
						"fac",
						"src/ns_workflow/factories.py"
					],
					[
						"doc",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"doc_ge",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"factor",
						"src/ns_workflow/factories.py"
					],
					[
						"deco",
						"src/ns_workflow/decorators.py"
					],
					[
						"decot",
						"tests/unit/decorators_test.py"
					],
					[
						"render",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"deliv",
						"tests/unit/plugins/delivery_test.py"
					],
					[
						"charting_",
						"tests/unit/plugins/charting_test.py"
					],
					[
						"ns_",
						"test_configs/ns_prop.py"
					],
					[
						"charting",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"decore",
						"tests/unit/decorators_test.py"
					],
					[
						"doc_",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"ishm",
						"tests/integ/ishmael_test.py"
					],
					[
						"char",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"instances",
						"ishmael/src/types/instances.coffee"
					],
					[
						"proj",
						"ishmael/lib/project.js"
					],
					[
						"instan",
						"ishmael/lib/types/instances.js"
					],
					[
						"scrimsh",
						"ishmael/src/types/scrimshaw.coffee"
					],
					[
						"ev",
						"Evaluator.hs"
					],
					[
						"parserte",
						"ParserTests.hs"
					],
					[
						"eva",
						"Evaluator.hs"
					],
					[
						"typ",
						"TypeChecker.hs"
					],
					[
						"par",
						"ParserTests.hs"
					],
					[
						"te",
						"Tests.hs"
					],
					[
						"p",
						"ParserTests.hs"
					],
					[
						"t",
						"TypeChecker.hs"
					],
					[
						"com",
						"Common.hs"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 187.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 42,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
