{
	"folder_history":
	[
		"/Users/anelson/narr/ns_node_packages/ishmael",
		"/Users/anelson/workspace/languages/llama",
		"/Users/anelson/narr/ns_services/ns_workflow",
		"/Users/anelson/.snakegit",
		"/Users/anelson/narr/ns_node_packages/narrwhal",
		"/Users/anelson/narr/ns_services/document_generation/common",
		"/Users/anelson/narr/ns_quiver/cli",
		"/Users/anelson/narr/ns_quiver/client",
		"/Users/anelson/.snakegit/bin",
		"/Users/anelson/narr/ns_lib",
		"/Users/anelson/workspace/languages/llama/src",
		"/Users/anelson/workspace/languages/llama/thoughts",
		"/Users/anelson/workspace/haskell",
		"/Users/anelson/narr/ns_services/workflow",
		"/Users/anelson/narr/ns_apps/src/backdrop/static/js",
		"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/SublimeHaskell",
		"/Users/anelson/narr/ns_apps/src/backdrop"
	],
	"last_version": 3059,
	"last_window_id": 40,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 856.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"modu",
						"module_name"
					],
					[
						"Mod",
						"ModuleNotFoundError"
					],
					[
						"a",
						"attr_name"
					],
					[
						"__g",
						"__getattribute__"
					],
					[
						"mo",
						"modules_dir"
					],
					[
						"modules",
						"modules_dir"
					],
					[
						"__get",
						"__getattribute"
					],
					[
						"modul",
						"modules_dir"
					],
					[
						"data",
						"data_key"
					],
					[
						"au",
						"author_configs_version"
					],
					[
						"ass",
						"assert_docx_equal"
					],
					[
						"some",
						"some_chart"
					],
					[
						"assert",
						"assert_called_with"
					],
					[
						"Ish",
						"IshmaelResponse"
					],
					[
						"m_repl",
						"m_replacements"
					],
					[
						"render",
						"rendering_plugins"
					],
					[
						"polyp",
						"polyp_host"
					],
					[
						"additional",
						"additional_arguments"
					],
					[
						"add",
						"additional_arguments"
					],
					[
						"make",
						"make_charts"
					],
					[
						"poly",
						"polyp_host"
					],
					[
						"ba",
						"base64-encoded"
					],
					[
						"b",
						"base64"
					],
					[
						"build",
						"build_charts"
					],
					[
						"bool",
						"boolQModel"
					],
					[
						"fea",
						"featureNamesToModelNames"
					],
					[
						"feat",
						"featureNameMapBuilt"
					],
					[
						"model",
						"modelQid"
					],
					[
						"J",
						"JObj"
					],
					[
						"Oo",
						"OperationType"
					],
					[
						"Over",
						"OverFlowException"
					],
					[
						"Var",
						"VArg"
					],
					[
						"Val",
						"ValueTable"
					],
					[
						"der",
						"derefArg"
					],
					[
						"def",
						"defaultTypingState"
					],
					[
						"run",
						"runTypingWith"
					],
					[
						"uni",
						"unitV"
					],
					[
						"flow",
						"flowTests"
					],
					[
						"pri",
						"printVal"
					],
					[
						"thro",
						"throwErrorC"
					],
					[
						"th",
						"throwErrorC"
					],
					[
						"defa",
						"defaultFrame"
					],
					[
						"VA",
						"VArg"
					],
					[
						"type",
						"typeAndEval"
					],
					[
						"get",
						"getExprName"
					],
					[
						"thr",
						"throwErrorC"
					],
					[
						"Er",
						"ErrorList"
					],
					[
						"inst",
						"instantiated"
					],
					[
						"ns",
						"nameSpaceTable"
					],
					[
						"nam",
						"nameSpaceTable"
					],
					[
						"full",
						"fullName"
					],
					[
						"name",
						"nameSpaceTable"
					],
					[
						"pExpr",
						"pExprOrBlock"
					],
					[
						"rend",
						"renderNamespace"
					],
					[
						"Nam",
						"NameSpace"
					]
				]
			},
			"build_system": "",
			"command_palette":
			{
				"height": 392.0,
				"selected_items":
				[
					[
						"a",
						"Project: Add Folder"
					],
					[
						"ad",
						"Project: Add Folder"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"add",
						"Project: Add Folder"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 167.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/anelson/workspace/python/silly.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/decorators.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/ishmael_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/v2_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/ns_prop.py.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/factories.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
				"/Users/anelson/narr/ns_lib/src/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/server.py",
				"/Users/anelson/workspace/python/wordcount.py",
				"/Users/anelson/workspace/c++/lambdas/hello_lambda.cpp",
				"/Users/anelson/workspace/languages/llama/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/more on traits.md",
				"/Users/anelson/workspace/languages/llama/thoughts/print module",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/banking/bank_intel/derivations_overdue.yaml",
				"/Users/anelson/narr/ns_services/ns_workflow/dev_guide.md",
				"/Users/anelson/.ssh/config",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/notification_schedules.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/encodings/string_escape.py",
				"/Users/anelson/narr/ns_services/ns_workflow/setup.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/testsuite/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/raven/transport/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_delivery_plugins/http_delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/celery/task/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/https_connection.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_db/factory/happybase_table_factory.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/test_data/hello.docx",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/v2_sample_request.json",
				"/Users/anelson/narr/ns_services/ns_workflow/Vagrantfile",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring_cache.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/author_config_fixture.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/aws_util.py",
				"/Users/anelson/narr/ns_services/ns_workflow/application.log",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/functional/workflow_outofband_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/wftest",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/delivery_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/charting_test.py",
				"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/rendering_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/decorators_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/v2/job_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/monitoring/feed_aggregator.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/uwsgi/ns_workflow.yaml.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/doc_gen_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/dependency_links.txt",
				"/Users/anelson/workspace/languages/llama/thoughts/Enforcing functional purity in Llama.md",
				"/usr/local/Library/Formula/imagemagick.rb",
				"/Users/anelson/workspace/languages/llama/src/EvaluatorLib.hs",
				"/Users/anelson/narr/ns_services/ns_workflow/test-requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/services/data_engine_client.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/data_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_data_btn/mongoeng/football/ingest_team_names.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/ishmael.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/config/install-sh",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with member variables.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/text.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/esb_config.py",
				"/Users/anelson/narr/ns_services/ns_workflow/CHANGELOG.md",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/coverage/htmlfiles/coverage_html.js",
				"/Users/anelson/workspace/languages/llama/src/TypeChecker.hs",
				"/Users/anelson/narr/misc/interview notes/Frederic Zapata",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/resize_ebs_instance.py",
				"/Users/anelson/workspace/languages/llama/thoughts/blocks.md",
				"/Users/anelson/workspace/languages/llama/src/Parser.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/src/types/instances.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/instances.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/inline-style-tag.html",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/asia/ho_chi_minh.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/code-block-html-escape.html",
				"/Users/anelson/narr/ns_apps/src/backdrop/static/js/ishmael.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/derivations.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/libyaml/deps/yaml/src/tests/example-deconstructor-alt.c",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/antarctica/davis.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/america/puerto_rico.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/package.json",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/ishmael.js",
				"/Users/anelson/zsh-config/extras.sh",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/jade/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/uglify-js/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/test/test_underscore/utility.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/lib/properties/unicodeRange.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/request/node_modules/hawk/test/uri.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/Rakefile",
				"/Users/anelson/narr/misc/coffeescript/string_dist.coffee",
				"/Users/anelson/workspace/languages/llama/thoughts/compile to js.md",
				"/Users/anelson/workspace/languages/llama/src/find.md",
				"/Users/anelson/workspace/haskell/test.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/scrimshaw.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/scratch.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment/sauce_connect.log",
				"/Users/anelson/narr/ns_node_packages/ishmael/snake.cfg",
				"/Users/anelson/workspace/languages/llama/thoughts/Different types of variable definitions.md",
				"/Users/anelson/workspace/languages/llama/thoughts/json and dictionary lookups",
				"/Users/anelson/narr/ns_quiver/client/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/mergesort.llm.hs",
				"/Users/anelson/workspace/languages/llama/thoughts/todo.md",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with shared fields"
			],
			"find":
			{
				"height": 24.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/Users/anelson/narr/ns_node_packages/ishmael/test/unit",
					"/Users/anelson/narr/ns_node_packages/narrwhal",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/ishmael"
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"only",
					"slip",
					"Envir",
					"Environment",
					"MODULES_DIR",
					"ishmael",
					"write",
					"self.addEventListener",
					"addEventListener",
					"Worker",
					"addEv",
					"setD",
					"setupPequod",
					"setupIshmael",
					"\"",
					"xml_to_",
					"\"",
					"deprecated",
					"get_replacements",
					"xml_to_charts",
					"ClientException",
					"self.client.",
					"self.",
					"polyp_host",
					"self.",
					"self, ",
					"_xml_to",
					"charts",
					"qid_to_content",
					"self, ",
					"build_charts",
					"self.",
					"caches",
					"fullP",
					"getFeature",
					"length",
					"newFeature",
					"handle",
					"resolve",
					"getFeature",
					"name",
					"getFeatures",
					"child",
					"getFea",
					"get",
					"coffee",
					"model",
					"resolve",
					"maxWrittenCount",
					"getFeature",
					"context",
					"handleMiss",
					"handleMissing",
					"handle",
					"Test ",
					"portfo",
					"@recurse",
					"compile",
					"total_return",
					"computeClosure",
					"getSymT",
					"log'",
					"Render Ty",
					"log'",
					"unify",
					"builtI",
					"runTypingWi",
					"defaultState",
					"pParens",
					"pTerm",
					"pLambda",
					"numNumOp",
					"whoo",
					"pushWith",
					"=>",
					"SymbolTable",
					"symTable",
					"VTupl",
					"throwError",
					"throwError'",
					"throwErrorC",
					"TypingError",
					"litTyp",
					"Int",
					"setType",
					"pExprO",
					"ziffyDiffy",
					"pBody",
					"pDefine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"self.modules_dir",
					"'",
					"ServerException",
					"",
					"Tester ",
					"@rec",
					"defaultTypingState",
					"numBoolOp",
					"TypeTable",
					"ValueTable",
					"vTable",
					"throwError1",
					"throwErrorC",
					"ErrorList",
					"Num",
					"poop"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 24.0
			},
			"input":
			{
				"height": 34.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 106.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.haskell_error_checker":
			{
				"height": 118.0
			},
			"output.haskell_sublime_load":
			{
				"height": 118.0
			},
			"replace":
			{
				"height": 44.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"docx",
						"ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py"
					],
					[
						"ns_pro",
						"ns_workflow/_gb/gbtemplate/ns_prop.py.mustache"
					],
					[
						"server.py",
						"ns_workflow/src/ns_workflow/server.py"
					],
					[
						"htt",
						"vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py"
					],
					[
						"server",
						"tests/unit/server_test.py"
					],
					[
						"req",
						"requirements.txt"
					],
					[
						"autho",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"v2_test",
						"tests/integ/v2_test.py"
					],
					[
						"authoring",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"authori",
						"src/ns_workflow/plugins/authoring.py"
					],
					[
						"fac",
						"src/ns_workflow/factories.py"
					],
					[
						"doc",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"doc_ge",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"engine",
						"vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py"
					],
					[
						"factor",
						"src/ns_workflow/factories.py"
					],
					[
						"deco",
						"src/ns_workflow/decorators.py"
					],
					[
						"decot",
						"tests/unit/decorators_test.py"
					],
					[
						"render",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"deliv",
						"tests/unit/plugins/delivery_test.py"
					],
					[
						"charting_",
						"tests/unit/plugins/charting_test.py"
					],
					[
						"ns_",
						"test_configs/ns_prop.py"
					],
					[
						"charting",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"decore",
						"tests/unit/decorators_test.py"
					],
					[
						"doc_",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"ishm",
						"tests/integ/ishmael_test.py"
					],
					[
						"rendering",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"char",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"instances",
						"ishmael/src/types/instances.coffee"
					],
					[
						"proj",
						"ishmael/lib/project.js"
					],
					[
						"instan",
						"ishmael/lib/types/instances.js"
					],
					[
						"scrimsh",
						"ishmael/src/types/scrimshaw.coffee"
					],
					[
						"ev",
						"Evaluator.hs"
					],
					[
						"parserte",
						"ParserTests.hs"
					],
					[
						"eva",
						"Evaluator.hs"
					],
					[
						"typ",
						"TypeChecker.hs"
					],
					[
						"par",
						"ParserTests.hs"
					],
					[
						"te",
						"Tests.hs"
					],
					[
						"p",
						"ParserTests.hs"
					],
					[
						"t",
						"TypeChecker.hs"
					],
					[
						"com",
						"Common.hs"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 187.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1916.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"modu",
						"module_name"
					],
					[
						"Mod",
						"ModuleNotFoundError"
					],
					[
						"a",
						"attr_name"
					],
					[
						"__g",
						"__getattribute__"
					],
					[
						"mo",
						"modules_dir"
					],
					[
						"modules",
						"modules_dir"
					],
					[
						"__get",
						"__getattribute"
					],
					[
						"modul",
						"modules_dir"
					],
					[
						"data",
						"data_key"
					],
					[
						"au",
						"author_configs_version"
					],
					[
						"ass",
						"assert_docx_equal"
					],
					[
						"some",
						"some_chart"
					],
					[
						"assert",
						"assert_called_with"
					],
					[
						"Ish",
						"IshmaelResponse"
					],
					[
						"m_repl",
						"m_replacements"
					],
					[
						"render",
						"rendering_plugins"
					],
					[
						"polyp",
						"polyp_host"
					],
					[
						"additional",
						"additional_arguments"
					],
					[
						"add",
						"additional_arguments"
					],
					[
						"make",
						"make_charts"
					],
					[
						"poly",
						"polyp_host"
					],
					[
						"ba",
						"base64-encoded"
					],
					[
						"b",
						"base64"
					],
					[
						"build",
						"build_charts"
					],
					[
						"bool",
						"boolQModel"
					],
					[
						"fea",
						"featureNamesToModelNames"
					],
					[
						"feat",
						"featureNameMapBuilt"
					],
					[
						"model",
						"modelQid"
					],
					[
						"J",
						"JObj"
					],
					[
						"Oo",
						"OperationType"
					],
					[
						"Over",
						"OverFlowException"
					],
					[
						"Var",
						"VArg"
					],
					[
						"Val",
						"ValueTable"
					],
					[
						"der",
						"derefArg"
					],
					[
						"def",
						"defaultTypingState"
					],
					[
						"run",
						"runTypingWith"
					],
					[
						"uni",
						"unitV"
					],
					[
						"flow",
						"flowTests"
					],
					[
						"pri",
						"printVal"
					],
					[
						"thro",
						"throwErrorC"
					],
					[
						"th",
						"throwErrorC"
					],
					[
						"defa",
						"defaultFrame"
					],
					[
						"VA",
						"VArg"
					],
					[
						"type",
						"typeAndEval"
					],
					[
						"get",
						"getExprName"
					],
					[
						"thr",
						"throwErrorC"
					],
					[
						"Er",
						"ErrorList"
					],
					[
						"inst",
						"instantiated"
					],
					[
						"ns",
						"nameSpaceTable"
					],
					[
						"nam",
						"nameSpaceTable"
					],
					[
						"full",
						"fullName"
					],
					[
						"name",
						"nameSpaceTable"
					],
					[
						"pExpr",
						"pExprOrBlock"
					],
					[
						"rend",
						"renderNamespace"
					],
					[
						"Nam",
						"NameSpace"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
					"settings":
					{
						"buffer_size": 15085,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "* What are you interested in?\n  - Worked on embedded system before, then joined a hardware company and did Linux programming. Now works in finance. Likes to learn new things, that's why he applied to our company. But our web site doesn't say much.\n\n* Anything in particular about NS?\n  - The general idea; not a lot of specifics from the web site.\n\n* What new stuff have you learned recently?\n  - Web development, python, javascript, etc. Read at least 3 books on python.Played around with python on his own, wrote a Django app at work. App collects data, puts it on a web site so people can look at it. Mostly for latency data. \n\n* Experience with cloud computing?\n  - Amazon AWS basics (used API)\n  - Knows the technology, hasn't used it extensively. \n\n* Write a function to reverse a list\n  - No problem, wrote in C++\n\n* Write a `contains` function on a binary tree\n  - A little shaky but not bad. Forgot to compare before traversing down.\n  - Seemed mostly aware of runtime complexity of a BST/BBST\n\n* Count # of distinct words in a string.\n  - Used python, syntax was way off but algorithm was mostly solid. Not super comforable with using hash tables but did choose to use a set which was good.\n\n* Q's for me?\n  - How many people, how many engineers?\n  - How does it work, at a high level?\n  - What kind of clients?\n  - How does client specify how the data should be presented?\n  - Why are you looking for web developers?",
					"settings":
					{
						"buffer_size": 1427,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "New York Falcons's production of 10 run production in New York Falcons was 63.93% above the league average of 6.1.",
					"settings":
					{
						"buffer_size": 114,
						"line_ending": "Unix",
						"name": "New York Falcons's production of 10 run production"
					}
				},
				{
					"contents": "def count_words(s)\n    n_words = 0\n    words = set()\n    for word in s.split():\n        if s not in words:\n            n_words += 1\n            words.add(s)\n    return n_words",
					"settings":
					{
						"buffer_size": 175,
						"line_ending": "Unix",
						"name": "def count_words(s)"
					}
				}
			],
			"build_system": "",
			"command_palette":
			{
				"height": 392.0,
				"selected_items":
				[
					[
						"a",
						"Project: Add Folder"
					],
					[
						"ad",
						"Project: Add Folder"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"add",
						"Project: Add Folder"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 167.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/anelson/workspace/python/silly.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/decorators.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/ishmael_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/v2_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/ns_prop.py.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/factories.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
				"/Users/anelson/narr/ns_lib/src/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/server.py",
				"/Users/anelson/workspace/python/wordcount.py",
				"/Users/anelson/workspace/c++/lambdas/hello_lambda.cpp",
				"/Users/anelson/workspace/languages/llama/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/more on traits.md",
				"/Users/anelson/workspace/languages/llama/thoughts/print module",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/banking/bank_intel/derivations_overdue.yaml",
				"/Users/anelson/narr/ns_services/ns_workflow/dev_guide.md",
				"/Users/anelson/.ssh/config",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/notification_schedules.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/encodings/string_escape.py",
				"/Users/anelson/narr/ns_services/ns_workflow/setup.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/testsuite/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/raven/transport/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_delivery_plugins/http_delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/celery/task/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/https_connection.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_db/factory/happybase_table_factory.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/test_data/hello.docx",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/v2_sample_request.json",
				"/Users/anelson/narr/ns_services/ns_workflow/Vagrantfile",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring_cache.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/author_config_fixture.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/aws_util.py",
				"/Users/anelson/narr/ns_services/ns_workflow/application.log",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/functional/workflow_outofband_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/wftest",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/delivery_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/charting_test.py",
				"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/rendering_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/decorators_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/v2/job_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/monitoring/feed_aggregator.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/uwsgi/ns_workflow.yaml.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/doc_gen_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/dependency_links.txt",
				"/Users/anelson/workspace/languages/llama/thoughts/Enforcing functional purity in Llama.md",
				"/usr/local/Library/Formula/imagemagick.rb",
				"/Users/anelson/workspace/languages/llama/src/EvaluatorLib.hs",
				"/Users/anelson/narr/ns_services/ns_workflow/test-requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/services/data_engine_client.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/data_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_data_btn/mongoeng/football/ingest_team_names.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/ishmael.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/config/install-sh",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with member variables.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/text.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/esb_config.py",
				"/Users/anelson/narr/ns_services/ns_workflow/CHANGELOG.md",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/coverage/htmlfiles/coverage_html.js",
				"/Users/anelson/workspace/languages/llama/src/TypeChecker.hs",
				"/Users/anelson/narr/misc/interview notes/Frederic Zapata",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/resize_ebs_instance.py",
				"/Users/anelson/workspace/languages/llama/thoughts/blocks.md",
				"/Users/anelson/workspace/languages/llama/src/Parser.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/src/types/instances.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/instances.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/inline-style-tag.html",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/asia/ho_chi_minh.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/code-block-html-escape.html",
				"/Users/anelson/narr/ns_apps/src/backdrop/static/js/ishmael.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/derivations.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/libyaml/deps/yaml/src/tests/example-deconstructor-alt.c",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/antarctica/davis.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/america/puerto_rico.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/package.json",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/ishmael.js",
				"/Users/anelson/zsh-config/extras.sh",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/jade/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/uglify-js/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/test/test_underscore/utility.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/lib/properties/unicodeRange.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/request/node_modules/hawk/test/uri.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/Rakefile",
				"/Users/anelson/narr/misc/coffeescript/string_dist.coffee",
				"/Users/anelson/workspace/languages/llama/thoughts/compile to js.md",
				"/Users/anelson/workspace/languages/llama/src/find.md",
				"/Users/anelson/workspace/haskell/test.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/scrimshaw.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/scratch.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment/sauce_connect.log",
				"/Users/anelson/narr/ns_node_packages/ishmael/snake.cfg",
				"/Users/anelson/workspace/languages/llama/thoughts/Different types of variable definitions.md",
				"/Users/anelson/workspace/languages/llama/thoughts/json and dictionary lookups",
				"/Users/anelson/narr/ns_quiver/client/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/mergesort.llm.hs",
				"/Users/anelson/workspace/languages/llama/thoughts/todo.md",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with shared fields"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/Users/anelson/narr/ns_node_packages/narrwhal",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/ishmael"
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"slip",
					"Envir",
					"Environment",
					"MODULES_DIR",
					"ishmael",
					"write",
					"self.addEventListener",
					"addEventListener",
					"Worker",
					"addEv",
					"setD",
					"setupPequod",
					"setupIshmael",
					"\"",
					"xml_to_",
					"\"",
					"deprecated",
					"get_replacements",
					"xml_to_charts",
					"ClientException",
					"self.client.",
					"self.",
					"polyp_host",
					"self.",
					"self, ",
					"_xml_to",
					"charts",
					"qid_to_content",
					"self, ",
					"build_charts",
					"self.",
					"caches",
					"fullP",
					"getFeature",
					"length",
					"newFeature",
					"handle",
					"resolve",
					"getFeature",
					"name",
					"getFeatures",
					"child",
					"getFea",
					"get",
					"coffee",
					"model",
					"resolve",
					"maxWrittenCount",
					"getFeature",
					"context",
					"handleMiss",
					"handleMissing",
					"handle",
					"Test ",
					"portfo",
					"@recurse",
					"compile",
					"total_return",
					"computeClosure",
					"getSymT",
					"log'",
					"Render Ty",
					"log'",
					"unify",
					"builtI",
					"runTypingWi",
					"defaultState",
					"pParens",
					"pTerm",
					"pLambda",
					"numNumOp",
					"whoo",
					"pushWith",
					"=>",
					"SymbolTable",
					"symTable",
					"VTupl",
					"throwError",
					"throwError'",
					"throwErrorC",
					"TypingError",
					"litTyp",
					"Int",
					"setType",
					"pExprO",
					"ziffyDiffy",
					"pBody",
					"pDefine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"self.modules_dir",
					"'",
					"ServerException",
					"",
					"Tester ",
					"@rec",
					"defaultTypingState",
					"numBoolOp",
					"TypeTable",
					"ValueTable",
					"vTable",
					"throwError1",
					"throwErrorC",
					"ErrorList",
					"Num",
					"poop"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_services/ns_workflow"
				}
			],
			"groups":
			[
				{
					"selected": 2,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 15085,
								"regions":
								{
								},
								"selection":
								[
									[
										4455,
										4459
									]
								],
								"settings":
								{
									"syntax": "Packages/Python/Python.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1754.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1427,
								"regions":
								{
								},
								"selection":
								[
									[
										1427,
										1427
									]
								],
								"settings":
								{
									"syntax": "Packages/MarkdownEditing/Markdown (Standard).tmLanguage",
									"tab_size": 2
								},
								"translation.x": 0.0,
								"translation.y": 198.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 114,
								"regions":
								{
								},
								"selection":
								[
									[
										114,
										114
									]
								],
								"settings":
								{
									"auto_name": "New York Falcons's production of 10 run production",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 3,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 175,
								"regions":
								{
								},
								"selection":
								[
									[
										18,
										18
									]
								],
								"settings":
								{
									"auto_name": "def count_words(s)",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 24.0
			},
			"input":
			{
				"height": 34.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 106.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.haskell_error_checker":
			{
				"height": 118.0
			},
			"output.haskell_sublime_load":
			{
				"height": 118.0
			},
			"position": "4 0 1436 878 0 0 1440 878 ",
			"project": "",
			"replace":
			{
				"height": 44.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"docx",
						"ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py"
					],
					[
						"ns_pro",
						"ns_workflow/_gb/gbtemplate/ns_prop.py.mustache"
					],
					[
						"server.py",
						"ns_workflow/src/ns_workflow/server.py"
					],
					[
						"htt",
						"vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py"
					],
					[
						"server",
						"tests/unit/server_test.py"
					],
					[
						"req",
						"requirements.txt"
					],
					[
						"autho",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"v2_test",
						"tests/integ/v2_test.py"
					],
					[
						"authoring",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"authori",
						"src/ns_workflow/plugins/authoring.py"
					],
					[
						"fac",
						"src/ns_workflow/factories.py"
					],
					[
						"doc",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"doc_ge",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"engine",
						"vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py"
					],
					[
						"factor",
						"src/ns_workflow/factories.py"
					],
					[
						"deco",
						"src/ns_workflow/decorators.py"
					],
					[
						"decot",
						"tests/unit/decorators_test.py"
					],
					[
						"render",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"deliv",
						"tests/unit/plugins/delivery_test.py"
					],
					[
						"charting_",
						"tests/unit/plugins/charting_test.py"
					],
					[
						"ns_",
						"test_configs/ns_prop.py"
					],
					[
						"charting",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"decore",
						"tests/unit/decorators_test.py"
					],
					[
						"doc_",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"ishm",
						"tests/integ/ishmael_test.py"
					],
					[
						"rendering",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"char",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"instances",
						"ishmael/src/types/instances.coffee"
					],
					[
						"proj",
						"ishmael/lib/project.js"
					],
					[
						"instan",
						"ishmael/lib/types/instances.js"
					],
					[
						"scrimsh",
						"ishmael/src/types/scrimshaw.coffee"
					],
					[
						"ev",
						"Evaluator.hs"
					],
					[
						"parserte",
						"ParserTests.hs"
					],
					[
						"eva",
						"Evaluator.hs"
					],
					[
						"typ",
						"TypeChecker.hs"
					],
					[
						"par",
						"ParserTests.hs"
					],
					[
						"te",
						"Tests.hs"
					],
					[
						"p",
						"ParserTests.hs"
					],
					[
						"t",
						"TypeChecker.hs"
					],
					[
						"com",
						"Common.hs"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 187.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 38,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"modu",
						"module_name"
					],
					[
						"Mod",
						"ModuleNotFoundError"
					],
					[
						"a",
						"attr_name"
					],
					[
						"__g",
						"__getattribute__"
					],
					[
						"mo",
						"modules_dir"
					],
					[
						"modules",
						"modules_dir"
					],
					[
						"__get",
						"__getattribute"
					],
					[
						"modul",
						"modules_dir"
					],
					[
						"data",
						"data_key"
					],
					[
						"au",
						"author_configs_version"
					],
					[
						"ass",
						"assert_docx_equal"
					],
					[
						"some",
						"some_chart"
					],
					[
						"assert",
						"assert_called_with"
					],
					[
						"Ish",
						"IshmaelResponse"
					],
					[
						"m_repl",
						"m_replacements"
					],
					[
						"render",
						"rendering_plugins"
					],
					[
						"polyp",
						"polyp_host"
					],
					[
						"additional",
						"additional_arguments"
					],
					[
						"add",
						"additional_arguments"
					],
					[
						"make",
						"make_charts"
					],
					[
						"poly",
						"polyp_host"
					],
					[
						"ba",
						"base64-encoded"
					],
					[
						"b",
						"base64"
					],
					[
						"build",
						"build_charts"
					],
					[
						"bool",
						"boolQModel"
					],
					[
						"fea",
						"featureNamesToModelNames"
					],
					[
						"feat",
						"featureNameMapBuilt"
					],
					[
						"model",
						"modelQid"
					],
					[
						"J",
						"JObj"
					],
					[
						"Oo",
						"OperationType"
					],
					[
						"Over",
						"OverFlowException"
					],
					[
						"Var",
						"VArg"
					],
					[
						"Val",
						"ValueTable"
					],
					[
						"der",
						"derefArg"
					],
					[
						"def",
						"defaultTypingState"
					],
					[
						"run",
						"runTypingWith"
					],
					[
						"uni",
						"unitV"
					],
					[
						"flow",
						"flowTests"
					],
					[
						"pri",
						"printVal"
					],
					[
						"thro",
						"throwErrorC"
					],
					[
						"th",
						"throwErrorC"
					],
					[
						"defa",
						"defaultFrame"
					],
					[
						"VA",
						"VArg"
					],
					[
						"type",
						"typeAndEval"
					],
					[
						"get",
						"getExprName"
					],
					[
						"thr",
						"throwErrorC"
					],
					[
						"Er",
						"ErrorList"
					],
					[
						"inst",
						"instantiated"
					],
					[
						"ns",
						"nameSpaceTable"
					],
					[
						"nam",
						"nameSpaceTable"
					],
					[
						"full",
						"fullName"
					],
					[
						"name",
						"nameSpaceTable"
					],
					[
						"pExpr",
						"pExprOrBlock"
					],
					[
						"rend",
						"renderNamespace"
					],
					[
						"Nam",
						"NameSpace"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/anelson/narr/ns_node_packages/ishmael/src/stylebooks.coffee",
					"settings":
					{
						"buffer_size": 10384,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/anelson/narr/ns_node_packages/ishmael/lib/project.js",
					"settings":
					{
						"buffer_size": 4149,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Searching 15 files for \"only\" (case sensitive)\n\n/Users/anelson/narr/ns_node_packages/ishmael/test/unit/stylebooks-test.coffee:\n  230      (ord 0).should.equal '0th'\n  231  \n  232:   it.only 'should do commafyNumbers correctly', ->\n  233      conf =\n  234        commafyNumbers: true\n\n1 match in 1 file\n",
					"settings":
					{
						"buffer_size": 302,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"contents": "chai = require 'chai'\n_ = require 'underscore'\nutil = require 'util'\n{$} = require '../../lib/nsutil'\n\nchai.should()\n\nstylebooks = require '../../lib/stylebooks'\nshared = require './shared'\n\nscalar = (s, scalarType='Float', nativeType='float') ->\n  \"<scalar scalarType=\\\"#{scalarType}\\\" nativeType=\\\"#{nativeType}\\\">#{s}</scalar>\"\n\ndescribe 'findMatches', ->\n  it 'should match from CSS', ->\n    xml = '<ns_sentence>foo<ns_phrase>bar</ns_phrase>baz</ns_sentence>'\n    nodes = stylebooks.findMatches ($ xml),\n      selector: 'ns_phrase'\n    nodes.length.should.equal 1\n    ($ nodes[0]).text().should.equal 'bar'\n\n    xml = '<ns_sentence>foo<ns_scalar scalarType=\"Float\">4.2</ns_scalar>bar<ns_scalar scalarType=\"Price\">4.2</ns_scalar>baz</ns_sentence>'\n    nodes = stylebooks.findMatches ($ xml),\n      selector: '[scalarType=Float]'\n    nodes.length.should.equal 1\n    ($ nodes[0]).text().should.equal '4.2'\n\n  it 'should not die when scalars are at the front or back', ->\n    xml = \"<ns_sentence>#{scalar 4}-#{scalar 2}</ns_sentence>\"\n    nodes = stylebooks.findMatches ($ xml),\n      before: 'fieisjofa'\n      after: 'eskfhaosfj'\n      selector: '*'\n    nodes.should.be.empty\n\n  it 'should match from before', ->\n    xml = \"<ns_sentence>The score was #{scalar 4}-#{scalar 2}</ns_sentence>\"\n    nodes = stylebooks.findMatches ($ xml),\n      before: '-'\n      selector: '*'\n    nodes.length.should.equal 1\n    ($ nodes[0]).text().should.equal '4'\n\n  it 'should match nestedly from before', ->\n    xml = \"<ns_sentence>The score was #{scalar 4}<ns_phrase>-</ns_phrase>#{scalar 2}</ns_sentence>\"\n    nodes = stylebooks.findMatches ($ xml),\n      before: '-'\n      selector: '*'\n    nodes.length.should.equal 1\n    ($ nodes[0]).text().should.equal '4'\n\n  it 'should match from after', ->\n    xml = \"<ns_sentence>The score was #{scalar 4}-#{scalar 2}</ns_sentence>\"\n    nodes = stylebooks.findMatches ($ xml),\n      after: '-'\n      selector: '*'\n    nodes.length.should.equal 1\n    ($ nodes[0]).text().should.equal '2'\n\n  it 'should match nestedly from after', ->\n    xml = \"<ns_sentence>The score was #{scalar 4}<ns_phrase>-</ns_phrase>#{scalar 2}</ns_sentence>\"\n    nodes = stylebooks.findMatches ($ xml),\n      after: '-'\n      selector: '*'\n    nodes.length.should.equal 1\n    ($ nodes[0]).text().should.equal '2'\n\n  it 'should respect ranges', ->\n    xml = \"<ns_sentence>#{scalar -14} #{scalar 8} #{scalar 19} #{scalar 6} #{scalar 1} #{scalar 10}</ns_sentence>\"\n    nodes = stylebooks.findMatches ($ xml),\n      selector: '*'\n      range: [1, 10]\n    nodes.length.should.equal 3\n    (($ n).text() for n in nodes).sort().should.eql ['1', '6', '8']\n\n\ndescribe 'styleNode', ->\n  it 'should no nothing properly', ->\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml)\n    node.text().should.equal '42.1921817'\n\n  it 'should round digits properly', ->\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      round: 2\n    node.text().should.equal '42.19'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      round: 1\n    node.text().should.equal '42.2'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      round: 0\n    node.text().should.equal '42'\n\n  it 'should dropTrailingZeros properly', ->\n    xml = scalar '42.000'\n    node = stylebooks.styleNode ($ xml),\n      dropTrailingZeros: true\n    node.text().should.equal '42'\n\n    xml = scalar '42.010'\n    node = stylebooks.styleNode ($ xml),\n      dropTrailingZeros: true\n    node.text().should.equal '42.01'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      dropTrailingZeros: true\n    node.text().should.equal '42.1921817'\n\n  it 'should dropTrailingZerosWhenWhole properly', ->\n    xml = scalar '42.000'\n    node = stylebooks.styleNode ($ xml),\n      dropTrailingZerosWhenWhole: true\n    node.text().should.equal '42'\n\n    xml = scalar '42.010'\n    node = stylebooks.styleNode ($ xml),\n      dropTrailingZerosWhenWhole: true\n    node.text().should.equal '42.010'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      dropTrailingZerosWhenWhole: true\n    node.text().should.equal '42.1921817'\n\n  it 'should shift properly', ->\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      shift: 1\n    node.text().should.equal '4.21921817'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      shift: -1\n    node.text().should.equal '421.921817'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      shift: -4\n    node.text().should.equal '421921.817'\n\n  it 'should suffix properly', ->\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      suffix: 'ding'\n    node.text().should.equal '42.1921817ding'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      suffix: ' dong'\n    node.text().should.equal '42.1921817 dong'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      suffix: ''\n    node.text().should.equal '42.1921817'\n\n  it 'should prefix properly', ->\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      prefix: 'ding'\n    node.text().should.equal 'ding42.1921817'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      prefix: 'dong '\n    node.text().should.equal 'dong 42.1921817'\n\n    xml = scalar '42.1921817'\n    node = stylebooks.styleNode ($ xml),\n      prefix: ''\n    node.text().should.equal '42.1921817'\n\n  it 'should combine multiple options properly', ->\n    conf =\n      prefix: '$'\n      suffix: ' million'\n      shift: 6\n      round: 1\n      dropTrailingZerosWhenWhole: true\n\n    xml = scalar '421921817'\n    node = stylebooks.styleNode ($ xml), conf\n    node.text().should.equal '$421.9 million'\n\n    xml = scalar '421981817'\n    node = stylebooks.styleNode ($ xml), conf\n    node.text().should.equal '$422 million'\n\n  it 'should do date formatting', ->\n    conf =\n      date: 'MMMM D, YYYY'\n\n    xml = scalar '1983-03-28', 'DateTime'\n    node = stylebooks.styleNode ($ xml), conf\n    node.text().should.equal 'March 28, 1983'\n\n  it 'should do capitalization correctly', ->\n    conf =\n      capitalize: true\n\n    cap = (text) ->\n      xml = scalar text, 'String'\n      node = stylebooks.styleNode ($ xml), conf\n      node.text()\n\n    (cap 'guybrush').should.equal 'Guybrush'\n    (cap 'guybrush threepwood').should.equal 'Guybrush Threepwood'\n    (cap 'a mighty pirate').should.equal 'A Mighty Pirate'\n    (cap 'mighty a pirate').should.equal 'Mighty a Pirate'\n    (cap 'iPhone 5s').should.equal 'iPhone 5s'\n\n  it 'should do numericOrdinal correctly', ->\n    conf =\n      numericOrdinal: true\n\n    ord = (num) ->\n      xml = scalar num\n      node = stylebooks.styleNode ($ xml), conf\n      node.text()\n\n    (ord 1).should.equal '1st'\n    (ord 3).should.equal '3rd'\n    (ord 15).should.equal '15th'\n    (ord 0).should.equal '0th'\n\n  it 'should do commafyNumbers correctly', ->\n    conf =\n      commafyNumbers: true\n\n    ord = (num) ->\n      xml = scalar num\n      node = stylebooks.styleNode ($ xml), conf\n      node.text()\n\n    (ord 1).should.equal '1'\n    (ord 123).should.equal '123'\n    (ord 1234).should.equal '1,234'\n    (ord 1234567890123).should.equal '1,234,567,890,123'\n    (ord 1.1).should.equal '1.1'\n    (ord 1.23).should.equal '1.23'\n    (ord 1.234).should.equal '1.234'\n    (ord 12345678.90123).should.equal '12,345,678.90123'\n\n  it 'should spell out correctly', ->\n    conf =\n      spellOut: true\n\n    spell = (num) -> (stylebooks.styleNode ($ scalar num), conf).text()\n\n    (spell 1).should.equal 'one'\n    (spell 2).should.equal 'two'\n    (spell 3).should.equal 'three'\n    (spell 4).should.equal 'four'\n    (spell 5).should.equal 'five'\n    (spell 6).should.equal 'six'\n    (spell 7).should.equal 'seven'\n    (spell 8).should.equal 'eight'\n    (spell 9).should.equal 'nine'\n    (spell 10).should.equal 'ten'\n    (spell 15).should.equal 'fifteen'\n    (spell 39).should.equal 'thirty-nine'\n    (spell 148).should.equal 'one-hundred-forty-eight'\n    (spell 11781).should.equal 'eleven-thousand-seven-hundred-eighty-one'\n\n  it 'should ordinal correctly', ->\n    conf =\n      ordinal: true\n\n    spell = (num) -> (stylebooks.styleNode ($ scalar num), conf).text()\n\n    (spell 1).should.equal 'first'\n    (spell 2).should.equal 'second'\n    (spell 3).should.equal 'third'\n    (spell 4).should.equal 'fourth'\n    (spell 5).should.equal 'fifth'\n    (spell 6).should.equal 'sixth'\n    (spell 7).should.equal 'seventh'\n    (spell 8).should.equal 'eighth'\n    (spell 9).should.equal 'ninth'\n    (spell 10).should.equal 'tenth'\n    (spell 15).should.equal 'fifteenth'\n    (spell 39).should.equal 'thirty-ninth'\n    (spell 148).should.equal 'one-hundred-forty-eighth'\n    (spell 11781).should.equal 'eleven-thousand-seven-hundred-eighty-first'\n\n\ndescribe.only 'style', ->\n  it 'should do basic styling', ->\n    stylebook =\n      rules: [\n        match:\n          selector: '[scalarType=Float]'\n        action:\n          suffix: ' years'\n          round: 1\n          dropTrailingZerosWhenWhole: true\n      ]\n    xml = '<IshmaelResponse><NS_Phrase>My name is <NS_scalar scalarType=\"String\" nativeType=\"str\">Nate</ns_scalar> and I am <ns_scalar scalarType=\"Float\" nativeType=\"float\">30.42739726027397260273</ns_scalar> old</Ns_Phrase></IshmaelResponse>'\n\n    styled = stylebooks.style xml, stylebook\n    ($ styled).text().should.equal 'My name is Nate and I am 30.4 years old'\n\n  it 'should handle really short comma separated phrases correctly', ->\n    xml = '<IshmaelResponse>I like <Ns_CommaSeparatedPhrases><NS_Phrase>apples</ns_Phrase></ns_CommaSeparatedPhrases></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'I like apples'\n\n  it 'should handle short simple comma separated phrases correctly', ->\n    xml = '<IshmaelResponse>I like <ns_CommaSeparatedPhrases><ns_Phrase>apples</ns_Phrase><ns_Phrase>oranges</ns_Phrase></ns_CommaSeparatedPhrases></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'I like apples and oranges'\n\n  it 'should handle nested simple comma separated phrases correctly', ->\n    xml = '<IshmaelResponse>I like <ns_CommaSeparatedPhrases><ns_phrase><ns_Phrase><ns_Phrase>apples</ns_Phrase></ns_phrase></ns_phrase><ns_Phrase>oranges</ns_Phrase></ns_CommaSeparatedPhrases></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'I like apples and oranges'\n\n  it 'should handle simple comma separated phrases correctly', ->\n    xml = '<IshmaelResponse>I like <ns_CommaSeparatedPhrases><ns_Phrase>apples</ns_Phrase><ns_Phrase>oranges</ns_Phrase><ns_Phrase>bananas</ns_Phrase></ns_CommaSeparatedPhrases></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'I like apples, oranges, and bananas'\n\n  it 'should handle multiple comma separated phrases correctly', ->\n    xml = '<IshmaelResponse>I like <ns_CommaSeparatedPhrases><ns_Phrase>apples</ns_Phrase><ns_Phrase>oranges</ns_Phrase><ns_Phrase>bananas</ns_Phrase></ns_CommaSeparatedPhrases> and I dislike <ns_CommaSeparatedPhrases><ns_Phrase>war</ns_Phrase><ns_Phrase>death</ns_Phrase><ns_Phrase>disease</ns_Phrase><ns_Phrase>poverty</ns_Phrase></ns_CommaSeparatedPhrases></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'I like apples, oranges, and bananas and I dislike war, death, disease, and poverty'\n\n  it 'should handle phrases with both nested phrases and content', ->\n    xml = '<IshmaelResponse><ns_sentence><ns_commaseparatedphrases><ns_phrase>the firm expanded its <ns_phrase><scalar nativetype=\"str\" scalartype=\"String\">Atlanta, GA</scalar></ns_phrase> office by<scalar nativetype=\"int\" scalartype=\"Count\">3</scalar></ns_phrase><ns_phrase>the firm expanded its<ns_phrase><scalar nativetype=\"str\" scalartype=\"String\">Bangkok, Thailand</scalar></ns_phrase>office by<scalar nativetype=\"int\" scalartype=\"Count\">1</scalar></ns_phrase><ns_phrase><scalar nativetype=\"int\" scalartype=\"Count\">2</scalar><ns_phrase>were</ns_phrase>added to the<ns_phrase><scalar nativetype=\"str\" scalartype=\"String\">Miami, FL</scalar></ns_phrase>office</ns_phrase><ns_phrase><scalar nativetype=\"int\" scalartype=\"Count\">6</scalar><ns_phrase>were</ns_phrase>added to the<ns_phrase><scalar nativetype=\"str\" scalartype=\"String\">Richmond, VA</scalar></ns_phrase>office</ns_phrase></ns_commaseparatedphrases></ns_sentence></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'the firm expanded its Atlanta, GA office by 3, the firm expanded its Bangkok, Thailand office by 1, 2 were added to the Miami, FL office, and 6 were added to the Richmond, VA office'\n\n  it 'should add spaces before CSPs if they are missing', ->\n    xml = '<IshmaelResponse><ns_sentence><ns_phrase>Nate</ns_phrase><ns_CommaSeparatedPhrases><ns_phrase>kicked the ball</ns_phrase><ns_phrase>scored the goal</ns_phrase></ns_CommaSeparatedPhrases></ns_sentence></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'Nate kicked the ball and scored the goal'\n\n  it 'should add spaces before 1-element CSPs if they are missing', ->\n    xml = '<IshmaelResponse><ns_sentence><ns_phrase>Nate</ns_phrase><ns_CommaSeparatedPhrases><ns_phrase>kicked the ball</ns_phrase></ns_CommaSeparatedPhrases></ns_sentence></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'Nate kicked the ball'\n\n  it 'should correctly space even if nodes start with punctuation', ->\n    xml = 'IshmaelResponse><ns_sentence><ns_commaseparatedphrases><ns_Phrase>hello<ns_scalar scalartype=\"String\" nativetype=\"str\">!</ns_scalar>how are you</ns_Phrase></ns_commaseparatedphrases></ns_sentence></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'hello! how are you'\n\n  it 'should remove extra spaces between nodes', ->\n    xml = 'IshmaelResponse><ns_sentence><ns_commaseparatedphrases><ns_Phrase> hello   <ns_scalar scalartype=\"String\" nativetype=\"str\"> !\\n </ns_scalar>how are you  <ns_scalar scalartype=\"String\" nativetype=\"str\"> ??\\n </ns_scalar> </ns_Phrase></ns_commaseparatedphrases></ns_sentence></IshmaelResponse>'\n    styled = stylebooks.style xml\n    ($ styled).text().should.equal 'hello! how are you??'\n\ndescribe 'render', ->\n  it 'should remove doubled containers', ->\n    xml = '<IshmaelResponse><ns_Sentence class=\"container\"><ns_Sentence>Hello, world!</ns_Sentence></ns_Sentence></IshmaelResponse>'\n    rendered = stylebooks.render xml\n    ($ rendered).html().should.equal '<ns_sentence>Hello, world!</ns_sentence>'\n\n  it 'should remove drop phrases and scalars', ->\n    xml = '<IshmaelResponse><ns_Sentence class=\"container\"><ns_Sentence><ns_Phrase>Hello</ns_Phrase>, <ns_Scalar>world!</ns_Scalar></ns_Sentence></ns_Sentence></IshmaelResponse>'\n    rendered = stylebooks.render xml\n    ($ rendered).html().should.equal '<ns_sentence>Hello, world!</ns_sentence>'\n\n  it 'should add spaces and punctuation after sentences, and capitals at the start', ->\n    xml = '<IshmaelResponse><ns_Sentence class=\"container\"><ns_Sentence><ns_Phrase>Hello</ns_Phrase>, <ns_Scalar>world</ns_Scalar></ns_Sentence></ns_Sentence><ns_Sentence>goodnight, moon!</ns_Sentence></IshmaelResponse>'\n    rendered = stylebooks.render xml\n    ($ rendered).html().should.equal '<ns_sentence>Hello, world.  </ns_sentence><ns_sentence>Goodnight, moon!</ns_sentence>'\n\n  it 'should not die on empty sentences', ->\n    xml = '<IshmaelResponse><ns_Sentence></ns_Sentence></IshmaelResponse>'\n    rendered = stylebooks.render xml\n    ($ rendered).html().should.equal '<ns_sentence></ns_sentence>'\n\ndescribe 'currency styling', ->\n  beforeEach ->\n    shared.beforeEach.apply @\n    @stylebook =\n      rules: [\n        match:\n          selector: '[scalarType=Int]'\n        action:\n          prefix: '$CURRENCY_SYMBOL$'\n      ]\n    @bintSet = @njs.newBlueprintSetType\n      name: 'test'\n      arguments: [\n        name: 'person'\n        type: @person\n      ]\n      blueprints: ['I am $person.age']\n      contentType: @sentence\n    @bintSet.update()\n    @project.addConfig @bintSet.getJSON()\n    @ibintSet = @project.getType @bintSet.qid\n    @iperson = @project.getType @person.qid\n    @instance = @story.createModel @iperson,\n      age: 42\n\n  it 'should handle US currency', ->\n    @story.with @ibintSet.mainArgName, @instance, => @ibintSet.write @story\n    xml = @story.toXML()\n\n    context = JSON.parse ($ 'ns_sentence', xml).attr 'context'\n    context.locale.should.equal 'en_US'\n\n    styled = stylebooks.style xml, @stylebook\n    ($ styled).text().should.equal 'I am $42'\n\n  it 'should handle \"Canadian\" currency', ->\n    @bintSet.locale = 'Eval(\"en_CA-moodys\")'\n    @bintSet.update()\n    @project.addConfig @bintSet.getJSON()\n    @ibintSet = @project.getType @bintSet.qid\n    @story.with @ibintSet.mainArgName, @instance, => @ibintSet.write @story\n    xml = @story.toXML()\n\n    context = JSON.parse ($ 'ns_sentence', xml).attr 'context'\n    context.locale.should.equal 'en_CA-moodys'\n\n    styled = stylebooks.style xml, @stylebook\n    ($ styled).text().should.equal 'I am C$42'\n\n  it 'should handle nested \"Canadian\" currency', ->\n    node = @njs.newContentNodeType\n      name: 'Node'\n      arguments: [\n        name: 'person'\n        type: @personModel\n      ]\n      contentType: @sentence\n      branches: [\n        contentBlock: @bintSet\n      ]\n      locale: 'Eval(\"en_CA-moodys\")'\n    node.update()\n    @project.addConfig node.getJSON()\n    inode = @project.getType node.qid\n    @story.with inode.mainArgName, @instance, => inode.write @story\n    xml = @story.toXML()\n\n    styled = stylebooks.style xml, @stylebook\n    ($ styled).text().should.equal 'I am C$42'\n",
					"file": "/Users/anelson/narr/ns_node_packages/ishmael/test/unit/stylebooks-test.coffee",
					"file_size": 17760,
					"file_write_time": 130387078440000000,
					"settings":
					{
						"buffer_size": 17761,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"command_palette":
			{
				"height": 392.0,
				"selected_items":
				[
					[
						"a",
						"Project: Add Folder"
					],
					[
						"ad",
						"Project: Add Folder"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"add",
						"Project: Add Folder"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 167.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/anelson/workspace/python/silly.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/decorators.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/ishmael_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/v2_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/ns_prop.py.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/factories.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
				"/Users/anelson/narr/ns_lib/src/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/server.py",
				"/Users/anelson/workspace/python/wordcount.py",
				"/Users/anelson/workspace/c++/lambdas/hello_lambda.cpp",
				"/Users/anelson/workspace/languages/llama/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/more on traits.md",
				"/Users/anelson/workspace/languages/llama/thoughts/print module",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/banking/bank_intel/derivations_overdue.yaml",
				"/Users/anelson/narr/ns_services/ns_workflow/dev_guide.md",
				"/Users/anelson/.ssh/config",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/notification_schedules.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/encodings/string_escape.py",
				"/Users/anelson/narr/ns_services/ns_workflow/setup.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/testsuite/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/raven/transport/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_delivery_plugins/http_delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/celery/task/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/https_connection.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_db/factory/happybase_table_factory.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/test_data/hello.docx",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/v2_sample_request.json",
				"/Users/anelson/narr/ns_services/ns_workflow/Vagrantfile",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring_cache.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/author_config_fixture.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/aws_util.py",
				"/Users/anelson/narr/ns_services/ns_workflow/application.log",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/functional/workflow_outofband_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/wftest",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/delivery_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/charting_test.py",
				"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/rendering_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/decorators_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/v2/job_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/monitoring/feed_aggregator.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/uwsgi/ns_workflow.yaml.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/doc_gen_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/dependency_links.txt",
				"/Users/anelson/workspace/languages/llama/thoughts/Enforcing functional purity in Llama.md",
				"/usr/local/Library/Formula/imagemagick.rb",
				"/Users/anelson/workspace/languages/llama/src/EvaluatorLib.hs",
				"/Users/anelson/narr/ns_services/ns_workflow/test-requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/services/data_engine_client.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/data_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_data_btn/mongoeng/football/ingest_team_names.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/ishmael.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/config/install-sh",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with member variables.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/text.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/esb_config.py",
				"/Users/anelson/narr/ns_services/ns_workflow/CHANGELOG.md",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/coverage/htmlfiles/coverage_html.js",
				"/Users/anelson/workspace/languages/llama/src/TypeChecker.hs",
				"/Users/anelson/narr/misc/interview notes/Frederic Zapata",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/resize_ebs_instance.py",
				"/Users/anelson/workspace/languages/llama/thoughts/blocks.md",
				"/Users/anelson/workspace/languages/llama/src/Parser.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/src/types/instances.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/instances.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/inline-style-tag.html",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/asia/ho_chi_minh.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/code-block-html-escape.html",
				"/Users/anelson/narr/ns_apps/src/backdrop/static/js/ishmael.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/derivations.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/libyaml/deps/yaml/src/tests/example-deconstructor-alt.c",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/antarctica/davis.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/america/puerto_rico.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/package.json",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/ishmael.js",
				"/Users/anelson/zsh-config/extras.sh",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/jade/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/uglify-js/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/test/test_underscore/utility.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/lib/properties/unicodeRange.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/request/node_modules/hawk/test/uri.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/Rakefile",
				"/Users/anelson/narr/misc/coffeescript/string_dist.coffee",
				"/Users/anelson/workspace/languages/llama/thoughts/compile to js.md",
				"/Users/anelson/workspace/languages/llama/src/find.md",
				"/Users/anelson/workspace/haskell/test.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/scrimshaw.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/scratch.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment/sauce_connect.log",
				"/Users/anelson/narr/ns_node_packages/ishmael/snake.cfg",
				"/Users/anelson/workspace/languages/llama/thoughts/Different types of variable definitions.md",
				"/Users/anelson/workspace/languages/llama/thoughts/json and dictionary lookups",
				"/Users/anelson/narr/ns_quiver/client/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/mergesort.llm.hs",
				"/Users/anelson/workspace/languages/llama/thoughts/todo.md",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with shared fields"
			],
			"find":
			{
				"height": 24.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/Users/anelson/narr/ns_node_packages/ishmael/test/unit",
					"/Users/anelson/narr/ns_node_packages/narrwhal",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/ishmael"
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"only",
					"slip",
					"Envir",
					"Environment",
					"MODULES_DIR",
					"ishmael",
					"write",
					"self.addEventListener",
					"addEventListener",
					"Worker",
					"addEv",
					"setD",
					"setupPequod",
					"setupIshmael",
					"\"",
					"xml_to_",
					"\"",
					"deprecated",
					"get_replacements",
					"xml_to_charts",
					"ClientException",
					"self.client.",
					"self.",
					"polyp_host",
					"self.",
					"self, ",
					"_xml_to",
					"charts",
					"qid_to_content",
					"self, ",
					"build_charts",
					"self.",
					"caches",
					"fullP",
					"getFeature",
					"length",
					"newFeature",
					"handle",
					"resolve",
					"getFeature",
					"name",
					"getFeatures",
					"child",
					"getFea",
					"get",
					"coffee",
					"model",
					"resolve",
					"maxWrittenCount",
					"getFeature",
					"context",
					"handleMiss",
					"handleMissing",
					"handle",
					"Test ",
					"portfo",
					"@recurse",
					"compile",
					"total_return",
					"computeClosure",
					"getSymT",
					"log'",
					"Render Ty",
					"log'",
					"unify",
					"builtI",
					"runTypingWi",
					"defaultState",
					"pParens",
					"pTerm",
					"pLambda",
					"numNumOp",
					"whoo",
					"pushWith",
					"=>",
					"SymbolTable",
					"symTable",
					"VTupl",
					"throwError",
					"throwError'",
					"throwErrorC",
					"TypingError",
					"litTyp",
					"Int",
					"setType",
					"pExprO",
					"ziffyDiffy",
					"pBody",
					"pDefine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"self.modules_dir",
					"'",
					"ServerException",
					"",
					"Tester ",
					"@rec",
					"defaultTypingState",
					"numBoolOp",
					"TypeTable",
					"ValueTable",
					"vTable",
					"throwError1",
					"throwErrorC",
					"ErrorList",
					"Num",
					"poop"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_node_packages/ishmael"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/anelson/narr/ns_node_packages/ishmael/src/stylebooks.coffee",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 10384,
								"regions":
								{
								},
								"selection":
								[
									[
										9123,
										9123
									]
								],
								"settings":
								{
									"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3264.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Users/anelson/narr/ns_node_packages/ishmael/lib/project.js",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 4149,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 302,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												185,
												189
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										177,
										177
									]
								],
								"settings":
								{
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 1,
									"result_base_dir": "",
									"result_file_regex": "^([A-Za-z\\\\/<].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						}
					]
				},
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 3,
							"file": "/Users/anelson/narr/ns_node_packages/ishmael/test/unit/stylebooks-test.coffee",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 17761,
								"regions":
								{
								},
								"selection":
								[
									[
										11663,
										11663
									]
								],
								"settings":
								{
									"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 449.0,
								"translation.y": 4978.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 24.0
			},
			"input":
			{
				"height": 34.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 106.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.haskell_error_checker":
			{
				"height": 118.0
			},
			"output.haskell_sublime_load":
			{
				"height": 118.0
			},
			"position": "0 0 1916 878 0 0 1440 878 ",
			"project": "",
			"replace":
			{
				"height": 44.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"docx",
						"ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py"
					],
					[
						"ns_pro",
						"ns_workflow/_gb/gbtemplate/ns_prop.py.mustache"
					],
					[
						"server.py",
						"ns_workflow/src/ns_workflow/server.py"
					],
					[
						"htt",
						"vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py"
					],
					[
						"server",
						"tests/unit/server_test.py"
					],
					[
						"req",
						"requirements.txt"
					],
					[
						"autho",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"v2_test",
						"tests/integ/v2_test.py"
					],
					[
						"authoring",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"authori",
						"src/ns_workflow/plugins/authoring.py"
					],
					[
						"fac",
						"src/ns_workflow/factories.py"
					],
					[
						"doc",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"doc_ge",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"engine",
						"vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py"
					],
					[
						"factor",
						"src/ns_workflow/factories.py"
					],
					[
						"deco",
						"src/ns_workflow/decorators.py"
					],
					[
						"decot",
						"tests/unit/decorators_test.py"
					],
					[
						"render",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"deliv",
						"tests/unit/plugins/delivery_test.py"
					],
					[
						"charting_",
						"tests/unit/plugins/charting_test.py"
					],
					[
						"ns_",
						"test_configs/ns_prop.py"
					],
					[
						"charting",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"decore",
						"tests/unit/decorators_test.py"
					],
					[
						"doc_",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"ishm",
						"tests/integ/ishmael_test.py"
					],
					[
						"rendering",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"char",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"instances",
						"ishmael/src/types/instances.coffee"
					],
					[
						"proj",
						"ishmael/lib/project.js"
					],
					[
						"instan",
						"ishmael/lib/types/instances.js"
					],
					[
						"scrimsh",
						"ishmael/src/types/scrimshaw.coffee"
					],
					[
						"ev",
						"Evaluator.hs"
					],
					[
						"parserte",
						"ParserTests.hs"
					],
					[
						"eva",
						"Evaluator.hs"
					],
					[
						"typ",
						"TypeChecker.hs"
					],
					[
						"par",
						"ParserTests.hs"
					],
					[
						"te",
						"Tests.hs"
					],
					[
						"p",
						"ParserTests.hs"
					],
					[
						"t",
						"TypeChecker.hs"
					],
					[
						"com",
						"Common.hs"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 187.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 39,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"modu",
						"module_name"
					],
					[
						"Mod",
						"ModuleNotFoundError"
					],
					[
						"a",
						"attr_name"
					],
					[
						"__g",
						"__getattribute__"
					],
					[
						"mo",
						"modules_dir"
					],
					[
						"modules",
						"modules_dir"
					],
					[
						"__get",
						"__getattribute"
					],
					[
						"modul",
						"modules_dir"
					],
					[
						"data",
						"data_key"
					],
					[
						"au",
						"author_configs_version"
					],
					[
						"ass",
						"assert_docx_equal"
					],
					[
						"some",
						"some_chart"
					],
					[
						"assert",
						"assert_called_with"
					],
					[
						"Ish",
						"IshmaelResponse"
					],
					[
						"m_repl",
						"m_replacements"
					],
					[
						"render",
						"rendering_plugins"
					],
					[
						"polyp",
						"polyp_host"
					],
					[
						"additional",
						"additional_arguments"
					],
					[
						"add",
						"additional_arguments"
					],
					[
						"make",
						"make_charts"
					],
					[
						"poly",
						"polyp_host"
					],
					[
						"ba",
						"base64-encoded"
					],
					[
						"b",
						"base64"
					],
					[
						"build",
						"build_charts"
					],
					[
						"bool",
						"boolQModel"
					],
					[
						"fea",
						"featureNamesToModelNames"
					],
					[
						"feat",
						"featureNameMapBuilt"
					],
					[
						"model",
						"modelQid"
					],
					[
						"J",
						"JObj"
					],
					[
						"Oo",
						"OperationType"
					],
					[
						"Over",
						"OverFlowException"
					],
					[
						"Var",
						"VArg"
					],
					[
						"Val",
						"ValueTable"
					],
					[
						"der",
						"derefArg"
					],
					[
						"def",
						"defaultTypingState"
					],
					[
						"run",
						"runTypingWith"
					],
					[
						"uni",
						"unitV"
					],
					[
						"flow",
						"flowTests"
					],
					[
						"pri",
						"printVal"
					],
					[
						"thro",
						"throwErrorC"
					],
					[
						"th",
						"throwErrorC"
					],
					[
						"defa",
						"defaultFrame"
					],
					[
						"VA",
						"VArg"
					],
					[
						"type",
						"typeAndEval"
					],
					[
						"get",
						"getExprName"
					],
					[
						"thr",
						"throwErrorC"
					],
					[
						"Er",
						"ErrorList"
					],
					[
						"inst",
						"instantiated"
					],
					[
						"ns",
						"nameSpaceTable"
					],
					[
						"nam",
						"nameSpaceTable"
					],
					[
						"full",
						"fullName"
					],
					[
						"name",
						"nameSpaceTable"
					],
					[
						"pExpr",
						"pExprOrBlock"
					],
					[
						"rend",
						"renderNamespace"
					],
					[
						"Nam",
						"NameSpace"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/anelson/narr/ns_node_packages/ishmael/gulpfile.js",
					"settings":
					{
						"buffer_size": 1978,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Searching 7947 files for \"toXML\" (case sensitive)\n\n/Users/anelson/narr/ns_node_packages/ishmael/lib/cli.js:\n   45    data = getData();\n   46    story = main.writeStory(project, data, argv.qid);\n   47:   return console.log(pd.xml(story.toXML()));\n   48  };\n   49  \n\n/Users/anelson/narr/ns_node_packages/ishmael/lib/main.js:\n   70        story.clear();\n   71        config._writeBlueprint(blueprint, story);\n   72:       results.push(story.toXML());\n   73      }\n   74      return results;\n   ..\n   76      config.write(story);\n   77      results = config.determineBindings(story);\n   78:     results.content = story.toXML();\n   79      return results;\n   80    } else {\n\n/Users/anelson/narr/ns_node_packages/ishmael/lib/story.js:\n  475    };\n  476  \n  477:   Story.prototype.toXML = function() {\n  478      var currNode, node, root, spaces, _i, _len, _ref1, _ref2;\n  479      spaces = '                ';\n  ...\n  554      }\n  555      return {\n  556:       xml: this.toXML(),\n  557        traces: traces,\n  558        stacks: stacks\n\n/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/node_modules/.bin/ishmael:\n   31    data = getData()\n   32    story = main.writeStory project, data, argv.qid\n   33:   console.log pd.xml story.toXML()\n   34  \n   35  _evaluate = ->\n\n/Users/anelson/narr/ns_node_packages/ishmael/src/cli.coffee:\n   31    data = getData()\n   32    story = main.writeStory project, data, argv.qid\n   33:   console.log pd.xml story.toXML()\n   34  \n   35  _evaluate = ->\n\n/Users/anelson/narr/ns_node_packages/ishmael/src/main.coffee:\n   50        story.clear()\n   51        config._writeBlueprint blueprint, story\n   52:       results.push story.toXML()\n   53      results\n   54    else if config.configType is 'goal'\n   55      config.write story\n   56      results = config.determineBindings story\n   57:     results.content = story.toXML()\n   58      results\n   59    else\n\n/Users/anelson/narr/ns_node_packages/ishmael/src/story.coffee:\n  369  \n  370    # This returns an XML-formatted string of the nodes\n  371:   toXML: ->\n  372      spaces = '                '\n  373      root = xml.create 'IshmaelResponse',\n  ...\n  418        if node.meta?.write_stack\n  419          stacks[node.writeid] = node.meta.write_stack\n  420:     xml: @toXML()\n  421      traces: traces\n  422      stacks: stacks\n\n/Users/anelson/narr/ns_node_packages/ishmael/test/unit/blueprintSet-test.coffee:\n   69  \n   70      @story.with ibintSet.mainArgName, @instance, => ibintSet.write @story\n   71:     root = $ @story.toXML()\n   72      context = JSON.parse ($ 'ns_sentence', root).attr 'context'\n   73      context.locale.should.equal 42\n\n/Users/anelson/narr/ns_node_packages/ishmael/test/unit/charts-test.coffee:\n  160        @story.with iChart.mainArgName, @instance, =>\n  161          iChart.write @story\n  162:       xml = @story.toXML()\n  163        text = ($ 'ns_chart', xml).text()\n  164        chartData = JSON.parse text\n\n/Users/anelson/narr/ns_node_packages/ishmael/test/unit/contentFamilies-test.coffee:\n  119  \n  120      @story.with ifamily.mainArgName, @instance, => ifamily.write @story\n  121:     root = ($ @story.toXML())\n  122      context = JSON.parse ($ 'ns_sentence', root).attr 'context'\n  123  \n\n/Users/anelson/narr/ns_node_packages/ishmael/test/unit/story-test.coffee:\n   45        name_once: 'Threepwood'\n   46  \n   47:   describe 'toXML', ->\n   48      it 'should return valid xml when it is empty', ->\n   49:       xml = @story.toXML()\n   50        xml.should.contain '<IshmaelResponse/>'\n   51  \n   ..\n   53        ibintSet = @project.getType @bintSet.qid\n   54        @story.with ibintSet.mainArgName, @instance, => ibintSet.write @story\n   55:       node = $ @story.toXML()\n   56        node = $ node.get(0).childNodes[0]\n   57        (node.attr 'id').should.equal @bintSet._id\n\n/Users/anelson/narr/ns_node_packages/ishmael/test/unit/stylebooks-test.coffee:\n  405    it 'should handle US currency', ->\n  406      @story.with @ibintSet.mainArgName, @instance, => @ibintSet.write @story\n  407:     xml = @story.toXML()\n  408  \n  409      context = JSON.parse ($ 'ns_sentence', xml).attr 'context'\n  ...\n  419      @ibintSet = @project.getType @bintSet.qid\n  420      @story.with @ibintSet.mainArgName, @instance, => @ibintSet.write @story\n  421:     xml = @story.toXML()\n  422  \n  423      context = JSON.parse ($ 'ns_sentence', xml).attr 'context'\n  ...\n  443      inode = @project.getType node.qid\n  444      @story.with inode.mainArgName, @instance, => inode.write @story\n  445:     xml = @story.toXML()\n  446  \n  447      styled = stylebooks.style xml, @stylebook\n\n/Users/anelson/narr/ns_node_packages/ishmael/tests-lib/unit/blueprintSet-test.js:\n   90        };\n   91      })(this));\n   92:     root = $(this.story.toXML());\n   93      context = JSON.parse(($('ns_sentence', root)).attr('context'));\n   94      return context.locale.should.equal(42);\n\n/Users/anelson/narr/ns_node_packages/ishmael/tests-lib/unit/charts-test.js:\n  205          };\n  206        })(this));\n  207:       xml = this.story.toXML();\n  208        text = ($('ns_chart', xml)).text();\n  209        chartData = JSON.parse(text);\n\n/Users/anelson/narr/ns_node_packages/ishmael/tests-lib/unit/contentFamilies-test.js:\n  168        };\n  169      })(this));\n  170:     root = $(this.story.toXML());\n  171      return context = JSON.parse(($('ns_sentence', root)).attr('context'));\n  172    });\n\n/Users/anelson/narr/ns_node_packages/ishmael/tests-lib/unit/story-test.js:\n   59      });\n   60    });\n   61:   describe('toXML', function() {\n   62      it('should return valid xml when it is empty', function() {\n   63        var xml;\n   64:       xml = this.story.toXML();\n   65        return xml.should.contain('<IshmaelResponse/>');\n   66      });\n   ..\n   73          };\n   74        })(this));\n   75:       node = $(this.story.toXML());\n   76        node = $(node.get(0).childNodes[0]);\n   77        (node.attr('id')).should.equal(this.bintSet._id);\n\n/Users/anelson/narr/ns_node_packages/ishmael/tests-lib/unit/stylebooks-test.js:\n  503        };\n  504      })(this));\n  505:     xml = this.story.toXML();\n  506      context = JSON.parse(($('ns_sentence', xml)).attr('context'));\n  507      context.locale.should.equal('en_US');\n  ...\n  520        };\n  521      })(this));\n  522:     xml = this.story.toXML();\n  523      context = JSON.parse(($('ns_sentence', xml)).attr('context'));\n  524      context.locale.should.equal('en_CA-moodys');\n  ...\n  552        };\n  553      })(this));\n  554:     xml = this.story.toXML();\n  555      styled = stylebooks.style(xml, this.stylebook);\n  556      return ($(styled)).text().should.equal('I am C$42');\n\n29 matches across 17 files\n",
					"settings":
					{
						"buffer_size": 6679,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"file": "/Users/anelson/narr/ns_node_packages/ishmael/src/story.coffee",
					"settings":
					{
						"buffer_size": 15173,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"command_palette":
			{
				"height": 147.0,
				"selected_items":
				[
					[
						"add",
						"Project: Add Folder"
					],
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"a",
						"Project: Add Folder"
					],
					[
						"ad",
						"Project: Add Folder"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					]
				],
				"width": 467.0
			},
			"console":
			{
				"height": 167.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/anelson/workspace/languages/llama/src/EvaluatorLib.hs",
				"/Users/anelson/zsh-config/common.sh",
				"/Users/anelson/.config/fish/config.fish",
				"/Users/anelson/workspace/languages/llama/src/EvaluatorLib.hi",
				"/Users/anelson/workspace/languages/llama/src/Evaluator.hi",
				"/Users/anelson/workspace/python/silly.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/decorators.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/ishmael_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/v2_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/ns_prop.py.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/charting.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/factories.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/plugins/authoring.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/server_test.py",
				"/Users/anelson/narr/ns_lib/src/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/server.py",
				"/Users/anelson/workspace/python/wordcount.py",
				"/Users/anelson/workspace/c++/lambdas/hello_lambda.cpp",
				"/Users/anelson/workspace/languages/llama/README.md",
				"/Users/anelson/workspace/languages/llama/thoughts/more on traits.md",
				"/Users/anelson/workspace/languages/llama/thoughts/print module",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docx.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/configs/banking/bank_intel/derivations_overdue.yaml",
				"/Users/anelson/narr/ns_services/ns_workflow/dev_guide.md",
				"/Users/anelson/.ssh/config",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/ns_prop.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/common/notification_schedules.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/encodings/string_escape.py",
				"/Users/anelson/narr/ns_services/ns_workflow/setup.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/testsuite/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/raven/transport/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_delivery_plugins/http_delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/celery/task/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/boto/https_connection.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/werkzeug/http.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_db/factory/happybase_table_factory.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/integ/test_data/hello.docx",
				"/Users/anelson/narr/ns_services/ns_workflow/test_configs/v2_sample_request.json",
				"/Users/anelson/narr/ns_services/ns_workflow/Vagrantfile",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/authoring_cache.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_ci/fixtures/author_config_fixture.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/aws_util.py",
				"/Users/anelson/narr/ns_services/ns_workflow/application.log",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/functional/workflow_outofband_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/bin/wftest",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/delivery_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/doc_gen.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/charting_test.py",
				"/Users/anelson/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/rendering_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/decorators_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns/narrwhal/api/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/v2/job_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/v2/engine.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/monitoring/feed_aggregator.py",
				"/Users/anelson/narr/ns_services/ns_workflow/_gb/gbtemplate/uwsgi/ns_workflow.yaml.mustache",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/plugins/doc_gen_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/delivery.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow.egg-info/dependency_links.txt",
				"/Users/anelson/workspace/languages/llama/thoughts/Enforcing functional purity in Llama.md",
				"/usr/local/Library/Formula/imagemagick.rb",
				"/Users/anelson/narr/ns_services/ns_workflow/test-requirements.txt",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_utils/resources/services/data_engine_client.py",
				"/Users/anelson/narr/ns_services/ns_workflow/tests/unit/data_engine_test.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ns_data_btn/mongoeng/football/ingest_team_names.py",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/ishmael.py",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/config/install-sh",
				"/Users/anelson/workspace/languages/llama/thoughts/objects with member variables.md",
				"/Users/anelson/narr/ns_services/ns_workflow/src/ns_workflow/plugins/rendering_plugins/text.py",
				"/Users/anelson/narr/ns_services/ns_workflow/test_ci_configs/esb_config.py",
				"/Users/anelson/narr/ns_services/ns_workflow/CHANGELOG.md",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/coverage/htmlfiles/coverage_html.js",
				"/Users/anelson/workspace/languages/llama/src/TypeChecker.hs",
				"/Users/anelson/narr/misc/interview notes/Frederic Zapata",
				"/Users/anelson/narr/ns_services/ns_workflow/vendor/python/lib/python2.7/site-packages/ops/resize_ebs_instance.py",
				"/Users/anelson/workspace/languages/llama/thoughts/blocks.md",
				"/Users/anelson/workspace/languages/llama/src/Parser.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/src/types/instances.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/instances.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/inline-style-tag.html",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/asia/ho_chi_minh.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/showdown/test/cases/code-block-html-escape.html",
				"/Users/anelson/narr/ns_apps/src/backdrop/static/js/ishmael.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/derivations.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/libyaml/deps/yaml/src/tests/example-deconstructor-alt.c",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/antarctica/davis.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment-timezone/tests/america/puerto_rico.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/package.json",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/ishmael.js",
				"/Users/anelson/zsh-config/extras.sh",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/jade/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/node_modules/uglify-js/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/test/test_underscore/utility.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/mocha/lib/utils.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/groc/lib/utils.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/src/quiver/common/util.coffee",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/quiver/common/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/testling/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/test/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/browserify/builtins/util.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/lib/properties/unicodeRange.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/jquery/node_modules/jsdom/node_modules/request/node_modules/hawk/test/uri.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/node_modules/underscore.string/Rakefile",
				"/Users/anelson/narr/misc/coffeescript/string_dist.coffee",
				"/Users/anelson/workspace/languages/llama/thoughts/compile to js.md",
				"/Users/anelson/workspace/languages/llama/src/find.md",
				"/Users/anelson/workspace/haskell/test.hs",
				"/Users/anelson/narr/ns_node_packages/ishmael/lib/types/scrimshaw.js",
				"/Users/anelson/narr/ns_node_packages/narrwhal/lib/scratch.js",
				"/Users/anelson/narr/ns_node_packages/ishmael/node_modules/moment/sauce_connect.log",
				"/Users/anelson/narr/ns_node_packages/ishmael/snake.cfg",
				"/Users/anelson/workspace/languages/llama/thoughts/Different types of variable definitions.md",
				"/Users/anelson/workspace/languages/llama/thoughts/json and dictionary lookups"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 93.0,
				"where_history":
				[
					"/Users/anelson/narr/ns_node_packages/ishmael",
					"/Users/anelson/narr/ns_node_packages/ishmael/test/unit",
					"/Users/anelson/narr/ns_node_packages/narrwhal",
					"/Users/anelson/narr/ns_services/ns_workflow",
					"/Users/anelson/narr/ns_node_packages/ishmael"
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"spaces",
					"toXML",
					" && ",
					"$1",
					"alias ([a-zA-Z0-9]+)=['\"]([^'\"]+)['\"]",
					"only",
					"slip",
					"Envir",
					"Environment",
					"MODULES_DIR",
					"ishmael",
					"write",
					"self.addEventListener",
					"addEventListener",
					"Worker",
					"addEv",
					"setD",
					"setupPequod",
					"setupIshmael",
					"\"",
					"xml_to_",
					"\"",
					"deprecated",
					"get_replacements",
					"xml_to_charts",
					"ClientException",
					"self.client.",
					"self.",
					"polyp_host",
					"self.",
					"self, ",
					"_xml_to",
					"charts",
					"qid_to_content",
					"self, ",
					"build_charts",
					"self.",
					"caches",
					"fullP",
					"getFeature",
					"length",
					"newFeature",
					"handle",
					"resolve",
					"getFeature",
					"name",
					"getFeatures",
					"child",
					"getFea",
					"get",
					"coffee",
					"model",
					"resolve",
					"maxWrittenCount",
					"getFeature",
					"context",
					"handleMiss",
					"handleMissing",
					"handle",
					"Test ",
					"portfo",
					"@recurse",
					"compile",
					"total_return",
					"computeClosure",
					"getSymT",
					"log'",
					"Render Ty",
					"log'",
					"unify",
					"builtI",
					"runTypingWi",
					"defaultState",
					"pParens",
					"pTerm",
					"pLambda",
					"numNumOp",
					"whoo",
					"pushWith",
					"=>",
					"SymbolTable",
					"symTable",
					"VTupl",
					"throwError",
					"throwError'",
					"throwErrorC",
					"TypingError",
					"litTyp",
					"Int",
					"setType",
					"pExprO",
					"ziffyDiffy",
					"pBody",
					"pDefine"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"; and ",
					"$argv[1]",
					"set $1 $2",
					"self.modules_dir",
					"'",
					"ServerException",
					"",
					"Tester ",
					"@rec",
					"defaultTypingState",
					"numBoolOp",
					"TypeTable",
					"ValueTable",
					"vTable",
					"throwError1",
					"throwErrorC",
					"ErrorList",
					"Num",
					"poop"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"follow_symlinks": true,
					"path": "/Users/anelson/narr/ns_node_packages/ishmael"
				}
			],
			"groups":
			[
				{
					"selected": 2,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/anelson/narr/ns_node_packages/ishmael/gulpfile.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1978,
								"regions":
								{
								},
								"selection":
								[
									[
										1139,
										1139
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 288.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 6679,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												235,
												240
											],
											[
												438,
												443
											],
											[
												615,
												620
											],
											[
												774,
												779
											],
											[
												966,
												971
											],
											[
												1244,
												1249
											],
											[
												1461,
												1466
											],
											[
												1674,
												1679
											],
											[
												1863,
												1868
											],
											[
												2046,
												2051
											],
											[
												2265,
												2270
											],
											[
												2523,
												2528
											],
											[
												2840,
												2845
											],
											[
												3136,
												3141
											],
											[
												3363,
												3368
											],
											[
												3461,
												3466
											],
											[
												3702,
												3707
											],
											[
												4045,
												4050
											],
											[
												4297,
												4302
											],
											[
												4533,
												4538
											],
											[
												4754,
												4759
											],
											[
												5039,
												5044
											],
											[
												5295,
												5300
											],
											[
												5523,
												5528
											],
											[
												5667,
												5672
											],
											[
												5834,
												5839
											],
											[
												6104,
												6109
											],
											[
												6308,
												6313
											],
											[
												6519,
												6524
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 1,
									"result_base_dir": "",
									"result_file_regex": "^([A-Za-z\\\\/<].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Users/anelson/narr/ns_node_packages/ishmael/src/story.coffee",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 15173,
								"regions":
								{
								},
								"selection":
								[
									[
										13424,
										13424
									]
								],
								"settings":
								{
									"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 5666.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 24.0
			},
			"input":
			{
				"height": 34.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 106.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.haskell_error_checker":
			{
				"height": 118.0
			},
			"output.haskell_sublime_load":
			{
				"height": 118.0
			},
			"position": "4 0 1916 1058 0 0 1920 1058 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
					[
						"ev",
						"src/EvaluatorLib.hs"
					],
					[
						"docx",
						"ns_workflow/vendor/python/lib/python2.7/site-packages/ns_doc_gen/docxreplace.py"
					],
					[
						"ns_pro",
						"ns_workflow/_gb/gbtemplate/ns_prop.py.mustache"
					],
					[
						"server.py",
						"ns_workflow/src/ns_workflow/server.py"
					],
					[
						"htt",
						"vendor/python/lib/python2.7/site-packages/ns_lib/util/http_endpoint.py"
					],
					[
						"server",
						"tests/unit/server_test.py"
					],
					[
						"req",
						"requirements.txt"
					],
					[
						"autho",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"v2_test",
						"tests/integ/v2_test.py"
					],
					[
						"authoring",
						"src/ns_workflow/v2/plugins/authoring.py"
					],
					[
						"authori",
						"src/ns_workflow/plugins/authoring.py"
					],
					[
						"fac",
						"src/ns_workflow/factories.py"
					],
					[
						"doc",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"doc_ge",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"engine",
						"vendor/python/lib/python2.7/site-packages/workflow/engine/v1/engine.py"
					],
					[
						"factor",
						"src/ns_workflow/factories.py"
					],
					[
						"deco",
						"src/ns_workflow/decorators.py"
					],
					[
						"decot",
						"tests/unit/decorators_test.py"
					],
					[
						"render",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"deliv",
						"tests/unit/plugins/delivery_test.py"
					],
					[
						"charting_",
						"tests/unit/plugins/charting_test.py"
					],
					[
						"ns_",
						"test_configs/ns_prop.py"
					],
					[
						"charting",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"decore",
						"tests/unit/decorators_test.py"
					],
					[
						"doc_",
						"src/ns_workflow/plugins/doc_gen.py"
					],
					[
						"ishm",
						"tests/integ/ishmael_test.py"
					],
					[
						"rendering",
						"tests/unit/plugins/rendering_test.py"
					],
					[
						"char",
						"src/ns_workflow/plugins/charting.py"
					],
					[
						"instances",
						"ishmael/src/types/instances.coffee"
					],
					[
						"proj",
						"ishmael/lib/project.js"
					],
					[
						"instan",
						"ishmael/lib/types/instances.js"
					],
					[
						"scrimsh",
						"ishmael/src/types/scrimshaw.coffee"
					],
					[
						"parserte",
						"ParserTests.hs"
					],
					[
						"eva",
						"Evaluator.hs"
					],
					[
						"typ",
						"TypeChecker.hs"
					],
					[
						"par",
						"ParserTests.hs"
					],
					[
						"te",
						"Tests.hs"
					],
					[
						"p",
						"ParserTests.hs"
					],
					[
						"t",
						"TypeChecker.hs"
					],
					[
						"com",
						"Common.hs"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 187.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 40,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
